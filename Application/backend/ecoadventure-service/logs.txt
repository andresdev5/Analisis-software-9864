
==> Audit <==
|------------|--------------------------------------|----------|-----------------------|---------|---------------------|---------------------|
|  Command   |                 Args                 | Profile  |         User          | Version |     Start Time      |      End Time       |
|------------|--------------------------------------|----------|-----------------------|---------|---------------------|---------------------|
| dashboard  |                                      | minikube | DESKTOP-0LCRH9M\white | v1.31.1 | 31 Jul 23 16:23 -05 |                     |
| start      |                                      | minikube | DESKTOP-0LCRH9M\white | v1.31.1 | 31 Jul 23 16:23 -05 |                     |
| start      |                                      | minikube | DESKTOP-0LCRH9M\white | v1.31.1 | 31 Jul 23 16:25 -05 | 31 Jul 23 16:27 -05 |
| dashboard  |                                      | minikube | DESKTOP-0LCRH9M\white | v1.31.1 | 31 Jul 23 16:28 -05 |                     |
| image      | load                                 | minikube | DESKTOP-0LCRH9M\white | v1.31.1 | 31 Jul 23 22:00 -05 | 31 Jul 23 22:03 -05 |
|            | ksprwhite/ecoadventure-service       |          |                       |         |                     |                     |
| image      | ls --format table                    | minikube | DESKTOP-0LCRH9M\white | v1.31.1 | 31 Jul 23 22:10 -05 | 31 Jul 23 22:10 -05 |
| image      | load                                 | minikube | DESKTOP-0LCRH9M\white | v1.31.1 | 31 Jul 23 22:11 -05 | 31 Jul 23 22:11 -05 |
|            | ksprwhite/ecoadventure-admin-service |          |                       |         |                     |                     |
| image      | ls --format table                    | minikube | DESKTOP-0LCRH9M\white | v1.31.1 | 31 Jul 23 22:12 -05 | 31 Jul 23 22:12 -05 |
| image      | ls --format table                    | minikube | DESKTOP-0LCRH9M\white | v1.31.1 | 31 Jul 23 22:16 -05 | 31 Jul 23 22:16 -05 |
| stop       |                                      | minikube | DESKTOP-0LCRH9M\white | v1.31.1 | 31 Jul 23 22:23 -05 | 31 Jul 23 22:23 -05 |
| start      |                                      | minikube | DESKTOP-0LCRH9M\white | v1.31.1 | 31 Jul 23 22:23 -05 | 31 Jul 23 22:24 -05 |
| image      | ls --format table                    | minikube | DESKTOP-0LCRH9M\white | v1.31.1 | 31 Jul 23 22:31 -05 | 31 Jul 23 22:31 -05 |
| ip         |                                      | minikube | DESKTOP-0LCRH9M\white | v1.31.1 | 31 Jul 23 22:43 -05 | 31 Jul 23 22:43 -05 |
| service    | ecoadventure-service                 | minikube | DESKTOP-0LCRH9M\white | v1.31.1 | 31 Jul 23 22:48 -05 |                     |
| image      | ls --format table                    | minikube | DESKTOP-0LCRH9M\white | v1.31.1 | 31 Jul 23 22:53 -05 | 31 Jul 23 22:53 -05 |
| ssh        | docker image list                    | minikube | DESKTOP-0LCRH9M\white | v1.31.1 | 31 Jul 23 22:54 -05 | 31 Jul 23 22:54 -05 |
| service    | ecoadventure-service                 | minikube | DESKTOP-0LCRH9M\white | v1.31.1 | 31 Jul 23 23:02 -05 |                     |
| service    | ecoadventure-servicekubectl          | minikube | DESKTOP-0LCRH9M\white | v1.31.1 | 31 Jul 23 23:03 -05 |                     |
|            | get services                         |          |                       |         |                     |                     |
| image      | rm                                   | minikube | DESKTOP-0LCRH9M\white | v1.31.1 | 31 Jul 23 23:07 -05 | 31 Jul 23 23:07 -05 |
|            | ksprwhite/ecoadventure-service       |          |                       |         |                     |                     |
| image      | rm                                   | minikube | DESKTOP-0LCRH9M\white | v1.31.1 | 31 Jul 23 23:08 -05 | 31 Jul 23 23:08 -05 |
|            | ksprwhite/ecoadventure-admin-service |          |                       |         |                     |                     |
| service    | ecoadventure-service-node            | minikube | DESKTOP-0LCRH9M\white | v1.31.1 | 31 Jul 23 23:32 -05 |                     |
| delete     |                                      | minikube | DESKTOP-0LCRH9M\white | v1.31.1 | 31 Jul 23 23:35 -05 | 31 Jul 23 23:36 -05 |
| start      |                                      | minikube | DESKTOP-0LCRH9M\white | v1.31.1 | 31 Jul 23 23:36 -05 | 31 Jul 23 23:37 -05 |
| service    | ecoadventure-service                 | minikube | DESKTOP-0LCRH9M\white | v1.31.1 | 31 Jul 23 23:40 -05 |                     |
| docker-env |                                      | minikube | DESKTOP-0LCRH9M\white | v1.31.1 | 31 Jul 23 23:41 -05 | 31 Jul 23 23:41 -05 |
| image      | ls --format tableminikube            | minikube | DESKTOP-0LCRH9M\white | v1.31.1 | 31 Jul 23 23:42 -05 | 31 Jul 23 23:42 -05 |
|            | image ls --format table              |          |                       |         |                     |                     |
| docker-env |                                      | minikube | DESKTOP-0LCRH9M\white | v1.31.1 | 31 Jul 23 23:43 -05 | 31 Jul 23 23:43 -05 |
| docker-env |                                      | minikube | DESKTOP-0LCRH9M\white | v1.31.1 | 31 Jul 23 23:43 -05 | 31 Jul 23 23:43 -05 |
| image      | ls --format table                    | minikube | DESKTOP-0LCRH9M\white | v1.31.1 | 31 Jul 23 23:46 -05 | 31 Jul 23 23:46 -05 |
| image      | load                                 | minikube | DESKTOP-0LCRH9M\white | v1.31.1 | 31 Jul 23 23:46 -05 | 31 Jul 23 23:48 -05 |
|            | ksprwhite/ecoadventure-admin-service |          |                       |         |                     |                     |
| service    | ecoadventure-service                 | minikube | DESKTOP-0LCRH9M\white | v1.31.1 | 31 Jul 23 23:47 -05 |                     |
| service    | ecoadventure-service                 | minikube | DESKTOP-0LCRH9M\white | v1.31.1 | 31 Jul 23 23:49 -05 |                     |
|------------|--------------------------------------|----------|-----------------------|---------|---------------------|---------------------|


==> Last Start <==
Log file created at: 2023/07/31 23:36:10
Running on machine: DESKTOP-0LCRH9M
Binary: Built with gc go1.20.6 for windows/amd64
Log line format: [IWEF]mmdd hh:mm:ss.uuuuuu threadid file:line] msg
I0731 23:36:10.542515   26664 out.go:296] Setting OutFile to fd 464 ...
I0731 23:36:10.573661   26664 out.go:309] Setting ErrFile to fd 732...
I0731 23:36:10.605354   26664 out.go:303] Setting JSON to false
I0731 23:36:10.615988   26664 start.go:128] hostinfo: {"hostname":"DESKTOP-0LCRH9M","uptime":102707,"bootTime":1690761863,"procs":383,"os":"windows","platform":"Microsoft Windows 11 Pro","platformFamily":"Standalone Workstation","platformVersion":"10.0.22621.1992 Build 22621.1992","kernelVersion":"10.0.22621.1992 Build 22621.1992","kernelArch":"x86_64","virtualizationSystem":"","virtualizationRole":"","hostId":"a1ccdab4-d52a-4fe8-ab08-8a74dda9e115"}
W0731 23:36:10.615988   26664 start.go:136] gopshost.Virtualization returned error: not implemented yet
I0731 23:36:10.620161   26664 out.go:177] 😄  minikube v1.31.1 en Microsoft Windows 11 Pro 10.0.22621.1992 Build 22621.1992
I0731 23:36:10.621243   26664 notify.go:220] Checking for updates...
I0731 23:36:10.621793   26664 driver.go:373] Setting default libvirt URI to qemu:///system
I0731 23:36:10.622345   26664 global.go:111] Querying for installed drivers using PATH=C:\Program Files\WindowsApps\Microsoft.WindowsTerminal_1.17.11461.0_x64__8wekyb3d8bbwe;C:\opt\oracle\product\21c\dbhomeXE\bin;C:\Program Files (x86)\Common Files\Oracle\Java\javapath;C:\Python311\Scripts\;C:\Python311\;C:\Program Files\Common Files\Oracle\Java\javapath;C:\Windows\system32;C:\Windows;C:\Windows\System32\Wbem;C:\Windows\System32\WindowsPowerShell\v1.0\;C:\Windows\System32\OpenSSH\;C:\Program Files (x86)\NVIDIA Corporation\PhysX\Common;C:\Program Files\NVIDIA Corporation\NVIDIA NvDLISR;C:\Program Files\Git\cmd;C:\Program Files\nodejs\;C:\ProgramData\chocolatey\bin;C:\Program Files\dotnet\;C:\Program Files\starship\bin\;C:\opt\apache-maven-3.6.3\bin;C:\Program Files\TortoiseGit\bin;C:\opt\flutter\bin;C:\opt\dart-sdk\bin;C:\Program Files\GitHub CLI\;C:\Program Files\CMake\bin;C:\Program Files\Docker\Docker\resources\bin;C:\Program Files\Kubernetes\Minikube;C:\Program Files\RedHat\Podman\;C:\Users\white\AppData\Local\pnpm;C:\Program Files\MySQL\MySQL Shell 8.0\bin\;C:\Users\white\AppData\Local\Microsoft\WindowsApps;C:\opt\Microsoft VS Code\bin;C:\Users\white\AppData\Roaming\npm;C:\opt\vivetool;C:\Users\white\.dotnet\tools;C:\Users\white\AppData\Local\Programs\Hyper\resources\bin
I0731 23:36:13.014001   26664 global.go:122] hyperv default: true priority: 8, state: {Installed:true Healthy:false Running:false NeedsImprovement:false Error:Hyper-V requires Administrator privileges Reason: Fix:Right-click the PowerShell icon and select Run as Administrator to open PowerShell in elevated mode. Doc: Version:}
I0731 23:36:13.951008   26664 podman.go:123] podman version: 4.5.0
I0731 23:36:13.951008   26664 global.go:122] podman default: true priority: 3, state: {Installed:true Healthy:true Running:false NeedsImprovement:false Error:<nil> Reason: Fix: Doc: Version:}
I0731 23:36:13.965721   26664 global.go:122] qemu2 default: true priority: 3, state: {Installed:false Healthy:false Running:false NeedsImprovement:false Error:exec: "qemu-system-x86_64": executable file not found in %!P(MISSING)ATH%!R(MISSING)eason: Fix:Install qemu-system Doc:https://minikube.sigs.k8s.io/docs/reference/drivers/qemu/ Version:}
I0731 23:36:13.965721   26664 global.go:122] ssh default: false priority: 4, state: {Installed:true Healthy:true Running:false NeedsImprovement:false Error:<nil> Reason: Fix: Doc: Version:}
I0731 23:36:13.996572   26664 global.go:122] virtualbox default: true priority: 6, state: {Installed:false Healthy:false Running:false NeedsImprovement:false Error:unable to find VBoxManage in $PATH Reason: Fix:Install VirtualBox Doc:https://minikube.sigs.k8s.io/docs/reference/drivers/virtualbox/ Version:}
I0731 23:36:14.010159   26664 global.go:122] vmware default: false priority: 5, state: {Installed:false Healthy:false Running:false NeedsImprovement:false Error:exec: "vmrun": executable file not found in %!P(MISSING)ATH%!R(MISSING)eason: Fix:Install vmrun Doc:https://minikube.sigs.k8s.io/docs/reference/drivers/vmware/ Version:}
I0731 23:36:14.240990   26664 docker.go:121] docker version: linux-24.0.2:Docker Desktop 4.21.1 (114176)
I0731 23:36:14.252892   26664 cli_runner.go:164] Run: docker system info --format "{{json .}}"
I0731 23:36:14.715479   26664 info.go:266] docker info: {ID:0c69dc7a-6e83-40be-a335-4bb637dfe4d0 Containers:12 ContainersRunning:0 ContainersPaused:0 ContainersStopped:12 Images:10 Driver:overlay2 DriverStatus:[[Backing Filesystem extfs] [Supports d_type true] [Using metacopy false] [Native Overlay Diff true] [userxattr false]] SystemStatus:<nil> Plugins:{Volume:[local] Network:[bridge host ipvlan macvlan null overlay] Authorization:<nil> Log:[awslogs fluentd gcplogs gelf journald json-file local logentries splunk syslog]} MemoryLimit:true SwapLimit:true KernelMemory:false KernelMemoryTCP:true CPUCfsPeriod:true CPUCfsQuota:true CPUShares:true CPUSet:true PidsLimit:true IPv4Forwarding:true BridgeNfIptables:true BridgeNfIP6Tables:true Debug:false NFd:46 OomKillDisable:true NGoroutines:69 SystemTime:2023-08-01 04:36:14.67242746 +0000 UTC LoggingDriver:json-file CgroupDriver:cgroupfs NEventsListener:11 KernelVersion:5.10.16.3-microsoft-standard-WSL2 OperatingSystem:Docker Desktop OSType:linux Architecture:x86_64 IndexServerAddress:https://index.docker.io/v1/ RegistryConfig:{AllowNondistributableArtifactsCIDRs:[] AllowNondistributableArtifactsHostnames:[] InsecureRegistryCIDRs:[127.0.0.0/8] IndexConfigs:{DockerIo:{Name:docker.io Mirrors:[] Secure:true Official:true}} Mirrors:[]} NCPU:8 MemTotal:15691403264 GenericResources:<nil> DockerRootDir:/var/lib/docker HTTPProxy:http.docker.internal:3128 HTTPSProxy:http.docker.internal:3128 NoProxy:hubproxy.docker.internal Name:docker-desktop Labels:[] ExperimentalBuild:false ServerVersion:24.0.2 ClusterStore: ClusterAdvertise: Runtimes:{Runc:{Path:runc}} DefaultRuntime:runc Swarm:{NodeID: NodeAddr: LocalNodeState:inactive ControlAvailable:false Error: RemoteManagers:<nil>} LiveRestoreEnabled:false Isolation: InitBinary:docker-init ContainerdCommit:{ID:3dce8eb055cbb6872793272b4f20ed16117344f8 Expected:3dce8eb055cbb6872793272b4f20ed16117344f8} RuncCommit:{ID:v1.1.7-0-g860f061 Expected:v1.1.7-0-g860f061} InitCommit:{ID:de40ad0 Expected:de40ad0} SecurityOptions:[name=seccomp,profile=builtin] ProductLicense: Warnings:[WARNING: No blkio throttle.read_bps_device support WARNING: No blkio throttle.write_bps_device support WARNING: No blkio throttle.read_iops_device support WARNING: No blkio throttle.write_iops_device support] ServerErrors:[] ClientInfo:{Debug:false Plugins:[map[Name:buildx Path:C:\Program Files\Docker\cli-plugins\docker-buildx.exe SchemaVersion:0.1.0 ShortDescription:Docker Buildx Vendor:Docker Inc. Version:v0.11.0] map[Name:compose Path:C:\Program Files\Docker\cli-plugins\docker-compose.exe SchemaVersion:0.1.0 ShortDescription:Docker Compose Vendor:Docker Inc. Version:v2.19.1] map[Name:dev Path:C:\Program Files\Docker\cli-plugins\docker-dev.exe SchemaVersion:0.1.0 ShortDescription:Docker Dev Environments Vendor:Docker Inc. Version:v0.1.0] map[Name:extension Path:C:\Program Files\Docker\cli-plugins\docker-extension.exe SchemaVersion:0.1.0 ShortDescription:Manages Docker extensions Vendor:Docker Inc. Version:v0.2.20] map[Name:init Path:C:\Program Files\Docker\cli-plugins\docker-init.exe SchemaVersion:0.1.0 ShortDescription:Creates Docker-related starter files for your project Vendor:Docker Inc. Version:v0.1.0-beta.6] map[Name:sbom Path:C:\Program Files\Docker\cli-plugins\docker-sbom.exe SchemaVersion:0.1.0 ShortDescription:View the packaged-based Software Bill Of Materials (SBOM) for an image URL:https://github.com/docker/sbom-cli-plugin Vendor:Anchore Inc. Version:0.6.0] map[Name:scan Path:C:\Program Files\Docker\cli-plugins\docker-scan.exe SchemaVersion:0.1.0 ShortDescription:Docker Scan Vendor:Docker Inc. Version:v0.26.0] map[Name:scout Path:C:\Program Files\Docker\cli-plugins\docker-scout.exe SchemaVersion:0.1.0 ShortDescription:Command line tool for Docker Scout Vendor:Docker Inc. Version:0.16.1]] Warnings:<nil>}}
I0731 23:36:14.715479   26664 global.go:122] docker default: true priority: 9, state: {Installed:true Healthy:true Running:false NeedsImprovement:false Error:<nil> Reason: Fix: Doc: Version:}
I0731 23:36:14.715479   26664 driver.go:308] not recommending "ssh" due to default: false
I0731 23:36:14.715479   26664 driver.go:313] not recommending "podman" due to priority: 3
I0731 23:36:14.715479   26664 driver.go:303] not recommending "hyperv" due to health: Hyper-V requires Administrator privileges
I0731 23:36:14.715479   26664 driver.go:343] Picked: docker
I0731 23:36:14.715479   26664 driver.go:344] Alternatives: [ssh podman (experimental)]
I0731 23:36:14.715479   26664 driver.go:345] Rejects: [hyperv qemu2 virtualbox vmware]
I0731 23:36:14.718241   26664 out.go:177] ✨  Controlador docker seleccionado automáticamente. Otras opciones: ssh, podman (experimental)
I0731 23:36:14.719331   26664 start.go:298] selected driver: docker
I0731 23:36:14.719331   26664 start.go:898] validating driver "docker" against <nil>
I0731 23:36:14.719331   26664 start.go:909] status for docker: {Installed:true Healthy:true Running:false NeedsImprovement:false Error:<nil> Reason: Fix: Doc: Version:}
I0731 23:36:14.742773   26664 cli_runner.go:164] Run: docker system info --format "{{json .}}"
I0731 23:36:15.191899   26664 info.go:266] docker info: {ID:0c69dc7a-6e83-40be-a335-4bb637dfe4d0 Containers:12 ContainersRunning:0 ContainersPaused:0 ContainersStopped:12 Images:10 Driver:overlay2 DriverStatus:[[Backing Filesystem extfs] [Supports d_type true] [Using metacopy false] [Native Overlay Diff true] [userxattr false]] SystemStatus:<nil> Plugins:{Volume:[local] Network:[bridge host ipvlan macvlan null overlay] Authorization:<nil> Log:[awslogs fluentd gcplogs gelf journald json-file local logentries splunk syslog]} MemoryLimit:true SwapLimit:true KernelMemory:false KernelMemoryTCP:true CPUCfsPeriod:true CPUCfsQuota:true CPUShares:true CPUSet:true PidsLimit:true IPv4Forwarding:true BridgeNfIptables:true BridgeNfIP6Tables:true Debug:false NFd:46 OomKillDisable:true NGoroutines:69 SystemTime:2023-08-01 04:36:15.147864291 +0000 UTC LoggingDriver:json-file CgroupDriver:cgroupfs NEventsListener:11 KernelVersion:5.10.16.3-microsoft-standard-WSL2 OperatingSystem:Docker Desktop OSType:linux Architecture:x86_64 IndexServerAddress:https://index.docker.io/v1/ RegistryConfig:{AllowNondistributableArtifactsCIDRs:[] AllowNondistributableArtifactsHostnames:[] InsecureRegistryCIDRs:[127.0.0.0/8] IndexConfigs:{DockerIo:{Name:docker.io Mirrors:[] Secure:true Official:true}} Mirrors:[]} NCPU:8 MemTotal:15691403264 GenericResources:<nil> DockerRootDir:/var/lib/docker HTTPProxy:http.docker.internal:3128 HTTPSProxy:http.docker.internal:3128 NoProxy:hubproxy.docker.internal Name:docker-desktop Labels:[] ExperimentalBuild:false ServerVersion:24.0.2 ClusterStore: ClusterAdvertise: Runtimes:{Runc:{Path:runc}} DefaultRuntime:runc Swarm:{NodeID: NodeAddr: LocalNodeState:inactive ControlAvailable:false Error: RemoteManagers:<nil>} LiveRestoreEnabled:false Isolation: InitBinary:docker-init ContainerdCommit:{ID:3dce8eb055cbb6872793272b4f20ed16117344f8 Expected:3dce8eb055cbb6872793272b4f20ed16117344f8} RuncCommit:{ID:v1.1.7-0-g860f061 Expected:v1.1.7-0-g860f061} InitCommit:{ID:de40ad0 Expected:de40ad0} SecurityOptions:[name=seccomp,profile=builtin] ProductLicense: Warnings:[WARNING: No blkio throttle.read_bps_device support WARNING: No blkio throttle.write_bps_device support WARNING: No blkio throttle.read_iops_device support WARNING: No blkio throttle.write_iops_device support] ServerErrors:[] ClientInfo:{Debug:false Plugins:[map[Name:buildx Path:C:\Program Files\Docker\cli-plugins\docker-buildx.exe SchemaVersion:0.1.0 ShortDescription:Docker Buildx Vendor:Docker Inc. Version:v0.11.0] map[Name:compose Path:C:\Program Files\Docker\cli-plugins\docker-compose.exe SchemaVersion:0.1.0 ShortDescription:Docker Compose Vendor:Docker Inc. Version:v2.19.1] map[Name:dev Path:C:\Program Files\Docker\cli-plugins\docker-dev.exe SchemaVersion:0.1.0 ShortDescription:Docker Dev Environments Vendor:Docker Inc. Version:v0.1.0] map[Name:extension Path:C:\Program Files\Docker\cli-plugins\docker-extension.exe SchemaVersion:0.1.0 ShortDescription:Manages Docker extensions Vendor:Docker Inc. Version:v0.2.20] map[Name:init Path:C:\Program Files\Docker\cli-plugins\docker-init.exe SchemaVersion:0.1.0 ShortDescription:Creates Docker-related starter files for your project Vendor:Docker Inc. Version:v0.1.0-beta.6] map[Name:sbom Path:C:\Program Files\Docker\cli-plugins\docker-sbom.exe SchemaVersion:0.1.0 ShortDescription:View the packaged-based Software Bill Of Materials (SBOM) for an image URL:https://github.com/docker/sbom-cli-plugin Vendor:Anchore Inc. Version:0.6.0] map[Name:scan Path:C:\Program Files\Docker\cli-plugins\docker-scan.exe SchemaVersion:0.1.0 ShortDescription:Docker Scan Vendor:Docker Inc. Version:v0.26.0] map[Name:scout Path:C:\Program Files\Docker\cli-plugins\docker-scout.exe SchemaVersion:0.1.0 ShortDescription:Command line tool for Docker Scout Vendor:Docker Inc. Version:0.16.1]] Warnings:<nil>}}
I0731 23:36:15.192476   26664 start_flags.go:305] no existing cluster config was found, will generate one from the flags 
I0731 23:36:15.290894   26664 start_flags.go:382] Using suggested 7600MB memory alloc based on sys=30650MB, container=14964MB
I0731 23:36:15.291445   26664 start_flags.go:901] Wait components to verify : map[apiserver:true system_pods:true]
I0731 23:36:15.292548   26664 out.go:177] 📌  Using Docker Desktop driver with root privileges
I0731 23:36:15.293661   26664 cni.go:84] Creating CNI manager for ""
I0731 23:36:15.293661   26664 cni.go:158] "docker" driver + "docker" container runtime found on kubernetes v1.24+, recommending bridge
I0731 23:36:15.293661   26664 start_flags.go:314] Found "bridge CNI" CNI - setting NetworkPlugin=cni
I0731 23:36:15.293661   26664 start_flags.go:319] config:
{Name:minikube KeepContext:false EmbedCerts:false MinikubeISO: KicBaseImage:gcr.io/k8s-minikube/kicbase:v0.0.40@sha256:8cadf23777709e43eca447c47a45f5a4635615129267ce025193040ec92a1631 Memory:7600 CPUs:2 DiskSize:20000 VMDriver: Driver:docker HyperkitVpnKitSock: HyperkitVSockPorts:[] DockerEnv:[] ContainerVolumeMounts:[] InsecureRegistry:[] RegistryMirror:[] HostOnlyCIDR:192.168.59.1/24 HypervVirtualSwitch: HypervUseExternalSwitch:false HypervExternalAdapter: KVMNetwork:default KVMQemuURI:qemu:///system KVMGPU:false KVMHidden:false KVMNUMACount:1 APIServerPort:0 DockerOpt:[] DisableDriverMounts:false NFSShare:[] NFSSharesRoot:/nfsshares UUID: NoVTXCheck:false DNSProxy:false HostDNSResolver:true HostOnlyNicType:virtio NatNicType:virtio SSHIPAddress: SSHUser:root SSHKey: SSHPort:22 KubernetesConfig:{KubernetesVersion:v1.27.3 ClusterName:minikube Namespace:default APIServerName:minikubeCA APIServerNames:[] APIServerIPs:[] DNSDomain:cluster.local ContainerRuntime:docker CRISocket: NetworkPlugin:cni FeatureGates: ServiceCIDR:10.96.0.0/12 ImageRepository: LoadBalancerStartIP: LoadBalancerEndIP: CustomIngressCert: RegistryAliases: ExtraOptions:[] ShouldLoadCachedImages:true EnableDefaultCNI:false CNI: NodeIP: NodePort:8443 NodeName:} Nodes:[] Addons:map[] CustomAddonImages:map[] CustomAddonRegistries:map[] VerifyComponents:map[apiserver:true system_pods:true] StartHostTimeout:6m0s ScheduledStop:<nil> ExposedPorts:[] ListenAddress: Network: Subnet: MultiNodeRequested:false ExtraDisks:0 CertExpiration:26280h0m0s Mount:false MountString:C:\Users\white:/minikube-host Mount9PVersion:9p2000.L MountGID:docker MountIP: MountMSize:262144 MountOptions:[] MountPort:0 MountType:9p MountUID:docker BinaryMirror: DisableOptimizations:false DisableMetrics:false CustomQemuFirmwarePath: SocketVMnetClientPath: SocketVMnetPath: StaticIP: SSHAuthSock: SSHAgentPID:0}
I0731 23:36:15.295300   26664 out.go:177] 👍  Starting control plane node minikube in cluster minikube
I0731 23:36:15.296401   26664 cache.go:122] Beginning downloading kic base image for docker with docker
I0731 23:36:15.297507   26664 out.go:177] 🚜  Pulling base image ...
I0731 23:36:15.299530   26664 preload.go:132] Checking if preload exists for k8s version v1.27.3 and runtime docker
I0731 23:36:15.299530   26664 image.go:79] Checking for gcr.io/k8s-minikube/kicbase:v0.0.40@sha256:8cadf23777709e43eca447c47a45f5a4635615129267ce025193040ec92a1631 in local docker daemon
I0731 23:36:15.300063   26664 preload.go:148] Found local preload: C:\Users\white\.minikube\cache\preloaded-tarball\preloaded-images-k8s-v18-v1.27.3-docker-overlay2-amd64.tar.lz4
I0731 23:36:15.300063   26664 cache.go:57] Caching tarball of preloaded images
I0731 23:36:15.300599   26664 preload.go:174] Found C:\Users\white\.minikube\cache\preloaded-tarball\preloaded-images-k8s-v18-v1.27.3-docker-overlay2-amd64.tar.lz4 in cache, skipping download
I0731 23:36:15.300599   26664 cache.go:60] Finished verifying existence of preloaded tar for  v1.27.3 on docker
I0731 23:36:15.300599   26664 profile.go:148] Saving config to C:\Users\white\.minikube\profiles\minikube\config.json ...
I0731 23:36:15.301141   26664 lock.go:35] WriteFile acquiring C:\Users\white\.minikube\profiles\minikube\config.json: {Name:mk400c01df3244691cce9632fef508d6b1e8d697 Clock:{} Delay:500ms Timeout:1m0s Cancel:<nil>}
I0731 23:36:15.482804   26664 image.go:83] Found gcr.io/k8s-minikube/kicbase:v0.0.40@sha256:8cadf23777709e43eca447c47a45f5a4635615129267ce025193040ec92a1631 in local docker daemon, skipping pull
I0731 23:36:15.482804   26664 cache.go:145] gcr.io/k8s-minikube/kicbase:v0.0.40@sha256:8cadf23777709e43eca447c47a45f5a4635615129267ce025193040ec92a1631 exists in daemon, skipping load
I0731 23:36:15.483120   26664 cache.go:195] Successfully downloaded all kic artifacts
I0731 23:36:15.483120   26664 start.go:365] acquiring machines lock for minikube: {Name:mkd28ff622b041e7e7aafd60383bea2455e49423 Clock:{} Delay:500ms Timeout:10m0s Cancel:<nil>}
I0731 23:36:15.483120   26664 start.go:369] acquired machines lock for "minikube" in 0s
I0731 23:36:15.483120   26664 start.go:93] Provisioning new machine with config: &{Name:minikube KeepContext:false EmbedCerts:false MinikubeISO: KicBaseImage:gcr.io/k8s-minikube/kicbase:v0.0.40@sha256:8cadf23777709e43eca447c47a45f5a4635615129267ce025193040ec92a1631 Memory:7600 CPUs:2 DiskSize:20000 VMDriver: Driver:docker HyperkitVpnKitSock: HyperkitVSockPorts:[] DockerEnv:[] ContainerVolumeMounts:[] InsecureRegistry:[] RegistryMirror:[] HostOnlyCIDR:192.168.59.1/24 HypervVirtualSwitch: HypervUseExternalSwitch:false HypervExternalAdapter: KVMNetwork:default KVMQemuURI:qemu:///system KVMGPU:false KVMHidden:false KVMNUMACount:1 APIServerPort:0 DockerOpt:[] DisableDriverMounts:false NFSShare:[] NFSSharesRoot:/nfsshares UUID: NoVTXCheck:false DNSProxy:false HostDNSResolver:true HostOnlyNicType:virtio NatNicType:virtio SSHIPAddress: SSHUser:root SSHKey: SSHPort:22 KubernetesConfig:{KubernetesVersion:v1.27.3 ClusterName:minikube Namespace:default APIServerName:minikubeCA APIServerNames:[] APIServerIPs:[] DNSDomain:cluster.local ContainerRuntime:docker CRISocket: NetworkPlugin:cni FeatureGates: ServiceCIDR:10.96.0.0/12 ImageRepository: LoadBalancerStartIP: LoadBalancerEndIP: CustomIngressCert: RegistryAliases: ExtraOptions:[] ShouldLoadCachedImages:true EnableDefaultCNI:false CNI: NodeIP: NodePort:8443 NodeName:} Nodes:[{Name: IP: Port:8443 KubernetesVersion:v1.27.3 ContainerRuntime:docker ControlPlane:true Worker:true}] Addons:map[] CustomAddonImages:map[] CustomAddonRegistries:map[] VerifyComponents:map[apiserver:true system_pods:true] StartHostTimeout:6m0s ScheduledStop:<nil> ExposedPorts:[] ListenAddress: Network: Subnet: MultiNodeRequested:false ExtraDisks:0 CertExpiration:26280h0m0s Mount:false MountString:C:\Users\white:/minikube-host Mount9PVersion:9p2000.L MountGID:docker MountIP: MountMSize:262144 MountOptions:[] MountPort:0 MountType:9p MountUID:docker BinaryMirror: DisableOptimizations:false DisableMetrics:false CustomQemuFirmwarePath: SocketVMnetClientPath: SocketVMnetPath: StaticIP: SSHAuthSock: SSHAgentPID:0} &{Name: IP: Port:8443 KubernetesVersion:v1.27.3 ContainerRuntime:docker ControlPlane:true Worker:true}
I0731 23:36:15.483630   26664 start.go:125] createHost starting for "" (driver="docker")
I0731 23:36:15.484707   26664 out.go:204] 🔥  Creando docker container (CPUs=2, Memory=7600MB) ...
I0731 23:36:15.484707   26664 start.go:159] libmachine.API.Create for "minikube" (driver="docker")
I0731 23:36:15.484707   26664 client.go:168] LocalClient.Create starting
I0731 23:36:15.485242   26664 main.go:141] libmachine: Reading certificate data from C:\Users\white\.minikube\certs\ca.pem
I0731 23:36:15.485780   26664 main.go:141] libmachine: Decoding PEM data...
I0731 23:36:15.485780   26664 main.go:141] libmachine: Parsing certificate...
I0731 23:36:15.485780   26664 main.go:141] libmachine: Reading certificate data from C:\Users\white\.minikube\certs\cert.pem
I0731 23:36:15.486314   26664 main.go:141] libmachine: Decoding PEM data...
I0731 23:36:15.486314   26664 main.go:141] libmachine: Parsing certificate...
I0731 23:36:15.501431   26664 cli_runner.go:164] Run: docker network inspect minikube --format "{"Name": "{{.Name}}","Driver": "{{.Driver}}","Subnet": "{{range .IPAM.Config}}{{.Subnet}}{{end}}","Gateway": "{{range .IPAM.Config}}{{.Gateway}}{{end}}","MTU": {{if (index .Options "com.docker.network.driver.mtu")}}{{(index .Options "com.docker.network.driver.mtu")}}{{else}}0{{end}}, "ContainerIPs": [{{range $k,$v := .Containers }}"{{$v.IPv4Address}}",{{end}}]}"
W0731 23:36:15.683428   26664 cli_runner.go:211] docker network inspect minikube --format "{"Name": "{{.Name}}","Driver": "{{.Driver}}","Subnet": "{{range .IPAM.Config}}{{.Subnet}}{{end}}","Gateway": "{{range .IPAM.Config}}{{.Gateway}}{{end}}","MTU": {{if (index .Options "com.docker.network.driver.mtu")}}{{(index .Options "com.docker.network.driver.mtu")}}{{else}}0{{end}}, "ContainerIPs": [{{range $k,$v := .Containers }}"{{$v.IPv4Address}}",{{end}}]}" returned with exit code 1
I0731 23:36:15.694711   26664 network_create.go:281] running [docker network inspect minikube] to gather additional debugging logs...
I0731 23:36:15.694711   26664 cli_runner.go:164] Run: docker network inspect minikube
W0731 23:36:15.883713   26664 cli_runner.go:211] docker network inspect minikube returned with exit code 1
I0731 23:36:15.883713   26664 network_create.go:284] error running [docker network inspect minikube]: docker network inspect minikube: exit status 1
stdout:
[]

stderr:
Error response from daemon: network minikube not found
I0731 23:36:15.883713   26664 network_create.go:286] output of [docker network inspect minikube]: -- stdout --
[]

-- /stdout --
** stderr ** 
Error response from daemon: network minikube not found

** /stderr **
I0731 23:36:15.892878   26664 cli_runner.go:164] Run: docker network inspect bridge --format "{"Name": "{{.Name}}","Driver": "{{.Driver}}","Subnet": "{{range .IPAM.Config}}{{.Subnet}}{{end}}","Gateway": "{{range .IPAM.Config}}{{.Gateway}}{{end}}","MTU": {{if (index .Options "com.docker.network.driver.mtu")}}{{(index .Options "com.docker.network.driver.mtu")}}{{else}}0{{end}}, "ContainerIPs": [{{range $k,$v := .Containers }}"{{$v.IPv4Address}}",{{end}}]}"
I0731 23:36:16.105419   26664 network.go:209] using free private subnet 192.168.49.0/24: &{IP:192.168.49.0 Netmask:255.255.255.0 Prefix:24 CIDR:192.168.49.0/24 Gateway:192.168.49.1 ClientMin:192.168.49.2 ClientMax:192.168.49.254 Broadcast:192.168.49.255 IsPrivate:true Interface:{IfaceName: IfaceIPv4: IfaceMTU:0 IfaceMAC:} reservation:0xc000cbd620}
I0731 23:36:16.105419   26664 network_create.go:123] attempt to create docker network minikube 192.168.49.0/24 with gateway 192.168.49.1 and MTU of 1500 ...
I0731 23:36:16.115709   26664 cli_runner.go:164] Run: docker network create --driver=bridge --subnet=192.168.49.0/24 --gateway=192.168.49.1 -o --ip-masq -o --icc -o com.docker.network.driver.mtu=1500 --label=created_by.minikube.sigs.k8s.io=true --label=name.minikube.sigs.k8s.io=minikube minikube
I0731 23:36:16.997665   26664 network_create.go:107] docker network minikube 192.168.49.0/24 created
I0731 23:36:16.997665   26664 kic.go:117] calculated static IP "192.168.49.2" for the "minikube" container
I0731 23:36:17.016319   26664 cli_runner.go:164] Run: docker ps -a --format {{.Names}}
I0731 23:36:17.284162   26664 cli_runner.go:164] Run: docker volume create minikube --label name.minikube.sigs.k8s.io=minikube --label created_by.minikube.sigs.k8s.io=true
I0731 23:36:17.530588   26664 oci.go:103] Successfully created a docker volume minikube
I0731 23:36:17.553446   26664 cli_runner.go:164] Run: docker run --rm --name minikube-preload-sidecar --label created_by.minikube.sigs.k8s.io=true --label name.minikube.sigs.k8s.io=minikube --entrypoint /usr/bin/test -v minikube:/var gcr.io/k8s-minikube/kicbase:v0.0.40@sha256:8cadf23777709e43eca447c47a45f5a4635615129267ce025193040ec92a1631 -d /var/lib
I0731 23:36:19.395101   26664 cli_runner.go:217] Completed: docker run --rm --name minikube-preload-sidecar --label created_by.minikube.sigs.k8s.io=true --label name.minikube.sigs.k8s.io=minikube --entrypoint /usr/bin/test -v minikube:/var gcr.io/k8s-minikube/kicbase:v0.0.40@sha256:8cadf23777709e43eca447c47a45f5a4635615129267ce025193040ec92a1631 -d /var/lib: (1.8416556s)
I0731 23:36:19.395101   26664 oci.go:107] Successfully prepared a docker volume minikube
I0731 23:36:19.395101   26664 preload.go:132] Checking if preload exists for k8s version v1.27.3 and runtime docker
I0731 23:36:19.395101   26664 kic.go:190] Starting extracting preloaded images to volume ...
I0731 23:36:19.410506   26664 cli_runner.go:164] Run: docker run --rm --entrypoint /usr/bin/tar -v C:\Users\white\.minikube\cache\preloaded-tarball\preloaded-images-k8s-v18-v1.27.3-docker-overlay2-amd64.tar.lz4:/preloaded.tar:ro -v minikube:/extractDir gcr.io/k8s-minikube/kicbase:v0.0.40@sha256:8cadf23777709e43eca447c47a45f5a4635615129267ce025193040ec92a1631 -I lz4 -xf /preloaded.tar -C /extractDir
I0731 23:36:43.276964   26664 cli_runner.go:217] Completed: docker run --rm --entrypoint /usr/bin/tar -v C:\Users\white\.minikube\cache\preloaded-tarball\preloaded-images-k8s-v18-v1.27.3-docker-overlay2-amd64.tar.lz4:/preloaded.tar:ro -v minikube:/extractDir gcr.io/k8s-minikube/kicbase:v0.0.40@sha256:8cadf23777709e43eca447c47a45f5a4635615129267ce025193040ec92a1631 -I lz4 -xf /preloaded.tar -C /extractDir: (23.8664577s)
I0731 23:36:43.276964   26664 kic.go:199] duration metric: took 23.881863 seconds to extract preloaded images to volume
I0731 23:36:43.289592   26664 cli_runner.go:164] Run: docker system info --format "{{json .}}"
I0731 23:36:43.998146   26664 info.go:266] docker info: {ID:0c69dc7a-6e83-40be-a335-4bb637dfe4d0 Containers:12 ContainersRunning:0 ContainersPaused:0 ContainersStopped:12 Images:10 Driver:overlay2 DriverStatus:[[Backing Filesystem extfs] [Supports d_type true] [Using metacopy false] [Native Overlay Diff true] [userxattr false]] SystemStatus:<nil> Plugins:{Volume:[local] Network:[bridge host ipvlan macvlan null overlay] Authorization:<nil> Log:[awslogs fluentd gcplogs gelf journald json-file local logentries splunk syslog]} MemoryLimit:true SwapLimit:true KernelMemory:false KernelMemoryTCP:true CPUCfsPeriod:true CPUCfsQuota:true CPUShares:true CPUSet:true PidsLimit:true IPv4Forwarding:true BridgeNfIptables:true BridgeNfIP6Tables:true Debug:false NFd:46 OomKillDisable:true NGoroutines:69 SystemTime:2023-08-01 04:36:43.953600862 +0000 UTC LoggingDriver:json-file CgroupDriver:cgroupfs NEventsListener:11 KernelVersion:5.10.16.3-microsoft-standard-WSL2 OperatingSystem:Docker Desktop OSType:linux Architecture:x86_64 IndexServerAddress:https://index.docker.io/v1/ RegistryConfig:{AllowNondistributableArtifactsCIDRs:[] AllowNondistributableArtifactsHostnames:[] InsecureRegistryCIDRs:[127.0.0.0/8] IndexConfigs:{DockerIo:{Name:docker.io Mirrors:[] Secure:true Official:true}} Mirrors:[]} NCPU:8 MemTotal:15691403264 GenericResources:<nil> DockerRootDir:/var/lib/docker HTTPProxy:http.docker.internal:3128 HTTPSProxy:http.docker.internal:3128 NoProxy:hubproxy.docker.internal Name:docker-desktop Labels:[] ExperimentalBuild:false ServerVersion:24.0.2 ClusterStore: ClusterAdvertise: Runtimes:{Runc:{Path:runc}} DefaultRuntime:runc Swarm:{NodeID: NodeAddr: LocalNodeState:inactive ControlAvailable:false Error: RemoteManagers:<nil>} LiveRestoreEnabled:false Isolation: InitBinary:docker-init ContainerdCommit:{ID:3dce8eb055cbb6872793272b4f20ed16117344f8 Expected:3dce8eb055cbb6872793272b4f20ed16117344f8} RuncCommit:{ID:v1.1.7-0-g860f061 Expected:v1.1.7-0-g860f061} InitCommit:{ID:de40ad0 Expected:de40ad0} SecurityOptions:[name=seccomp,profile=builtin] ProductLicense: Warnings:[WARNING: No blkio throttle.read_bps_device support WARNING: No blkio throttle.write_bps_device support WARNING: No blkio throttle.read_iops_device support WARNING: No blkio throttle.write_iops_device support] ServerErrors:[] ClientInfo:{Debug:false Plugins:[map[Name:buildx Path:C:\Program Files\Docker\cli-plugins\docker-buildx.exe SchemaVersion:0.1.0 ShortDescription:Docker Buildx Vendor:Docker Inc. Version:v0.11.0] map[Name:compose Path:C:\Program Files\Docker\cli-plugins\docker-compose.exe SchemaVersion:0.1.0 ShortDescription:Docker Compose Vendor:Docker Inc. Version:v2.19.1] map[Name:dev Path:C:\Program Files\Docker\cli-plugins\docker-dev.exe SchemaVersion:0.1.0 ShortDescription:Docker Dev Environments Vendor:Docker Inc. Version:v0.1.0] map[Name:extension Path:C:\Program Files\Docker\cli-plugins\docker-extension.exe SchemaVersion:0.1.0 ShortDescription:Manages Docker extensions Vendor:Docker Inc. Version:v0.2.20] map[Name:init Path:C:\Program Files\Docker\cli-plugins\docker-init.exe SchemaVersion:0.1.0 ShortDescription:Creates Docker-related starter files for your project Vendor:Docker Inc. Version:v0.1.0-beta.6] map[Name:sbom Path:C:\Program Files\Docker\cli-plugins\docker-sbom.exe SchemaVersion:0.1.0 ShortDescription:View the packaged-based Software Bill Of Materials (SBOM) for an image URL:https://github.com/docker/sbom-cli-plugin Vendor:Anchore Inc. Version:0.6.0] map[Name:scan Path:C:\Program Files\Docker\cli-plugins\docker-scan.exe SchemaVersion:0.1.0 ShortDescription:Docker Scan Vendor:Docker Inc. Version:v0.26.0] map[Name:scout Path:C:\Program Files\Docker\cli-plugins\docker-scout.exe SchemaVersion:0.1.0 ShortDescription:Command line tool for Docker Scout Vendor:Docker Inc. Version:0.16.1]] Warnings:<nil>}}
I0731 23:36:44.014056   26664 cli_runner.go:164] Run: docker info --format "'{{json .SecurityOptions}}'"
I0731 23:36:44.540912   26664 cli_runner.go:164] Run: docker run -d -t --privileged --security-opt seccomp=unconfined --tmpfs /tmp --tmpfs /run -v /lib/modules:/lib/modules:ro --hostname minikube --name minikube --label created_by.minikube.sigs.k8s.io=true --label name.minikube.sigs.k8s.io=minikube --label role.minikube.sigs.k8s.io= --label mode.minikube.sigs.k8s.io=minikube --network minikube --ip 192.168.49.2 --volume minikube:/var --security-opt apparmor=unconfined --memory=7600mb --memory-swap=7600mb --cpus=2 -e container=docker --expose 8443 --publish=127.0.0.1::8443 --publish=127.0.0.1::22 --publish=127.0.0.1::2376 --publish=127.0.0.1::5000 --publish=127.0.0.1::32443 gcr.io/k8s-minikube/kicbase:v0.0.40@sha256:8cadf23777709e43eca447c47a45f5a4635615129267ce025193040ec92a1631
I0731 23:36:46.709977   26664 cli_runner.go:217] Completed: docker run -d -t --privileged --security-opt seccomp=unconfined --tmpfs /tmp --tmpfs /run -v /lib/modules:/lib/modules:ro --hostname minikube --name minikube --label created_by.minikube.sigs.k8s.io=true --label name.minikube.sigs.k8s.io=minikube --label role.minikube.sigs.k8s.io= --label mode.minikube.sigs.k8s.io=minikube --network minikube --ip 192.168.49.2 --volume minikube:/var --security-opt apparmor=unconfined --memory=7600mb --memory-swap=7600mb --cpus=2 -e container=docker --expose 8443 --publish=127.0.0.1::8443 --publish=127.0.0.1::22 --publish=127.0.0.1::2376 --publish=127.0.0.1::5000 --publish=127.0.0.1::32443 gcr.io/k8s-minikube/kicbase:v0.0.40@sha256:8cadf23777709e43eca447c47a45f5a4635615129267ce025193040ec92a1631: (2.1679616s)
I0731 23:36:46.735843   26664 cli_runner.go:164] Run: docker container inspect minikube --format={{.State.Running}}
I0731 23:36:47.128634   26664 cli_runner.go:164] Run: docker container inspect minikube --format={{.State.Status}}
I0731 23:36:47.379767   26664 cli_runner.go:164] Run: docker exec minikube stat /var/lib/dpkg/alternatives/iptables
I0731 23:36:48.075622   26664 oci.go:144] the created container "minikube" has a running status.
I0731 23:36:48.075622   26664 kic.go:221] Creating ssh key for kic: C:\Users\white\.minikube\machines\minikube\id_rsa...
I0731 23:36:48.506302   26664 kic_runner.go:191] docker (temp): C:\Users\white\.minikube\machines\minikube\id_rsa.pub --> /home/docker/.ssh/authorized_keys (381 bytes)
I0731 23:36:48.877185   26664 cli_runner.go:164] Run: docker container inspect minikube --format={{.State.Status}}
I0731 23:36:49.169245   26664 kic_runner.go:93] Run: chown docker:docker /home/docker/.ssh/authorized_keys
I0731 23:36:49.169245   26664 kic_runner.go:114] Args: [docker exec --privileged minikube chown docker:docker /home/docker/.ssh/authorized_keys]
I0731 23:36:49.582028   26664 kic.go:261] ensuring only current user has permissions to key file located at : C:\Users\white\.minikube\machines\minikube\id_rsa...
I0731 23:36:50.267881   26664 cli_runner.go:164] Run: docker container inspect minikube --format={{.State.Status}}
I0731 23:36:50.443161   26664 machine.go:88] provisioning docker machine ...
I0731 23:36:50.443161   26664 ubuntu.go:169] provisioning hostname "minikube"
I0731 23:36:50.454739   26664 cli_runner.go:164] Run: docker container inspect -f "'{{(index (index .NetworkSettings.Ports "22/tcp") 0).HostPort}}'" minikube
I0731 23:36:50.663907   26664 main.go:141] libmachine: Using SSH client type: native
I0731 23:36:50.673281   26664 main.go:141] libmachine: &{{{<nil> 0 [] [] []} docker [0x998da0] 0x99bc40 <nil>  [] 0s} 127.0.0.1 62671 <nil> <nil>}
I0731 23:36:50.673281   26664 main.go:141] libmachine: About to run SSH command:
sudo hostname minikube && echo "minikube" | sudo tee /etc/hostname
I0731 23:36:50.877739   26664 main.go:141] libmachine: SSH cmd err, output: <nil>: minikube

I0731 23:36:50.891426   26664 cli_runner.go:164] Run: docker container inspect -f "'{{(index (index .NetworkSettings.Ports "22/tcp") 0).HostPort}}'" minikube
I0731 23:36:51.087654   26664 main.go:141] libmachine: Using SSH client type: native
I0731 23:36:51.088263   26664 main.go:141] libmachine: &{{{<nil> 0 [] [] []} docker [0x998da0] 0x99bc40 <nil>  [] 0s} 127.0.0.1 62671 <nil> <nil>}
I0731 23:36:51.088263   26664 main.go:141] libmachine: About to run SSH command:

		if ! grep -xq '.*\sminikube' /etc/hosts; then
			if grep -xq '127.0.1.1\s.*' /etc/hosts; then
				sudo sed -i 's/^127.0.1.1\s.*/127.0.1.1 minikube/g' /etc/hosts;
			else 
				echo '127.0.1.1 minikube' | sudo tee -a /etc/hosts; 
			fi
		fi
I0731 23:36:51.245844   26664 main.go:141] libmachine: SSH cmd err, output: <nil>: 
I0731 23:36:51.245844   26664 ubuntu.go:175] set auth options {CertDir:C:\Users\white\.minikube CaCertPath:C:\Users\white\.minikube\certs\ca.pem CaPrivateKeyPath:C:\Users\white\.minikube\certs\ca-key.pem CaCertRemotePath:/etc/docker/ca.pem ServerCertPath:C:\Users\white\.minikube\machines\server.pem ServerKeyPath:C:\Users\white\.minikube\machines\server-key.pem ClientKeyPath:C:\Users\white\.minikube\certs\key.pem ServerCertRemotePath:/etc/docker/server.pem ServerKeyRemotePath:/etc/docker/server-key.pem ClientCertPath:C:\Users\white\.minikube\certs\cert.pem ServerCertSANs:[] StorePath:C:\Users\white\.minikube}
I0731 23:36:51.245844   26664 ubuntu.go:177] setting up certificates
I0731 23:36:51.245844   26664 provision.go:83] configureAuth start
I0731 23:36:51.257430   26664 cli_runner.go:164] Run: docker container inspect -f "{{range .NetworkSettings.Networks}}{{.IPAddress}},{{.GlobalIPv6Address}}{{end}}" minikube
I0731 23:36:51.449886   26664 provision.go:138] copyHostCerts
I0731 23:36:51.450399   26664 exec_runner.go:144] found C:\Users\white\.minikube/ca.pem, removing ...
I0731 23:36:51.450399   26664 exec_runner.go:203] rm: C:\Users\white\.minikube\ca.pem
I0731 23:36:51.450399   26664 exec_runner.go:151] cp: C:\Users\white\.minikube\certs\ca.pem --> C:\Users\white\.minikube/ca.pem (1074 bytes)
I0731 23:36:51.453100   26664 exec_runner.go:144] found C:\Users\white\.minikube/cert.pem, removing ...
I0731 23:36:51.453100   26664 exec_runner.go:203] rm: C:\Users\white\.minikube\cert.pem
I0731 23:36:51.453100   26664 exec_runner.go:151] cp: C:\Users\white\.minikube\certs\cert.pem --> C:\Users\white\.minikube/cert.pem (1119 bytes)
I0731 23:36:51.454181   26664 exec_runner.go:144] found C:\Users\white\.minikube/key.pem, removing ...
I0731 23:36:51.454181   26664 exec_runner.go:203] rm: C:\Users\white\.minikube\key.pem
I0731 23:36:51.454727   26664 exec_runner.go:151] cp: C:\Users\white\.minikube\certs\key.pem --> C:\Users\white\.minikube/key.pem (1675 bytes)
I0731 23:36:51.455833   26664 provision.go:112] generating server cert: C:\Users\white\.minikube\machines\server.pem ca-key=C:\Users\white\.minikube\certs\ca.pem private-key=C:\Users\white\.minikube\certs\ca-key.pem org=white.minikube san=[192.168.49.2 127.0.0.1 localhost 127.0.0.1 minikube minikube]
I0731 23:36:51.793512   26664 provision.go:172] copyRemoteCerts
I0731 23:36:51.816764   26664 ssh_runner.go:195] Run: sudo mkdir -p /etc/docker /etc/docker /etc/docker
I0731 23:36:51.830246   26664 cli_runner.go:164] Run: docker container inspect -f "'{{(index (index .NetworkSettings.Ports "22/tcp") 0).HostPort}}'" minikube
I0731 23:36:52.023613   26664 sshutil.go:53] new ssh client: &{IP:127.0.0.1 Port:62671 SSHKeyPath:C:\Users\white\.minikube\machines\minikube\id_rsa Username:docker}
I0731 23:36:52.151392   26664 ssh_runner.go:362] scp C:\Users\white\.minikube\machines\server.pem --> /etc/docker/server.pem (1196 bytes)
I0731 23:36:52.195564   26664 ssh_runner.go:362] scp C:\Users\white\.minikube\machines\server-key.pem --> /etc/docker/server-key.pem (1679 bytes)
I0731 23:36:52.237455   26664 ssh_runner.go:362] scp C:\Users\white\.minikube\certs\ca.pem --> /etc/docker/ca.pem (1074 bytes)
I0731 23:36:52.280973   26664 provision.go:86] duration metric: configureAuth took 1.0351287s
I0731 23:36:52.280973   26664 ubuntu.go:193] setting minikube options for container-runtime
I0731 23:36:52.282056   26664 config.go:182] Loaded profile config "minikube": Driver=docker, ContainerRuntime=docker, KubernetesVersion=v1.27.3
I0731 23:36:52.296178   26664 cli_runner.go:164] Run: docker container inspect -f "'{{(index (index .NetworkSettings.Ports "22/tcp") 0).HostPort}}'" minikube
I0731 23:36:52.519471   26664 main.go:141] libmachine: Using SSH client type: native
I0731 23:36:52.520084   26664 main.go:141] libmachine: &{{{<nil> 0 [] [] []} docker [0x998da0] 0x99bc40 <nil>  [] 0s} 127.0.0.1 62671 <nil> <nil>}
I0731 23:36:52.520084   26664 main.go:141] libmachine: About to run SSH command:
df --output=fstype / | tail -n 1
I0731 23:36:52.647399   26664 main.go:141] libmachine: SSH cmd err, output: <nil>: overlay

I0731 23:36:52.647399   26664 ubuntu.go:71] root file system type: overlay
I0731 23:36:52.647399   26664 provision.go:309] Updating docker unit: /lib/systemd/system/docker.service ...
I0731 23:36:52.664034   26664 cli_runner.go:164] Run: docker container inspect -f "'{{(index (index .NetworkSettings.Ports "22/tcp") 0).HostPort}}'" minikube
I0731 23:36:52.870850   26664 main.go:141] libmachine: Using SSH client type: native
I0731 23:36:52.871391   26664 main.go:141] libmachine: &{{{<nil> 0 [] [] []} docker [0x998da0] 0x99bc40 <nil>  [] 0s} 127.0.0.1 62671 <nil> <nil>}
I0731 23:36:52.871923   26664 main.go:141] libmachine: About to run SSH command:
sudo mkdir -p /lib/systemd/system && printf %!s(MISSING) "[Unit]
Description=Docker Application Container Engine
Documentation=https://docs.docker.com
BindsTo=containerd.service
After=network-online.target firewalld.service containerd.service
Wants=network-online.target
Requires=docker.socket
StartLimitBurst=3
StartLimitIntervalSec=60

[Service]
Type=notify
Restart=on-failure



# This file is a systemd drop-in unit that inherits from the base dockerd configuration.
# The base configuration already specifies an 'ExecStart=...' command. The first directive
# here is to clear out that command inherited from the base configuration. Without this,
# the command from the base configuration and the command specified here are treated as
# a sequence of commands, which is not the desired behavior, nor is it valid -- systemd
# will catch this invalid input and refuse to start the service with an error like:
#  Service has more than one ExecStart= setting, which is only allowed for Type=oneshot services.

# NOTE: default-ulimit=nofile is set to an arbitrary number for consistency with other
# container runtimes. If left unlimited, it may result in OOM issues with MySQL.
ExecStart=
ExecStart=/usr/bin/dockerd -H tcp://0.0.0.0:2376 -H unix:///var/run/docker.sock --default-ulimit=nofile=1048576:1048576 --tlsverify --tlscacert /etc/docker/ca.pem --tlscert /etc/docker/server.pem --tlskey /etc/docker/server-key.pem --label provider=docker --insecure-registry 10.96.0.0/12 
ExecReload=/bin/kill -s HUP \$MAINPID

# Having non-zero Limit*s causes performance problems due to accounting overhead
# in the kernel. We recommend using cgroups to do container-local accounting.
LimitNOFILE=infinity
LimitNPROC=infinity
LimitCORE=infinity

# Uncomment TasksMax if your systemd version supports it.
# Only systemd 226 and above support this version.
TasksMax=infinity
TimeoutStartSec=0

# set delegate yes so that systemd does not reset the cgroups of docker containers
Delegate=yes

# kill only the docker process, not all processes in the cgroup
KillMode=process

[Install]
WantedBy=multi-user.target
" | sudo tee /lib/systemd/system/docker.service.new
I0731 23:36:53.053630   26664 main.go:141] libmachine: SSH cmd err, output: <nil>: [Unit]
Description=Docker Application Container Engine
Documentation=https://docs.docker.com
BindsTo=containerd.service
After=network-online.target firewalld.service containerd.service
Wants=network-online.target
Requires=docker.socket
StartLimitBurst=3
StartLimitIntervalSec=60

[Service]
Type=notify
Restart=on-failure



# This file is a systemd drop-in unit that inherits from the base dockerd configuration.
# The base configuration already specifies an 'ExecStart=...' command. The first directive
# here is to clear out that command inherited from the base configuration. Without this,
# the command from the base configuration and the command specified here are treated as
# a sequence of commands, which is not the desired behavior, nor is it valid -- systemd
# will catch this invalid input and refuse to start the service with an error like:
#  Service has more than one ExecStart= setting, which is only allowed for Type=oneshot services.

# NOTE: default-ulimit=nofile is set to an arbitrary number for consistency with other
# container runtimes. If left unlimited, it may result in OOM issues with MySQL.
ExecStart=
ExecStart=/usr/bin/dockerd -H tcp://0.0.0.0:2376 -H unix:///var/run/docker.sock --default-ulimit=nofile=1048576:1048576 --tlsverify --tlscacert /etc/docker/ca.pem --tlscert /etc/docker/server.pem --tlskey /etc/docker/server-key.pem --label provider=docker --insecure-registry 10.96.0.0/12 
ExecReload=/bin/kill -s HUP $MAINPID

# Having non-zero Limit*s causes performance problems due to accounting overhead
# in the kernel. We recommend using cgroups to do container-local accounting.
LimitNOFILE=infinity
LimitNPROC=infinity
LimitCORE=infinity

# Uncomment TasksMax if your systemd version supports it.
# Only systemd 226 and above support this version.
TasksMax=infinity
TimeoutStartSec=0

# set delegate yes so that systemd does not reset the cgroups of docker containers
Delegate=yes

# kill only the docker process, not all processes in the cgroup
KillMode=process

[Install]
WantedBy=multi-user.target

I0731 23:36:53.065356   26664 cli_runner.go:164] Run: docker container inspect -f "'{{(index (index .NetworkSettings.Ports "22/tcp") 0).HostPort}}'" minikube
I0731 23:36:53.283655   26664 main.go:141] libmachine: Using SSH client type: native
I0731 23:36:53.284354   26664 main.go:141] libmachine: &{{{<nil> 0 [] [] []} docker [0x998da0] 0x99bc40 <nil>  [] 0s} 127.0.0.1 62671 <nil> <nil>}
I0731 23:36:53.284354   26664 main.go:141] libmachine: About to run SSH command:
sudo diff -u /lib/systemd/system/docker.service /lib/systemd/system/docker.service.new || { sudo mv /lib/systemd/system/docker.service.new /lib/systemd/system/docker.service; sudo systemctl -f daemon-reload && sudo systemctl -f enable docker && sudo systemctl -f restart docker; }
I0731 23:36:56.410945   26664 main.go:141] libmachine: SSH cmd err, output: <nil>: --- /lib/systemd/system/docker.service	2023-07-07 14:50:55.000000000 +0000
+++ /lib/systemd/system/docker.service.new	2023-08-01 04:36:53.047029901 +0000
@@ -1,30 +1,32 @@
 [Unit]
 Description=Docker Application Container Engine
 Documentation=https://docs.docker.com
-After=network-online.target docker.socket firewalld.service containerd.service time-set.target
-Wants=network-online.target containerd.service
+BindsTo=containerd.service
+After=network-online.target firewalld.service containerd.service
+Wants=network-online.target
 Requires=docker.socket
+StartLimitBurst=3
+StartLimitIntervalSec=60
 
 [Service]
 Type=notify
-# the default is not to use systemd for cgroups because the delegate issues still
-# exists and systemd currently does not support the cgroup feature set required
-# for containers run by docker
-ExecStart=/usr/bin/dockerd -H fd:// --containerd=/run/containerd/containerd.sock
-ExecReload=/bin/kill -s HUP $MAINPID
-TimeoutStartSec=0
-RestartSec=2
-Restart=always
+Restart=on-failure
 
-# Note that StartLimit* options were moved from "Service" to "Unit" in systemd 229.
-# Both the old, and new location are accepted by systemd 229 and up, so using the old location
-# to make them work for either version of systemd.
-StartLimitBurst=3
 
-# Note that StartLimitInterval was renamed to StartLimitIntervalSec in systemd 230.
-# Both the old, and new name are accepted by systemd 230 and up, so using the old name to make
-# this option work for either version of systemd.
-StartLimitInterval=60s
+
+# This file is a systemd drop-in unit that inherits from the base dockerd configuration.
+# The base configuration already specifies an 'ExecStart=...' command. The first directive
+# here is to clear out that command inherited from the base configuration. Without this,
+# the command from the base configuration and the command specified here are treated as
+# a sequence of commands, which is not the desired behavior, nor is it valid -- systemd
+# will catch this invalid input and refuse to start the service with an error like:
+#  Service has more than one ExecStart= setting, which is only allowed for Type=oneshot services.
+
+# NOTE: default-ulimit=nofile is set to an arbitrary number for consistency with other
+# container runtimes. If left unlimited, it may result in OOM issues with MySQL.
+ExecStart=
+ExecStart=/usr/bin/dockerd -H tcp://0.0.0.0:2376 -H unix:///var/run/docker.sock --default-ulimit=nofile=1048576:1048576 --tlsverify --tlscacert /etc/docker/ca.pem --tlscert /etc/docker/server.pem --tlskey /etc/docker/server-key.pem --label provider=docker --insecure-registry 10.96.0.0/12 
+ExecReload=/bin/kill -s HUP $MAINPID
 
 # Having non-zero Limit*s causes performance problems due to accounting overhead
 # in the kernel. We recommend using cgroups to do container-local accounting.
@@ -32,16 +34,16 @@
 LimitNPROC=infinity
 LimitCORE=infinity
 
-# Comment TasksMax if your systemd version does not support it.
-# Only systemd 226 and above support this option.
+# Uncomment TasksMax if your systemd version supports it.
+# Only systemd 226 and above support this version.
 TasksMax=infinity
+TimeoutStartSec=0
 
 # set delegate yes so that systemd does not reset the cgroups of docker containers
 Delegate=yes
 
 # kill only the docker process, not all processes in the cgroup
 KillMode=process
-OOMScoreAdjust=-500
 
 [Install]
 WantedBy=multi-user.target
Synchronizing state of docker.service with SysV service script with /lib/systemd/systemd-sysv-install.
Executing: /lib/systemd/systemd-sysv-install enable docker

I0731 23:36:56.410945   26664 machine.go:91] provisioned docker machine in 5.9677831s
I0731 23:36:56.410945   26664 client.go:171] LocalClient.Create took 40.9257027s
I0731 23:36:56.410945   26664 start.go:167] duration metric: libmachine.API.Create for "minikube" took 40.9262372s
I0731 23:36:56.410945   26664 start.go:300] post-start starting for "minikube" (driver="docker")
I0731 23:36:56.410945   26664 start.go:329] creating required directories: [/etc/kubernetes/addons /etc/kubernetes/manifests /var/tmp/minikube /var/lib/minikube /var/lib/minikube/certs /var/lib/minikube/images /var/lib/minikube/binaries /tmp/gvisor /usr/share/ca-certificates /etc/ssl/certs]
I0731 23:36:56.440803   26664 ssh_runner.go:195] Run: sudo mkdir -p /etc/kubernetes/addons /etc/kubernetes/manifests /var/tmp/minikube /var/lib/minikube /var/lib/minikube/certs /var/lib/minikube/images /var/lib/minikube/binaries /tmp/gvisor /usr/share/ca-certificates /etc/ssl/certs
I0731 23:36:56.455566   26664 cli_runner.go:164] Run: docker container inspect -f "'{{(index (index .NetworkSettings.Ports "22/tcp") 0).HostPort}}'" minikube
I0731 23:36:56.651161   26664 sshutil.go:53] new ssh client: &{IP:127.0.0.1 Port:62671 SSHKeyPath:C:\Users\white\.minikube\machines\minikube\id_rsa Username:docker}
I0731 23:36:56.775205   26664 ssh_runner.go:195] Run: cat /etc/os-release
I0731 23:36:56.781386   26664 main.go:141] libmachine: Couldn't set key VERSION_CODENAME, no corresponding struct field found
I0731 23:36:56.781386   26664 main.go:141] libmachine: Couldn't set key PRIVACY_POLICY_URL, no corresponding struct field found
I0731 23:36:56.781386   26664 main.go:141] libmachine: Couldn't set key UBUNTU_CODENAME, no corresponding struct field found
I0731 23:36:56.781386   26664 info.go:137] Remote host: Ubuntu 22.04.2 LTS
I0731 23:36:56.782010   26664 filesync.go:126] Scanning C:\Users\white\.minikube\addons for local assets ...
I0731 23:36:56.782010   26664 filesync.go:126] Scanning C:\Users\white\.minikube\files for local assets ...
I0731 23:36:56.782010   26664 start.go:303] post-start completed in 371.065ms
I0731 23:36:56.793661   26664 cli_runner.go:164] Run: docker container inspect -f "{{range .NetworkSettings.Networks}}{{.IPAddress}},{{.GlobalIPv6Address}}{{end}}" minikube
I0731 23:36:56.958258   26664 profile.go:148] Saving config to C:\Users\white\.minikube\profiles\minikube\config.json ...
I0731 23:36:56.982448   26664 ssh_runner.go:195] Run: sh -c "df -h /var | awk 'NR==2{print $5}'"
I0731 23:36:56.990770   26664 cli_runner.go:164] Run: docker container inspect -f "'{{(index (index .NetworkSettings.Ports "22/tcp") 0).HostPort}}'" minikube
I0731 23:36:57.172717   26664 sshutil.go:53] new ssh client: &{IP:127.0.0.1 Port:62671 SSHKeyPath:C:\Users\white\.minikube\machines\minikube\id_rsa Username:docker}
I0731 23:36:57.291264   26664 ssh_runner.go:195] Run: sh -c "df -BG /var | awk 'NR==2{print $4}'"
I0731 23:36:57.298678   26664 start.go:128] duration metric: createHost completed in 41.8150477s
I0731 23:36:57.298678   26664 start.go:83] releasing machines lock for "minikube", held for 41.8155578s
I0731 23:36:57.306116   26664 cli_runner.go:164] Run: docker container inspect -f "{{range .NetworkSettings.Networks}}{{.IPAddress}},{{.GlobalIPv6Address}}{{end}}" minikube
I0731 23:36:57.484359   26664 ssh_runner.go:195] Run: curl -sS -m 2 https://registry.k8s.io/
I0731 23:36:57.494151   26664 ssh_runner.go:195] Run: cat /version.json
I0731 23:36:57.496889   26664 cli_runner.go:164] Run: docker container inspect -f "'{{(index (index .NetworkSettings.Ports "22/tcp") 0).HostPort}}'" minikube
I0731 23:36:57.502398   26664 cli_runner.go:164] Run: docker container inspect -f "'{{(index (index .NetworkSettings.Ports "22/tcp") 0).HostPort}}'" minikube
I0731 23:36:57.690907   26664 sshutil.go:53] new ssh client: &{IP:127.0.0.1 Port:62671 SSHKeyPath:C:\Users\white\.minikube\machines\minikube\id_rsa Username:docker}
I0731 23:36:57.706801   26664 sshutil.go:53] new ssh client: &{IP:127.0.0.1 Port:62671 SSHKeyPath:C:\Users\white\.minikube\machines\minikube\id_rsa Username:docker}
I0731 23:36:58.281270   26664 ssh_runner.go:195] Run: systemctl --version
I0731 23:36:58.300813   26664 ssh_runner.go:195] Run: sh -c "stat /etc/cni/net.d/*loopback.conf*"
I0731 23:36:58.327066   26664 ssh_runner.go:195] Run: sudo find \etc\cni\net.d -maxdepth 1 -type f -name *loopback.conf* -not -name *.mk_disabled -exec sh -c "grep -q loopback {} && ( grep -q name {} || sudo sed -i '/"type": "loopback"/i \ \ \ \ "name": "loopback",' {} ) && sudo sed -i 's|"cniVersion": ".*"|"cniVersion": "1.0.0"|g' {}" ;
W0731 23:36:58.345035   26664 start.go:410] unable to name loopback interface in configureRuntimes: unable to patch loopback cni config "/etc/cni/net.d/*loopback.conf*": sudo find \etc\cni\net.d -maxdepth 1 -type f -name *loopback.conf* -not -name *.mk_disabled -exec sh -c "grep -q loopback {} && ( grep -q name {} || sudo sed -i '/"type": "loopback"/i \ \ \ \ "name": "loopback",' {} ) && sudo sed -i 's|"cniVersion": ".*"|"cniVersion": "1.0.0"|g' {}" ;: Process exited with status 1
stdout:

stderr:
find: '\\etc\\cni\\net.d': No such file or directory
I0731 23:36:58.366913   26664 ssh_runner.go:195] Run: sudo find /etc/cni/net.d -maxdepth 1 -type f ( ( -name *bridge* -or -name *podman* ) -and -not -name *.mk_disabled ) -printf "%!p(MISSING), " -exec sh -c "sudo mv {} {}.mk_disabled" ;
I0731 23:36:58.422135   26664 cni.go:262] disabled [/etc/cni/net.d/100-crio-bridge.conf, /etc/cni/net.d/87-podman-bridge.conflist] bridge cni config(s)
I0731 23:36:58.422135   26664 start.go:466] detecting cgroup driver to use...
I0731 23:36:58.422135   26664 detect.go:196] detected "cgroupfs" cgroup driver on host os
I0731 23:36:58.422135   26664 ssh_runner.go:195] Run: /bin/bash -c "sudo mkdir -p /etc && printf %!s(MISSING) "runtime-endpoint: unix:///run/containerd/containerd.sock
" | sudo tee /etc/crictl.yaml"
I0731 23:36:58.464284   26664 ssh_runner.go:195] Run: sh -c "sudo sed -i -r 's|^( *)sandbox_image = .*$|\1sandbox_image = "registry.k8s.io/pause:3.9"|' /etc/containerd/config.toml"
I0731 23:36:58.499203   26664 ssh_runner.go:195] Run: sh -c "sudo sed -i -r 's|^( *)restrict_oom_score_adj = .*$|\1restrict_oom_score_adj = false|' /etc/containerd/config.toml"
I0731 23:36:58.514512   26664 containerd.go:145] configuring containerd to use "cgroupfs" as cgroup driver...
I0731 23:36:58.528744   26664 ssh_runner.go:195] Run: sh -c "sudo sed -i -r 's|^( *)SystemdCgroup = .*$|\1SystemdCgroup = false|g' /etc/containerd/config.toml"
I0731 23:36:58.558446   26664 ssh_runner.go:195] Run: sh -c "sudo sed -i 's|"io.containerd.runtime.v1.linux"|"io.containerd.runc.v2"|g' /etc/containerd/config.toml"
I0731 23:36:58.592064   26664 ssh_runner.go:195] Run: sh -c "sudo sed -i '/systemd_cgroup/d' /etc/containerd/config.toml"
I0731 23:36:58.624126   26664 ssh_runner.go:195] Run: sh -c "sudo sed -i 's|"io.containerd.runc.v1"|"io.containerd.runc.v2"|g' /etc/containerd/config.toml"
I0731 23:36:58.664606   26664 ssh_runner.go:195] Run: sh -c "sudo rm -rf /etc/cni/net.mk"
I0731 23:36:58.703758   26664 ssh_runner.go:195] Run: sh -c "sudo sed -i -r 's|^( *)conf_dir = .*$|\1conf_dir = "/etc/cni/net.d"|g' /etc/containerd/config.toml"
I0731 23:36:58.773042   26664 ssh_runner.go:195] Run: sudo sysctl net.bridge.bridge-nf-call-iptables
I0731 23:36:58.821902   26664 ssh_runner.go:195] Run: sudo sh -c "echo 1 > /proc/sys/net/ipv4/ip_forward"
I0731 23:36:58.853880   26664 ssh_runner.go:195] Run: sudo systemctl daemon-reload
I0731 23:36:59.001960   26664 ssh_runner.go:195] Run: sudo systemctl restart containerd
I0731 23:36:59.141480   26664 start.go:466] detecting cgroup driver to use...
I0731 23:36:59.141480   26664 detect.go:196] detected "cgroupfs" cgroup driver on host os
I0731 23:36:59.158312   26664 ssh_runner.go:195] Run: sudo systemctl cat docker.service
I0731 23:36:59.183138   26664 cruntime.go:276] skipping containerd shutdown because we are bound to it
I0731 23:36:59.201901   26664 ssh_runner.go:195] Run: sudo systemctl is-active --quiet service crio
I0731 23:36:59.234323   26664 ssh_runner.go:195] Run: /bin/bash -c "sudo mkdir -p /etc && printf %!s(MISSING) "runtime-endpoint: unix:///var/run/cri-dockerd.sock
" | sudo tee /etc/crictl.yaml"
I0731 23:36:59.280653   26664 ssh_runner.go:195] Run: which cri-dockerd
I0731 23:36:59.306181   26664 ssh_runner.go:195] Run: sudo mkdir -p /etc/systemd/system/cri-docker.service.d
I0731 23:36:59.321588   26664 ssh_runner.go:362] scp memory --> /etc/systemd/system/cri-docker.service.d/10-cni.conf (189 bytes)
I0731 23:36:59.375802   26664 ssh_runner.go:195] Run: sudo systemctl unmask docker.service
I0731 23:36:59.547402   26664 ssh_runner.go:195] Run: sudo systemctl enable docker.socket
I0731 23:36:59.698519   26664 docker.go:535] configuring docker to use "cgroupfs" as cgroup driver...
I0731 23:36:59.698519   26664 ssh_runner.go:362] scp memory --> /etc/docker/daemon.json (144 bytes)
I0731 23:36:59.746425   26664 ssh_runner.go:195] Run: sudo systemctl daemon-reload
I0731 23:36:59.900370   26664 ssh_runner.go:195] Run: sudo systemctl restart docker
I0731 23:37:04.504820   26664 ssh_runner.go:235] Completed: sudo systemctl restart docker: (4.6044503s)
I0731 23:37:04.520759   26664 ssh_runner.go:195] Run: sudo systemctl enable cri-docker.socket
I0731 23:37:04.674999   26664 ssh_runner.go:195] Run: sudo systemctl unmask cri-docker.socket
I0731 23:37:04.846204   26664 ssh_runner.go:195] Run: sudo systemctl enable cri-docker.socket
I0731 23:37:04.983893   26664 ssh_runner.go:195] Run: sudo systemctl daemon-reload
I0731 23:37:05.149569   26664 ssh_runner.go:195] Run: sudo systemctl restart cri-docker.socket
I0731 23:37:05.189296   26664 ssh_runner.go:195] Run: sudo systemctl daemon-reload
I0731 23:37:05.404096   26664 ssh_runner.go:195] Run: sudo systemctl restart cri-docker
I0731 23:37:05.622294   26664 start.go:513] Will wait 60s for socket path /var/run/cri-dockerd.sock
I0731 23:37:05.647101   26664 ssh_runner.go:195] Run: stat /var/run/cri-dockerd.sock
I0731 23:37:05.653867   26664 start.go:534] Will wait 60s for crictl version
I0731 23:37:05.672143   26664 ssh_runner.go:195] Run: which crictl
I0731 23:37:05.694633   26664 ssh_runner.go:195] Run: sudo /usr/bin/crictl version
I0731 23:37:05.891778   26664 start.go:550] Version:  0.1.0
RuntimeName:  docker
RuntimeVersion:  24.0.4
RuntimeApiVersion:  v1
I0731 23:37:05.907293   26664 ssh_runner.go:195] Run: docker version --format {{.Server.Version}}
I0731 23:37:05.964215   26664 ssh_runner.go:195] Run: docker version --format {{.Server.Version}}
I0731 23:37:06.004851   26664 out.go:204] 🐳  Preparando Kubernetes v1.27.3 en Docker 24.0.4...
I0731 23:37:06.017298   26664 cli_runner.go:164] Run: docker exec -t minikube dig +short host.docker.internal
I0731 23:37:06.401175   26664 network.go:96] got host ip for mount in container by digging dns: 192.168.65.254
I0731 23:37:06.418738   26664 ssh_runner.go:195] Run: grep 192.168.65.254	host.minikube.internal$ /etc/hosts
I0731 23:37:06.425454   26664 ssh_runner.go:195] Run: /bin/bash -c "{ grep -v $'\thost.minikube.internal$' "/etc/hosts"; echo "192.168.65.254	host.minikube.internal"; } > /tmp/h.$$; sudo cp /tmp/h.$$ "/etc/hosts""
I0731 23:37:06.452698   26664 cli_runner.go:164] Run: docker container inspect -f "'{{(index (index .NetworkSettings.Ports "8443/tcp") 0).HostPort}}'" minikube
I0731 23:37:06.630799   26664 preload.go:132] Checking if preload exists for k8s version v1.27.3 and runtime docker
I0731 23:37:06.638381   26664 ssh_runner.go:195] Run: docker images --format {{.Repository}}:{{.Tag}}
I0731 23:37:06.667813   26664 docker.go:636] Got preloaded images: -- stdout --
registry.k8s.io/kube-apiserver:v1.27.3
registry.k8s.io/kube-controller-manager:v1.27.3
registry.k8s.io/kube-scheduler:v1.27.3
registry.k8s.io/kube-proxy:v1.27.3
registry.k8s.io/coredns/coredns:v1.10.1
registry.k8s.io/etcd:3.5.7-0
registry.k8s.io/pause:3.9
gcr.io/k8s-minikube/storage-provisioner:v5

-- /stdout --
I0731 23:37:06.667813   26664 docker.go:566] Images already preloaded, skipping extraction
I0731 23:37:06.676334   26664 ssh_runner.go:195] Run: docker images --format {{.Repository}}:{{.Tag}}
I0731 23:37:06.704385   26664 docker.go:636] Got preloaded images: -- stdout --
registry.k8s.io/kube-apiserver:v1.27.3
registry.k8s.io/kube-controller-manager:v1.27.3
registry.k8s.io/kube-scheduler:v1.27.3
registry.k8s.io/kube-proxy:v1.27.3
registry.k8s.io/coredns/coredns:v1.10.1
registry.k8s.io/etcd:3.5.7-0
registry.k8s.io/pause:3.9
gcr.io/k8s-minikube/storage-provisioner:v5

-- /stdout --
I0731 23:37:06.704385   26664 cache_images.go:84] Images are preloaded, skipping loading
I0731 23:37:06.723898   26664 ssh_runner.go:195] Run: docker info --format {{.CgroupDriver}}
I0731 23:37:06.951569   26664 cni.go:84] Creating CNI manager for ""
I0731 23:37:06.951569   26664 cni.go:158] "docker" driver + "docker" container runtime found on kubernetes v1.24+, recommending bridge
I0731 23:37:06.951569   26664 kubeadm.go:87] Using pod CIDR: 10.244.0.0/16
I0731 23:37:06.951569   26664 kubeadm.go:176] kubeadm options: {CertDir:/var/lib/minikube/certs ServiceCIDR:10.96.0.0/12 PodSubnet:10.244.0.0/16 AdvertiseAddress:192.168.49.2 APIServerPort:8443 KubernetesVersion:v1.27.3 EtcdDataDir:/var/lib/minikube/etcd EtcdExtraArgs:map[] ClusterName:minikube NodeName:minikube DNSDomain:cluster.local CRISocket:/var/run/cri-dockerd.sock ImageRepository: ComponentOptions:[{Component:apiServer ExtraArgs:map[enable-admission-plugins:NamespaceLifecycle,LimitRanger,ServiceAccount,DefaultStorageClass,DefaultTolerationSeconds,NodeRestriction,MutatingAdmissionWebhook,ValidatingAdmissionWebhook,ResourceQuota] Pairs:map[certSANs:["127.0.0.1", "localhost", "192.168.49.2"]]} {Component:controllerManager ExtraArgs:map[allocate-node-cidrs:true leader-elect:false] Pairs:map[]} {Component:scheduler ExtraArgs:map[leader-elect:false] Pairs:map[]}] FeatureArgs:map[] NodeIP:192.168.49.2 CgroupDriver:cgroupfs ClientCAFile:/var/lib/minikube/certs/ca.crt StaticPodPath:/etc/kubernetes/manifests ControlPlaneAddress:control-plane.minikube.internal KubeProxyOptions:map[] ResolvConfSearchRegression:false KubeletConfigOpts:map[hairpinMode:hairpin-veth runtimeRequestTimeout:15m] PrependCriSocketUnix:true}
I0731 23:37:06.951569   26664 kubeadm.go:181] kubeadm config:
apiVersion: kubeadm.k8s.io/v1beta3
kind: InitConfiguration
localAPIEndpoint:
  advertiseAddress: 192.168.49.2
  bindPort: 8443
bootstrapTokens:
  - groups:
      - system:bootstrappers:kubeadm:default-node-token
    ttl: 24h0m0s
    usages:
      - signing
      - authentication
nodeRegistration:
  criSocket: unix:///var/run/cri-dockerd.sock
  name: "minikube"
  kubeletExtraArgs:
    node-ip: 192.168.49.2
  taints: []
---
apiVersion: kubeadm.k8s.io/v1beta3
kind: ClusterConfiguration
apiServer:
  certSANs: ["127.0.0.1", "localhost", "192.168.49.2"]
  extraArgs:
    enable-admission-plugins: "NamespaceLifecycle,LimitRanger,ServiceAccount,DefaultStorageClass,DefaultTolerationSeconds,NodeRestriction,MutatingAdmissionWebhook,ValidatingAdmissionWebhook,ResourceQuota"
controllerManager:
  extraArgs:
    allocate-node-cidrs: "true"
    leader-elect: "false"
scheduler:
  extraArgs:
    leader-elect: "false"
certificatesDir: /var/lib/minikube/certs
clusterName: mk
controlPlaneEndpoint: control-plane.minikube.internal:8443
etcd:
  local:
    dataDir: /var/lib/minikube/etcd
    extraArgs:
      proxy-refresh-interval: "70000"
kubernetesVersion: v1.27.3
networking:
  dnsDomain: cluster.local
  podSubnet: "10.244.0.0/16"
  serviceSubnet: 10.96.0.0/12
---
apiVersion: kubelet.config.k8s.io/v1beta1
kind: KubeletConfiguration
authentication:
  x509:
    clientCAFile: /var/lib/minikube/certs/ca.crt
cgroupDriver: cgroupfs
hairpinMode: hairpin-veth
runtimeRequestTimeout: 15m
clusterDomain: "cluster.local"
# disable disk resource management by default
imageGCHighThresholdPercent: 100
evictionHard:
  nodefs.available: "0%!"(MISSING)
  nodefs.inodesFree: "0%!"(MISSING)
  imagefs.available: "0%!"(MISSING)
failSwapOn: false
staticPodPath: /etc/kubernetes/manifests
---
apiVersion: kubeproxy.config.k8s.io/v1alpha1
kind: KubeProxyConfiguration
clusterCIDR: "10.244.0.0/16"
metricsBindAddress: 0.0.0.0:10249
conntrack:
  maxPerCore: 0
# Skip setting "net.netfilter.nf_conntrack_tcp_timeout_established"
  tcpEstablishedTimeout: 0s
# Skip setting "net.netfilter.nf_conntrack_tcp_timeout_close"
  tcpCloseWaitTimeout: 0s

I0731 23:37:06.952107   26664 kubeadm.go:976] kubelet [Unit]
Wants=docker.socket

[Service]
ExecStart=
ExecStart=/var/lib/minikube/binaries/v1.27.3/kubelet --bootstrap-kubeconfig=/etc/kubernetes/bootstrap-kubelet.conf --config=/var/lib/kubelet/config.yaml --container-runtime-endpoint=unix:///var/run/cri-dockerd.sock --hostname-override=minikube --kubeconfig=/etc/kubernetes/kubelet.conf --node-ip=192.168.49.2

[Install]
 config:
{KubernetesVersion:v1.27.3 ClusterName:minikube Namespace:default APIServerName:minikubeCA APIServerNames:[] APIServerIPs:[] DNSDomain:cluster.local ContainerRuntime:docker CRISocket: NetworkPlugin:cni FeatureGates: ServiceCIDR:10.96.0.0/12 ImageRepository: LoadBalancerStartIP: LoadBalancerEndIP: CustomIngressCert: RegistryAliases: ExtraOptions:[] ShouldLoadCachedImages:true EnableDefaultCNI:false CNI: NodeIP: NodePort:8443 NodeName:}
I0731 23:37:06.968609   26664 ssh_runner.go:195] Run: sudo ls /var/lib/minikube/binaries/v1.27.3
I0731 23:37:06.983671   26664 binaries.go:44] Found k8s binaries, skipping transfer
I0731 23:37:06.996758   26664 ssh_runner.go:195] Run: sudo mkdir -p /etc/systemd/system/kubelet.service.d /lib/systemd/system /var/tmp/minikube
I0731 23:37:07.011441   26664 ssh_runner.go:362] scp memory --> /etc/systemd/system/kubelet.service.d/10-kubeadm.conf (369 bytes)
I0731 23:37:07.034258   26664 ssh_runner.go:362] scp memory --> /lib/systemd/system/kubelet.service (352 bytes)
I0731 23:37:07.057867   26664 ssh_runner.go:362] scp memory --> /var/tmp/minikube/kubeadm.yaml.new (2091 bytes)
I0731 23:37:07.100489   26664 ssh_runner.go:195] Run: grep 192.168.49.2	control-plane.minikube.internal$ /etc/hosts
I0731 23:37:07.106728   26664 ssh_runner.go:195] Run: /bin/bash -c "{ grep -v $'\tcontrol-plane.minikube.internal$' "/etc/hosts"; echo "192.168.49.2	control-plane.minikube.internal"; } > /tmp/h.$$; sudo cp /tmp/h.$$ "/etc/hosts""
I0731 23:37:07.122301   26664 certs.go:56] Setting up C:\Users\white\.minikube\profiles\minikube for IP: 192.168.49.2
I0731 23:37:07.122810   26664 certs.go:190] acquiring lock for shared ca certs: {Name:mkdbc3a3876ecc04f12e4e38fd65b7480a467d61 Clock:{} Delay:500ms Timeout:1m0s Cancel:<nil>}
I0731 23:37:07.123335   26664 certs.go:199] skipping minikubeCA CA generation: C:\Users\white\.minikube\ca.key
I0731 23:37:07.124421   26664 certs.go:199] skipping proxyClientCA CA generation: C:\Users\white\.minikube\proxy-client-ca.key
I0731 23:37:07.124421   26664 certs.go:319] generating minikube-user signed cert: C:\Users\white\.minikube\profiles\minikube\client.key
I0731 23:37:07.124970   26664 crypto.go:68] Generating cert C:\Users\white\.minikube\profiles\minikube\client.crt with IP's: []
I0731 23:37:07.482157   26664 crypto.go:156] Writing cert to C:\Users\white\.minikube\profiles\minikube\client.crt ...
I0731 23:37:07.482157   26664 lock.go:35] WriteFile acquiring C:\Users\white\.minikube\profiles\minikube\client.crt: {Name:mk1ae8d3a9f01773f3eb3de2e4155806180066da Clock:{} Delay:500ms Timeout:1m0s Cancel:<nil>}
I0731 23:37:07.483163   26664 crypto.go:164] Writing key to C:\Users\white\.minikube\profiles\minikube\client.key ...
I0731 23:37:07.483163   26664 lock.go:35] WriteFile acquiring C:\Users\white\.minikube\profiles\minikube\client.key: {Name:mk824fb9794f0d5b32f7ff93cc8555b03516ee9a Clock:{} Delay:500ms Timeout:1m0s Cancel:<nil>}
I0731 23:37:07.483672   26664 certs.go:319] generating minikube signed cert: C:\Users\white\.minikube\profiles\minikube\apiserver.key.dd3b5fb2
I0731 23:37:07.483672   26664 crypto.go:68] Generating cert C:\Users\white\.minikube\profiles\minikube\apiserver.crt.dd3b5fb2 with IP's: [192.168.49.2 10.96.0.1 127.0.0.1 10.0.0.1]
I0731 23:37:07.737743   26664 crypto.go:156] Writing cert to C:\Users\white\.minikube\profiles\minikube\apiserver.crt.dd3b5fb2 ...
I0731 23:37:07.737743   26664 lock.go:35] WriteFile acquiring C:\Users\white\.minikube\profiles\minikube\apiserver.crt.dd3b5fb2: {Name:mkcd63bfbfab2840a2832c813f28d50cbabed43d Clock:{} Delay:500ms Timeout:1m0s Cancel:<nil>}
I0731 23:37:07.738756   26664 crypto.go:164] Writing key to C:\Users\white\.minikube\profiles\minikube\apiserver.key.dd3b5fb2 ...
I0731 23:37:07.738756   26664 lock.go:35] WriteFile acquiring C:\Users\white\.minikube\profiles\minikube\apiserver.key.dd3b5fb2: {Name:mke7a9a7efe8eb19f563712f5d274b81102c74b8 Clock:{} Delay:500ms Timeout:1m0s Cancel:<nil>}
I0731 23:37:07.739758   26664 certs.go:337] copying C:\Users\white\.minikube\profiles\minikube\apiserver.crt.dd3b5fb2 -> C:\Users\white\.minikube\profiles\minikube\apiserver.crt
I0731 23:37:07.755287   26664 certs.go:341] copying C:\Users\white\.minikube\profiles\minikube\apiserver.key.dd3b5fb2 -> C:\Users\white\.minikube\profiles\minikube\apiserver.key
I0731 23:37:07.759056   26664 certs.go:319] generating aggregator signed cert: C:\Users\white\.minikube\profiles\minikube\proxy-client.key
I0731 23:37:07.760075   26664 crypto.go:68] Generating cert C:\Users\white\.minikube\profiles\minikube\proxy-client.crt with IP's: []
I0731 23:37:08.001825   26664 crypto.go:156] Writing cert to C:\Users\white\.minikube\profiles\minikube\proxy-client.crt ...
I0731 23:37:08.001825   26664 lock.go:35] WriteFile acquiring C:\Users\white\.minikube\profiles\minikube\proxy-client.crt: {Name:mkfed407853039dcdf4db3158a4b5e7a8ea28bf9 Clock:{} Delay:500ms Timeout:1m0s Cancel:<nil>}
I0731 23:37:08.002825   26664 crypto.go:164] Writing key to C:\Users\white\.minikube\profiles\minikube\proxy-client.key ...
I0731 23:37:08.002825   26664 lock.go:35] WriteFile acquiring C:\Users\white\.minikube\profiles\minikube\proxy-client.key: {Name:mk0ea21b4d06c12e80e90af76e04b3295343b383 Clock:{} Delay:500ms Timeout:1m0s Cancel:<nil>}
I0731 23:37:08.021034   26664 certs.go:437] found cert: C:\Users\white\.minikube\certs\C:\Users\white\.minikube\certs\ca-key.pem (1679 bytes)
I0731 23:37:08.021034   26664 certs.go:437] found cert: C:\Users\white\.minikube\certs\C:\Users\white\.minikube\certs\ca.pem (1074 bytes)
I0731 23:37:08.021034   26664 certs.go:437] found cert: C:\Users\white\.minikube\certs\C:\Users\white\.minikube\certs\cert.pem (1119 bytes)
I0731 23:37:08.021034   26664 certs.go:437] found cert: C:\Users\white\.minikube\certs\C:\Users\white\.minikube\certs\key.pem (1675 bytes)
I0731 23:37:08.023024   26664 ssh_runner.go:362] scp C:\Users\white\.minikube\profiles\minikube\apiserver.crt --> /var/lib/minikube/certs/apiserver.crt (1399 bytes)
I0731 23:37:08.070967   26664 ssh_runner.go:362] scp C:\Users\white\.minikube\profiles\minikube\apiserver.key --> /var/lib/minikube/certs/apiserver.key (1675 bytes)
I0731 23:37:08.115415   26664 ssh_runner.go:362] scp C:\Users\white\.minikube\profiles\minikube\proxy-client.crt --> /var/lib/minikube/certs/proxy-client.crt (1147 bytes)
I0731 23:37:08.159717   26664 ssh_runner.go:362] scp C:\Users\white\.minikube\profiles\minikube\proxy-client.key --> /var/lib/minikube/certs/proxy-client.key (1675 bytes)
I0731 23:37:08.209497   26664 ssh_runner.go:362] scp C:\Users\white\.minikube\ca.crt --> /var/lib/minikube/certs/ca.crt (1111 bytes)
I0731 23:37:08.255402   26664 ssh_runner.go:362] scp C:\Users\white\.minikube\ca.key --> /var/lib/minikube/certs/ca.key (1675 bytes)
I0731 23:37:08.300767   26664 ssh_runner.go:362] scp C:\Users\white\.minikube\proxy-client-ca.crt --> /var/lib/minikube/certs/proxy-client-ca.crt (1119 bytes)
I0731 23:37:08.343238   26664 ssh_runner.go:362] scp C:\Users\white\.minikube\proxy-client-ca.key --> /var/lib/minikube/certs/proxy-client-ca.key (1679 bytes)
I0731 23:37:08.385756   26664 ssh_runner.go:362] scp C:\Users\white\.minikube\ca.crt --> /usr/share/ca-certificates/minikubeCA.pem (1111 bytes)
I0731 23:37:08.422510   26664 ssh_runner.go:362] scp memory --> /var/lib/minikube/kubeconfig (738 bytes)
I0731 23:37:08.476805   26664 ssh_runner.go:195] Run: openssl version
I0731 23:37:08.510354   26664 ssh_runner.go:195] Run: sudo /bin/bash -c "test -s /usr/share/ca-certificates/minikubeCA.pem && ln -fs /usr/share/ca-certificates/minikubeCA.pem /etc/ssl/certs/minikubeCA.pem"
I0731 23:37:08.547245   26664 ssh_runner.go:195] Run: ls -la /usr/share/ca-certificates/minikubeCA.pem
I0731 23:37:08.554676   26664 certs.go:480] hashing: -rw-r--r-- 1 root root 1111 Jul 31 21:27 /usr/share/ca-certificates/minikubeCA.pem
I0731 23:37:08.573771   26664 ssh_runner.go:195] Run: openssl x509 -hash -noout -in /usr/share/ca-certificates/minikubeCA.pem
I0731 23:37:08.610789   26664 ssh_runner.go:195] Run: sudo /bin/bash -c "test -L /etc/ssl/certs/b5213941.0 || ln -fs /etc/ssl/certs/minikubeCA.pem /etc/ssl/certs/b5213941.0"
I0731 23:37:08.640231   26664 ssh_runner.go:195] Run: ls /var/lib/minikube/certs/etcd
I0731 23:37:08.647919   26664 certs.go:353] certs directory doesn't exist, likely first start: ls /var/lib/minikube/certs/etcd: Process exited with status 2
stdout:

stderr:
ls: cannot access '/var/lib/minikube/certs/etcd': No such file or directory
I0731 23:37:08.647919   26664 kubeadm.go:404] StartCluster: {Name:minikube KeepContext:false EmbedCerts:false MinikubeISO: KicBaseImage:gcr.io/k8s-minikube/kicbase:v0.0.40@sha256:8cadf23777709e43eca447c47a45f5a4635615129267ce025193040ec92a1631 Memory:7600 CPUs:2 DiskSize:20000 VMDriver: Driver:docker HyperkitVpnKitSock: HyperkitVSockPorts:[] DockerEnv:[] ContainerVolumeMounts:[] InsecureRegistry:[] RegistryMirror:[] HostOnlyCIDR:192.168.59.1/24 HypervVirtualSwitch: HypervUseExternalSwitch:false HypervExternalAdapter: KVMNetwork:default KVMQemuURI:qemu:///system KVMGPU:false KVMHidden:false KVMNUMACount:1 APIServerPort:0 DockerOpt:[] DisableDriverMounts:false NFSShare:[] NFSSharesRoot:/nfsshares UUID: NoVTXCheck:false DNSProxy:false HostDNSResolver:true HostOnlyNicType:virtio NatNicType:virtio SSHIPAddress: SSHUser:root SSHKey: SSHPort:22 KubernetesConfig:{KubernetesVersion:v1.27.3 ClusterName:minikube Namespace:default APIServerName:minikubeCA APIServerNames:[] APIServerIPs:[] DNSDomain:cluster.local ContainerRuntime:docker CRISocket: NetworkPlugin:cni FeatureGates: ServiceCIDR:10.96.0.0/12 ImageRepository: LoadBalancerStartIP: LoadBalancerEndIP: CustomIngressCert: RegistryAliases: ExtraOptions:[] ShouldLoadCachedImages:true EnableDefaultCNI:false CNI: NodeIP: NodePort:8443 NodeName:} Nodes:[{Name: IP:192.168.49.2 Port:8443 KubernetesVersion:v1.27.3 ContainerRuntime:docker ControlPlane:true Worker:true}] Addons:map[] CustomAddonImages:map[] CustomAddonRegistries:map[] VerifyComponents:map[apiserver:true system_pods:true] StartHostTimeout:6m0s ScheduledStop:<nil> ExposedPorts:[] ListenAddress: Network: Subnet: MultiNodeRequested:false ExtraDisks:0 CertExpiration:26280h0m0s Mount:false MountString:C:\Users\white:/minikube-host Mount9PVersion:9p2000.L MountGID:docker MountIP: MountMSize:262144 MountOptions:[] MountPort:0 MountType:9p MountUID:docker BinaryMirror: DisableOptimizations:false DisableMetrics:false CustomQemuFirmwarePath: SocketVMnetClientPath: SocketVMnetPath: StaticIP: SSHAuthSock: SSHAgentPID:0}
I0731 23:37:08.657049   26664 ssh_runner.go:195] Run: docker ps --filter status=paused --filter=name=k8s_.*_(kube-system)_ --format={{.ID}}
I0731 23:37:08.700604   26664 ssh_runner.go:195] Run: sudo ls /var/lib/kubelet/kubeadm-flags.env /var/lib/kubelet/config.yaml /var/lib/minikube/etcd
I0731 23:37:08.737194   26664 ssh_runner.go:195] Run: sudo cp /var/tmp/minikube/kubeadm.yaml.new /var/tmp/minikube/kubeadm.yaml
I0731 23:37:08.755694   26664 kubeadm.go:226] ignoring SystemVerification for kubeadm because of docker driver
I0731 23:37:08.773883   26664 ssh_runner.go:195] Run: sudo ls -la /etc/kubernetes/admin.conf /etc/kubernetes/kubelet.conf /etc/kubernetes/controller-manager.conf /etc/kubernetes/scheduler.conf
I0731 23:37:08.786627   26664 kubeadm.go:152] config check failed, skipping stale config cleanup: sudo ls -la /etc/kubernetes/admin.conf /etc/kubernetes/kubelet.conf /etc/kubernetes/controller-manager.conf /etc/kubernetes/scheduler.conf: Process exited with status 2
stdout:

stderr:
ls: cannot access '/etc/kubernetes/admin.conf': No such file or directory
ls: cannot access '/etc/kubernetes/kubelet.conf': No such file or directory
ls: cannot access '/etc/kubernetes/controller-manager.conf': No such file or directory
ls: cannot access '/etc/kubernetes/scheduler.conf': No such file or directory
I0731 23:37:08.786627   26664 ssh_runner.go:286] Start: /bin/bash -c "sudo env PATH="/var/lib/minikube/binaries/v1.27.3:$PATH" kubeadm init --config /var/tmp/minikube/kubeadm.yaml  --ignore-preflight-errors=DirAvailable--etc-kubernetes-manifests,DirAvailable--var-lib-minikube,DirAvailable--var-lib-minikube-etcd,FileAvailable--etc-kubernetes-manifests-kube-scheduler.yaml,FileAvailable--etc-kubernetes-manifests-kube-apiserver.yaml,FileAvailable--etc-kubernetes-manifests-kube-controller-manager.yaml,FileAvailable--etc-kubernetes-manifests-etcd.yaml,Port-10250,Swap,NumCPU,Mem,SystemVerification,FileContent--proc-sys-net-bridge-bridge-nf-call-iptables"
I0731 23:37:08.970930   26664 kubeadm.go:322] 	[WARNING Swap]: swap is enabled; production deployments should disable swap unless testing the NodeSwap feature gate of the kubelet
I0731 23:37:09.119806   26664 kubeadm.go:322] 	[WARNING Service-Kubelet]: kubelet service is not enabled, please run 'systemctl enable kubelet.service'
I0731 23:37:23.950362   26664 kubeadm.go:322] [init] Using Kubernetes version: v1.27.3
I0731 23:37:23.950434   26664 kubeadm.go:322] [preflight] Running pre-flight checks
I0731 23:37:23.950434   26664 kubeadm.go:322] [preflight] Pulling images required for setting up a Kubernetes cluster
I0731 23:37:23.950434   26664 kubeadm.go:322] [preflight] This might take a minute or two, depending on the speed of your internet connection
I0731 23:37:23.951020   26664 kubeadm.go:322] [preflight] You can also perform this action in beforehand using 'kubeadm config images pull'
I0731 23:37:23.951020   26664 kubeadm.go:322] [certs] Using certificateDir folder "/var/lib/minikube/certs"
I0731 23:37:23.952700   26664 out.go:204]     ▪ Generando certificados y llaves
I0731 23:37:23.953284   26664 kubeadm.go:322] [certs] Using existing ca certificate authority
I0731 23:37:23.953284   26664 kubeadm.go:322] [certs] Using existing apiserver certificate and key on disk
I0731 23:37:23.953856   26664 kubeadm.go:322] [certs] Generating "apiserver-kubelet-client" certificate and key
I0731 23:37:23.953856   26664 kubeadm.go:322] [certs] Generating "front-proxy-ca" certificate and key
I0731 23:37:23.953856   26664 kubeadm.go:322] [certs] Generating "front-proxy-client" certificate and key
I0731 23:37:23.954446   26664 kubeadm.go:322] [certs] Generating "etcd/ca" certificate and key
I0731 23:37:23.954446   26664 kubeadm.go:322] [certs] Generating "etcd/server" certificate and key
I0731 23:37:23.954446   26664 kubeadm.go:322] [certs] etcd/server serving cert is signed for DNS names [localhost minikube] and IPs [192.168.49.2 127.0.0.1 ::1]
I0731 23:37:23.954446   26664 kubeadm.go:322] [certs] Generating "etcd/peer" certificate and key
I0731 23:37:23.954957   26664 kubeadm.go:322] [certs] etcd/peer serving cert is signed for DNS names [localhost minikube] and IPs [192.168.49.2 127.0.0.1 ::1]
I0731 23:37:23.954957   26664 kubeadm.go:322] [certs] Generating "etcd/healthcheck-client" certificate and key
I0731 23:37:23.954957   26664 kubeadm.go:322] [certs] Generating "apiserver-etcd-client" certificate and key
I0731 23:37:23.954957   26664 kubeadm.go:322] [certs] Generating "sa" key and public key
I0731 23:37:23.955506   26664 kubeadm.go:322] [kubeconfig] Using kubeconfig folder "/etc/kubernetes"
I0731 23:37:23.955506   26664 kubeadm.go:322] [kubeconfig] Writing "admin.conf" kubeconfig file
I0731 23:37:23.955506   26664 kubeadm.go:322] [kubeconfig] Writing "kubelet.conf" kubeconfig file
I0731 23:37:23.955506   26664 kubeadm.go:322] [kubeconfig] Writing "controller-manager.conf" kubeconfig file
I0731 23:37:23.955506   26664 kubeadm.go:322] [kubeconfig] Writing "scheduler.conf" kubeconfig file
I0731 23:37:23.956042   26664 kubeadm.go:322] [kubelet-start] Writing kubelet environment file with flags to file "/var/lib/kubelet/kubeadm-flags.env"
I0731 23:37:23.956042   26664 kubeadm.go:322] [kubelet-start] Writing kubelet configuration to file "/var/lib/kubelet/config.yaml"
I0731 23:37:23.956042   26664 kubeadm.go:322] [kubelet-start] Starting the kubelet
I0731 23:37:23.956680   26664 kubeadm.go:322] [control-plane] Using manifest folder "/etc/kubernetes/manifests"
I0731 23:37:23.959303   26664 out.go:204]     ▪ Iniciando plano de control
I0731 23:37:23.961234   26664 kubeadm.go:322] [control-plane] Creating static Pod manifest for "kube-apiserver"
I0731 23:37:23.961234   26664 kubeadm.go:322] [control-plane] Creating static Pod manifest for "kube-controller-manager"
I0731 23:37:23.961757   26664 kubeadm.go:322] [control-plane] Creating static Pod manifest for "kube-scheduler"
I0731 23:37:23.961757   26664 kubeadm.go:322] [etcd] Creating static Pod manifest for local etcd in "/etc/kubernetes/manifests"
I0731 23:37:23.962360   26664 kubeadm.go:322] [wait-control-plane] Waiting for the kubelet to boot up the control plane as static Pods from directory "/etc/kubernetes/manifests". This can take up to 4m0s
I0731 23:37:23.962360   26664 kubeadm.go:322] [apiclient] All control plane components are healthy after 9.503955 seconds
I0731 23:37:23.962360   26664 kubeadm.go:322] [upload-config] Storing the configuration used in ConfigMap "kubeadm-config" in the "kube-system" Namespace
I0731 23:37:23.962868   26664 kubeadm.go:322] [kubelet] Creating a ConfigMap "kubelet-config" in namespace kube-system with the configuration for the kubelets in the cluster
I0731 23:37:23.962868   26664 kubeadm.go:322] [upload-certs] Skipping phase. Please see --upload-certs
I0731 23:37:23.963428   26664 kubeadm.go:322] [mark-control-plane] Marking the node minikube as control-plane by adding the labels: [node-role.kubernetes.io/control-plane node.kubernetes.io/exclude-from-external-load-balancers]
I0731 23:37:23.963428   26664 kubeadm.go:322] [bootstrap-token] Using token: kt71rm.7x1c90475ay8960p
I0731 23:37:23.964535   26664 out.go:204]     ▪ Configurando reglas RBAC...
I0731 23:37:23.965096   26664 kubeadm.go:322] [bootstrap-token] Configuring bootstrap tokens, cluster-info ConfigMap, RBAC Roles
I0731 23:37:23.965647   26664 kubeadm.go:322] [bootstrap-token] Configured RBAC rules to allow Node Bootstrap tokens to get nodes
I0731 23:37:23.965647   26664 kubeadm.go:322] [bootstrap-token] Configured RBAC rules to allow Node Bootstrap tokens to post CSRs in order for nodes to get long term certificate credentials
I0731 23:37:23.966314   26664 kubeadm.go:322] [bootstrap-token] Configured RBAC rules to allow the csrapprover controller automatically approve CSRs from a Node Bootstrap Token
I0731 23:37:23.966314   26664 kubeadm.go:322] [bootstrap-token] Configured RBAC rules to allow certificate rotation for all node client certificates in the cluster
I0731 23:37:23.966314   26664 kubeadm.go:322] [bootstrap-token] Creating the "cluster-info" ConfigMap in the "kube-public" namespace
I0731 23:37:23.966826   26664 kubeadm.go:322] [kubelet-finalize] Updating "/etc/kubernetes/kubelet.conf" to point to a rotatable kubelet client certificate and key
I0731 23:37:23.966826   26664 kubeadm.go:322] [addons] Applied essential addon: CoreDNS
I0731 23:37:23.966826   26664 kubeadm.go:322] [addons] Applied essential addon: kube-proxy
I0731 23:37:23.966826   26664 kubeadm.go:322] 
I0731 23:37:23.967370   26664 kubeadm.go:322] Your Kubernetes control-plane has initialized successfully!
I0731 23:37:23.967370   26664 kubeadm.go:322] 
I0731 23:37:23.967370   26664 kubeadm.go:322] To start using your cluster, you need to run the following as a regular user:
I0731 23:37:23.967370   26664 kubeadm.go:322] 
I0731 23:37:23.967370   26664 kubeadm.go:322]   mkdir -p $HOME/.kube
I0731 23:37:23.967370   26664 kubeadm.go:322]   sudo cp -i /etc/kubernetes/admin.conf $HOME/.kube/config
I0731 23:37:23.967370   26664 kubeadm.go:322]   sudo chown $(id -u):$(id -g) $HOME/.kube/config
I0731 23:37:23.967370   26664 kubeadm.go:322] 
I0731 23:37:23.967912   26664 kubeadm.go:322] Alternatively, if you are the root user, you can run:
I0731 23:37:23.967912   26664 kubeadm.go:322] 
I0731 23:37:23.967912   26664 kubeadm.go:322]   export KUBECONFIG=/etc/kubernetes/admin.conf
I0731 23:37:23.967912   26664 kubeadm.go:322] 
I0731 23:37:23.967912   26664 kubeadm.go:322] You should now deploy a pod network to the cluster.
I0731 23:37:23.967912   26664 kubeadm.go:322] Run "kubectl apply -f [podnetwork].yaml" with one of the options listed at:
I0731 23:37:23.968457   26664 kubeadm.go:322]   https://kubernetes.io/docs/concepts/cluster-administration/addons/
I0731 23:37:23.968457   26664 kubeadm.go:322] 
I0731 23:37:23.968457   26664 kubeadm.go:322] You can now join any number of control-plane nodes by copying certificate authorities
I0731 23:37:23.968457   26664 kubeadm.go:322] and service account keys on each node and then running the following as root:
I0731 23:37:23.968457   26664 kubeadm.go:322] 
I0731 23:37:23.968457   26664 kubeadm.go:322]   kubeadm join control-plane.minikube.internal:8443 --token kt71rm.7x1c90475ay8960p \
I0731 23:37:23.968989   26664 kubeadm.go:322] 	--discovery-token-ca-cert-hash sha256:6e1481ed3ca76e0496c816fd5da3a916ee0c2b307ad0509ea9584d595834f64e \
I0731 23:37:23.968989   26664 kubeadm.go:322] 	--control-plane 
I0731 23:37:23.968989   26664 kubeadm.go:322] 
I0731 23:37:23.968989   26664 kubeadm.go:322] Then you can join any number of worker nodes by running the following on each as root:
I0731 23:37:23.968989   26664 kubeadm.go:322] 
I0731 23:37:23.968989   26664 kubeadm.go:322] kubeadm join control-plane.minikube.internal:8443 --token kt71rm.7x1c90475ay8960p \
I0731 23:37:23.968989   26664 kubeadm.go:322] 	--discovery-token-ca-cert-hash sha256:6e1481ed3ca76e0496c816fd5da3a916ee0c2b307ad0509ea9584d595834f64e 
I0731 23:37:23.969538   26664 cni.go:84] Creating CNI manager for ""
I0731 23:37:23.969538   26664 cni.go:158] "docker" driver + "docker" container runtime found on kubernetes v1.24+, recommending bridge
I0731 23:37:23.970621   26664 out.go:177] 🔗  Configurando CNI bridge CNI ...
I0731 23:37:23.991035   26664 ssh_runner.go:195] Run: sudo mkdir -p /etc/cni/net.d
I0731 23:37:24.141265   26664 ssh_runner.go:362] scp memory --> /etc/cni/net.d/1-k8s.conflist (457 bytes)
I0731 23:37:24.336807   26664 ssh_runner.go:195] Run: /bin/bash -c "cat /proc/$(pgrep kube-apiserver)/oom_adj"
I0731 23:37:24.360331   26664 ops.go:34] apiserver oom_adj: -16
I0731 23:37:24.366387   26664 ssh_runner.go:195] Run: sudo /var/lib/minikube/binaries/v1.27.3/kubectl create clusterrolebinding minikube-rbac --clusterrole=cluster-admin --serviceaccount=kube-system:default --kubeconfig=/var/lib/minikube/kubeconfig
I0731 23:37:24.368669   26664 ssh_runner.go:195] Run: sudo /var/lib/minikube/binaries/v1.27.3/kubectl label nodes minikube.k8s.io/version=v1.31.1 minikube.k8s.io/commit=fd3f3801765d093a485d255043149f92ec0a695f minikube.k8s.io/name=minikube minikube.k8s.io/updated_at=2023_07_31T23_37_24_0700 minikube.k8s.io/primary=true --all --overwrite --kubeconfig=/var/lib/minikube/kubeconfig
I0731 23:37:24.827118   26664 kubeadm.go:1081] duration metric: took 490.3117ms to wait for elevateKubeSystemPrivileges.
I0731 23:37:24.865632   26664 kubeadm.go:406] StartCluster complete in 16.2177131s
I0731 23:37:24.865632   26664 settings.go:142] acquiring lock: {Name:mk392ad6f8bdd0322c70f379c1daee010bb4f532 Clock:{} Delay:500ms Timeout:1m0s Cancel:<nil>}
I0731 23:37:24.865632   26664 settings.go:150] Updating kubeconfig:  C:\Users\white\.kube\config
I0731 23:37:24.867372   26664 lock.go:35] WriteFile acquiring C:\Users\white\.kube\config: {Name:mk5a56f603c6f1bb1c4f5727d1e6d89160ebcea5 Clock:{} Delay:500ms Timeout:1m0s Cancel:<nil>}
I0731 23:37:24.868567   26664 ssh_runner.go:195] Run: /bin/bash -c "sudo /var/lib/minikube/binaries/v1.27.3/kubectl --kubeconfig=/var/lib/minikube/kubeconfig -n kube-system get configmap coredns -o yaml"
I0731 23:37:24.868567   26664 addons.go:499] enable addons start: toEnable=map[ambassador:false auto-pause:false cloud-spanner:false csi-hostpath-driver:false dashboard:false default-storageclass:true efk:false freshpod:false gcp-auth:false gvisor:false headlamp:false helm-tiller:false inaccel:false ingress:false ingress-dns:false inspektor-gadget:false istio:false istio-provisioner:false kong:false kubevirt:false logviewer:false metallb:false metrics-server:false nvidia-driver-installer:false nvidia-gpu-device-plugin:false olm:false pod-security-policy:false portainer:false registry:false registry-aliases:false registry-creds:false storage-provisioner:true storage-provisioner-gluster:false volumesnapshots:false]
I0731 23:37:24.869094   26664 addons.go:69] Setting storage-provisioner=true in profile "minikube"
I0731 23:37:24.869206   26664 addons.go:231] Setting addon storage-provisioner=true in "minikube"
I0731 23:37:24.869206   26664 addons.go:69] Setting default-storageclass=true in profile "minikube"
I0731 23:37:24.869206   26664 addons_storage_classes.go:33] enableOrDisableStorageClasses default-storageclass=true on "minikube"
I0731 23:37:24.869206   26664 host.go:66] Checking if "minikube" exists ...
I0731 23:37:24.869206   26664 config.go:182] Loaded profile config "minikube": Driver=docker, ContainerRuntime=docker, KubernetesVersion=v1.27.3
I0731 23:37:24.914072   26664 cli_runner.go:164] Run: docker container inspect minikube --format={{.State.Status}}
I0731 23:37:24.915145   26664 cli_runner.go:164] Run: docker container inspect minikube --format={{.State.Status}}
I0731 23:37:25.044914   26664 ssh_runner.go:195] Run: /bin/bash -c "sudo /var/lib/minikube/binaries/v1.27.3/kubectl --kubeconfig=/var/lib/minikube/kubeconfig -n kube-system get configmap coredns -o yaml | sed -e '/^        forward . \/etc\/resolv.conf.*/i \        hosts {\n           192.168.65.254 host.minikube.internal\n           fallthrough\n        }' -e '/^        errors *$/i \        log' | sudo /var/lib/minikube/binaries/v1.27.3/kubectl --kubeconfig=/var/lib/minikube/kubeconfig replace -f -"
I0731 23:37:25.196497   26664 out.go:177]     ▪ Using image gcr.io/k8s-minikube/storage-provisioner:v5
I0731 23:37:25.199169   26664 addons.go:423] installing /etc/kubernetes/addons/storage-provisioner.yaml
I0731 23:37:25.199169   26664 ssh_runner.go:362] scp memory --> /etc/kubernetes/addons/storage-provisioner.yaml (2676 bytes)
I0731 23:37:25.216490   26664 cli_runner.go:164] Run: docker container inspect -f "'{{(index (index .NetworkSettings.Ports "22/tcp") 0).HostPort}}'" minikube
I0731 23:37:25.244724   26664 addons.go:231] Setting addon default-storageclass=true in "minikube"
I0731 23:37:25.244724   26664 host.go:66] Checking if "minikube" exists ...
I0731 23:37:25.290358   26664 cli_runner.go:164] Run: docker container inspect minikube --format={{.State.Status}}
I0731 23:37:25.455291   26664 kapi.go:248] "coredns" deployment in "kube-system" namespace and "minikube" context rescaled to 1 replicas
I0731 23:37:25.455652   26664 start.go:223] Will wait 6m0s for node &{Name: IP:192.168.49.2 Port:8443 KubernetesVersion:v1.27.3 ContainerRuntime:docker ControlPlane:true Worker:true}
I0731 23:37:25.466505   26664 out.go:177] 🔎  Verifying Kubernetes components...
I0731 23:37:25.513636   26664 ssh_runner.go:195] Run: sudo systemctl is-active --quiet service kubelet
I0731 23:37:25.563021   26664 sshutil.go:53] new ssh client: &{IP:127.0.0.1 Port:62671 SSHKeyPath:C:\Users\white\.minikube\machines\minikube\id_rsa Username:docker}
I0731 23:37:25.609200   26664 addons.go:423] installing /etc/kubernetes/addons/storageclass.yaml
I0731 23:37:25.609200   26664 ssh_runner.go:362] scp memory --> /etc/kubernetes/addons/storageclass.yaml (271 bytes)
I0731 23:37:25.619226   26664 cli_runner.go:164] Run: docker container inspect -f "'{{(index (index .NetworkSettings.Ports "22/tcp") 0).HostPort}}'" minikube
I0731 23:37:25.851707   26664 sshutil.go:53] new ssh client: &{IP:127.0.0.1 Port:62671 SSHKeyPath:C:\Users\white\.minikube\machines\minikube\id_rsa Username:docker}
I0731 23:37:25.868860   26664 ssh_runner.go:195] Run: sudo KUBECONFIG=/var/lib/minikube/kubeconfig /var/lib/minikube/binaries/v1.27.3/kubectl apply -f /etc/kubernetes/addons/storage-provisioner.yaml
I0731 23:37:26.079346   26664 ssh_runner.go:195] Run: sudo KUBECONFIG=/var/lib/minikube/kubeconfig /var/lib/minikube/binaries/v1.27.3/kubectl apply -f /etc/kubernetes/addons/storageclass.yaml
I0731 23:37:27.038884   26664 ssh_runner.go:235] Completed: /bin/bash -c "sudo /var/lib/minikube/binaries/v1.27.3/kubectl --kubeconfig=/var/lib/minikube/kubeconfig -n kube-system get configmap coredns -o yaml | sed -e '/^        forward . \/etc\/resolv.conf.*/i \        hosts {\n           192.168.65.254 host.minikube.internal\n           fallthrough\n        }' -e '/^        errors *$/i \        log' | sudo /var/lib/minikube/binaries/v1.27.3/kubectl --kubeconfig=/var/lib/minikube/kubeconfig replace -f -": (1.9939696s)
I0731 23:37:27.038943   26664 ssh_runner.go:235] Completed: sudo systemctl is-active --quiet service kubelet: (1.5252484s)
I0731 23:37:27.038943   26664 start.go:901] {"host.minikube.internal": 192.168.65.254} host record injected into CoreDNS's ConfigMap
I0731 23:37:27.055326   26664 cli_runner.go:164] Run: docker container inspect -f "'{{(index (index .NetworkSettings.Ports "8443/tcp") 0).HostPort}}'" minikube
I0731 23:37:27.261891   26664 api_server.go:52] waiting for apiserver process to appear ...
I0731 23:37:27.283310   26664 ssh_runner.go:235] Completed: sudo KUBECONFIG=/var/lib/minikube/kubeconfig /var/lib/minikube/binaries/v1.27.3/kubectl apply -f /etc/kubernetes/addons/storage-provisioner.yaml: (1.4144498s)
I0731 23:37:27.283310   26664 ssh_runner.go:235] Completed: sudo KUBECONFIG=/var/lib/minikube/kubeconfig /var/lib/minikube/binaries/v1.27.3/kubectl apply -f /etc/kubernetes/addons/storageclass.yaml: (1.2039642s)
I0731 23:37:27.285676   26664 out.go:177] 🌟  Complementos habilitados: storage-provisioner, default-storageclass
I0731 23:37:27.283928   26664 ssh_runner.go:195] Run: sudo pgrep -xnf kube-apiserver.*minikube.*
I0731 23:37:27.287345   26664 addons.go:502] enable addons completed in 2.4187781s: enabled=[storage-provisioner default-storageclass]
I0731 23:37:27.304597   26664 api_server.go:72] duration metric: took 1.8489441s to wait for apiserver process to appear ...
I0731 23:37:27.304597   26664 api_server.go:88] waiting for apiserver healthz status ...
I0731 23:37:27.304597   26664 api_server.go:253] Checking apiserver healthz at https://127.0.0.1:62675/healthz ...
I0731 23:37:27.317072   26664 api_server.go:279] https://127.0.0.1:62675/healthz returned 200:
ok
I0731 23:37:27.319865   26664 api_server.go:141] control plane version: v1.27.3
I0731 23:37:27.319865   26664 api_server.go:131] duration metric: took 15.2688ms to wait for apiserver health ...
I0731 23:37:27.319865   26664 system_pods.go:43] waiting for kube-system pods to appear ...
I0731 23:37:27.331695   26664 system_pods.go:59] 5 kube-system pods found
I0731 23:37:27.331695   26664 system_pods.go:61] "etcd-minikube" [cdf47845-b225-4bf9-87be-b759609bc189] Running / Ready:ContainersNotReady (containers with unready status: [etcd]) / ContainersReady:ContainersNotReady (containers with unready status: [etcd])
I0731 23:37:27.331695   26664 system_pods.go:61] "kube-apiserver-minikube" [f7f97d86-2975-4b1b-9540-7f3445ad9d6d] Running / Ready:ContainersNotReady (containers with unready status: [kube-apiserver]) / ContainersReady:ContainersNotReady (containers with unready status: [kube-apiserver])
I0731 23:37:27.331695   26664 system_pods.go:61] "kube-controller-manager-minikube" [84904238-c59d-48d7-a253-0523ae34f55a] Running / Ready:ContainersNotReady (containers with unready status: [kube-controller-manager]) / ContainersReady:ContainersNotReady (containers with unready status: [kube-controller-manager])
I0731 23:37:27.331695   26664 system_pods.go:61] "kube-scheduler-minikube" [2b649c43-7ca7-4557-a697-5573282a62e1] Running / Ready:ContainersNotReady (containers with unready status: [kube-scheduler]) / ContainersReady:ContainersNotReady (containers with unready status: [kube-scheduler])
I0731 23:37:27.331695   26664 system_pods.go:61] "storage-provisioner" [daa1bb7a-4218-4004-9c61-824e4c45e805] Pending: PodScheduled:Unschedulable (0/1 nodes are available: 1 node(s) had untolerated taint {node.kubernetes.io/not-ready: }. preemption: 0/1 nodes are available: 1 Preemption is not helpful for scheduling..)
I0731 23:37:27.331695   26664 system_pods.go:74] duration metric: took 11.8293ms to wait for pod list to return data ...
I0731 23:37:27.331695   26664 kubeadm.go:581] duration metric: took 1.8760422s to wait for : map[apiserver:true system_pods:true] ...
I0731 23:37:27.331695   26664 node_conditions.go:102] verifying NodePressure condition ...
I0731 23:37:27.339053   26664 node_conditions.go:122] node storage ephemeral capacity is 263174212Ki
I0731 23:37:27.339053   26664 node_conditions.go:123] node cpu capacity is 8
I0731 23:37:27.339053   26664 node_conditions.go:105] duration metric: took 7.3583ms to run NodePressure ...
I0731 23:37:27.339574   26664 start.go:228] waiting for startup goroutines ...
I0731 23:37:27.339574   26664 start.go:233] waiting for cluster config update ...
I0731 23:37:27.339574   26664 start.go:242] writing updated cluster config ...
I0731 23:37:27.355993   26664 ssh_runner.go:195] Run: rm -f paused
I0731 23:37:27.581926   26664 start.go:596] kubectl: 1.27.3, cluster: 1.27.3 (minor skew: 0)
I0731 23:37:27.614000   26664 out.go:177] 🏄  Done! kubectl is now configured to use "minikube" cluster and "default" namespace by default


==> Docker <==
Aug 01 04:37:01 minikube dockerd[955]: time="2023-08-01T04:37:01.902701229Z" level=info msg="API listen on [::]:2376"
Aug 01 04:37:01 minikube dockerd[955]: time="2023-08-01T04:37:01.905379606Z" level=info msg="stopping event stream following graceful shutdown" error="<nil>" module=libcontainerd namespace=moby
Aug 01 04:37:01 minikube dockerd[955]: time="2023-08-01T04:37:01.906297394Z" level=info msg="Daemon shutdown complete"
Aug 01 04:37:01 minikube systemd[1]: docker.service: Deactivated successfully.
Aug 01 04:37:01 minikube systemd[1]: Stopped Docker Application Container Engine.
Aug 01 04:37:01 minikube systemd[1]: Starting Docker Application Container Engine...
Aug 01 04:37:01 minikube dockerd[1162]: time="2023-08-01T04:37:01.958849571Z" level=info msg="Starting up"
Aug 01 04:37:01 minikube dockerd[1162]: time="2023-08-01T04:37:01.977576248Z" level=info msg="[graphdriver] trying configured driver: overlay2"
Aug 01 04:37:01 minikube dockerd[1162]: time="2023-08-01T04:37:01.989593949Z" level=info msg="Loading containers: start."
Aug 01 04:37:03 minikube dockerd[1162]: time="2023-08-01T04:37:03.750203968Z" level=info msg="Default bridge (docker0) is assigned with an IP address 172.17.0.0/16. Daemon option --bip can be used to set a preferred IP address"
Aug 01 04:37:04 minikube dockerd[1162]: time="2023-08-01T04:37:04.449634317Z" level=info msg="Loading containers: done."
Aug 01 04:37:04 minikube dockerd[1162]: time="2023-08-01T04:37:04.464274214Z" level=warning msg="WARNING: No blkio throttle.read_bps_device support"
Aug 01 04:37:04 minikube dockerd[1162]: time="2023-08-01T04:37:04.464337022Z" level=warning msg="WARNING: No blkio throttle.write_bps_device support"
Aug 01 04:37:04 minikube dockerd[1162]: time="2023-08-01T04:37:04.464348603Z" level=warning msg="WARNING: No blkio throttle.read_iops_device support"
Aug 01 04:37:04 minikube dockerd[1162]: time="2023-08-01T04:37:04.464356879Z" level=warning msg="WARNING: No blkio throttle.write_iops_device support"
Aug 01 04:37:04 minikube dockerd[1162]: time="2023-08-01T04:37:04.464376436Z" level=info msg="Docker daemon" commit=4ffc614 graphdriver=overlay2 version=24.0.4
Aug 01 04:37:04 minikube dockerd[1162]: time="2023-08-01T04:37:04.464408716Z" level=info msg="Daemon has completed initialization"
Aug 01 04:37:04 minikube dockerd[1162]: time="2023-08-01T04:37:04.502024095Z" level=info msg="API listen on /var/run/docker.sock"
Aug 01 04:37:04 minikube dockerd[1162]: time="2023-08-01T04:37:04.502076597Z" level=info msg="API listen on [::]:2376"
Aug 01 04:37:04 minikube systemd[1]: Started Docker Application Container Engine.
Aug 01 04:37:05 minikube systemd[1]: Starting CRI Interface for Docker Application Container Engine...
Aug 01 04:37:05 minikube cri-dockerd[1383]: time="2023-08-01T04:37:05Z" level=info msg="Connecting to docker on the Endpoint unix:///var/run/docker.sock"
Aug 01 04:37:05 minikube cri-dockerd[1383]: time="2023-08-01T04:37:05Z" level=info msg="Start docker client with request timeout 0s"
Aug 01 04:37:05 minikube cri-dockerd[1383]: time="2023-08-01T04:37:05Z" level=info msg="Hairpin mode is set to hairpin-veth"
Aug 01 04:37:05 minikube cri-dockerd[1383]: time="2023-08-01T04:37:05Z" level=info msg="Loaded network plugin cni"
Aug 01 04:37:05 minikube cri-dockerd[1383]: time="2023-08-01T04:37:05Z" level=info msg="Docker cri networking managed by network plugin cni"
Aug 01 04:37:05 minikube cri-dockerd[1383]: time="2023-08-01T04:37:05Z" level=info msg="Docker Info: &{ID:7e2d1133-add1-4c73-87c3-e17e210b79b5 Containers:0 ContainersRunning:0 ContainersPaused:0 ContainersStopped:0 Images:8 Driver:overlay2 DriverStatus:[[Backing Filesystem extfs] [Supports d_type true] [Using metacopy false] [Native Overlay Diff true] [userxattr false]] SystemStatus:[] Plugins:{Volume:[local] Network:[bridge host ipvlan macvlan null overlay] Authorization:[] Log:[awslogs fluentd gcplogs gelf journald json-file local logentries splunk syslog]} MemoryLimit:true SwapLimit:true KernelMemory:false KernelMemoryTCP:true CPUCfsPeriod:true CPUCfsQuota:true CPUShares:true CPUSet:true PidsLimit:true IPv4Forwarding:true BridgeNfIptables:true BridgeNfIP6tables:true Debug:false NFd:25 OomKillDisable:true NGoroutines:36 SystemTime:2023-08-01T04:37:05.605510001Z LoggingDriver:json-file CgroupDriver:cgroupfs CgroupVersion:1 NEventsListener:0 KernelVersion:5.10.16.3-microsoft-standard-WSL2 OperatingSystem:Ubuntu 22.04.2 LTS (containerized) OSVersion:22.04 OSType:linux Architecture:x86_64 IndexServerAddress:https://index.docker.io/v1/ RegistryConfig:0xc0001bc5b0 NCPU:8 MemTotal:15691403264 GenericResources:[] DockerRootDir:/var/lib/docker HTTPProxy: HTTPSProxy: NoProxy:control-plane.minikube.internal Name:minikube Labels:[provider=docker] ExperimentalBuild:false ServerVersion:24.0.4 ClusterStore: ClusterAdvertise: Runtimes:map[io.containerd.runc.v2:{Path:runc Args:[] Shim:<nil>} runc:{Path:runc Args:[] Shim:<nil>}] DefaultRuntime:runc Swarm:{NodeID: NodeAddr: LocalNodeState:inactive ControlAvailable:false Error: RemoteManagers:[] Nodes:0 Managers:0 Cluster:<nil> Warnings:[]} LiveRestoreEnabled:false Isolation: InitBinary:docker-init ContainerdCommit:{ID:3dce8eb055cbb6872793272b4f20ed16117344f8 Expected:3dce8eb055cbb6872793272b4f20ed16117344f8} RuncCommit:{ID:v1.1.7-0-g860f061 Expected:v1.1.7-0-g860f061} InitCommit:{ID:de40ad0 Expected:de40ad0} SecurityOptions:[name=seccomp,profile=builtin] ProductLicense: DefaultAddressPools:[] Warnings:[WARNING: No blkio throttle.read_bps_device support WARNING: No blkio throttle.write_bps_device support WARNING: No blkio throttle.read_iops_device support WARNING: No blkio throttle.write_iops_device support]}"
Aug 01 04:37:05 minikube cri-dockerd[1383]: time="2023-08-01T04:37:05Z" level=info msg="Setting cgroupDriver cgroupfs"
Aug 01 04:37:05 minikube cri-dockerd[1383]: time="2023-08-01T04:37:05Z" level=info msg="Docker cri received runtime config &RuntimeConfig{NetworkConfig:&NetworkConfig{PodCidr:,},}"
Aug 01 04:37:05 minikube cri-dockerd[1383]: time="2023-08-01T04:37:05Z" level=info msg="Starting the GRPC backend for the Docker CRI interface."
Aug 01 04:37:05 minikube cri-dockerd[1383]: time="2023-08-01T04:37:05Z" level=info msg="Start cri-dockerd grpc backend"
Aug 01 04:37:05 minikube systemd[1]: Started CRI Interface for Docker Application Container Engine.
Aug 01 04:37:14 minikube cri-dockerd[1383]: time="2023-08-01T04:37:14Z" level=info msg="Will attempt to re-write config file /var/lib/docker/containers/0326efff8ae989eba73ea432b4cc2fad7c73230a2972f18722a4804ffa776080/resolv.conf as [nameserver 192.168.65.254 options ndots:0]"
Aug 01 04:37:14 minikube cri-dockerd[1383]: time="2023-08-01T04:37:14Z" level=info msg="Will attempt to re-write config file /var/lib/docker/containers/673d8f91ec0ebeded27d49364aa43d3fbe84655c69f66550629ed79d0968fe6b/resolv.conf as [nameserver 192.168.65.254 options ndots:0]"
Aug 01 04:37:14 minikube cri-dockerd[1383]: time="2023-08-01T04:37:14Z" level=info msg="Will attempt to re-write config file /var/lib/docker/containers/18ddf2e4df6cf898262c0d5defab7aaa0f2e1ac8594ff927a1bcb61ee31f1acb/resolv.conf as [nameserver 192.168.65.254 options ndots:0]"
Aug 01 04:37:14 minikube cri-dockerd[1383]: time="2023-08-01T04:37:14Z" level=info msg="Will attempt to re-write config file /var/lib/docker/containers/d6d699fcd6f087cbb54d9c4e8247d75635597a3cddd9ed6a0abfa99d9844013e/resolv.conf as [nameserver 192.168.65.254 options ndots:0]"
Aug 01 04:37:24 minikube cri-dockerd[1383]: W0801 04:37:24.461220    1383 logging.go:59] [core] [Server #1] grpc: Server.processUnaryRPC failed to write status: connection error: desc = "transport is closing"
Aug 01 04:37:37 minikube cri-dockerd[1383]: time="2023-08-01T04:37:37Z" level=info msg="Will attempt to re-write config file /var/lib/docker/containers/14626fcb9081dfecd93e5a647879ece58799c58dc43320988961af7762458b9d/resolv.conf as [nameserver 192.168.65.254 options ndots:0]"
Aug 01 04:37:37 minikube cri-dockerd[1383]: time="2023-08-01T04:37:37Z" level=info msg="Will attempt to re-write config file /var/lib/docker/containers/531e64270d72cb8c5412d216572ef76c8a8df440fb92cb73660d88a858e960d3/resolv.conf as [nameserver 192.168.65.254 options ndots:0]"
Aug 01 04:37:37 minikube cri-dockerd[1383]: time="2023-08-01T04:37:37Z" level=info msg="Will attempt to re-write config file /var/lib/docker/containers/c38456699959ff427a87d6b78d661b074bce052f2cf06070063cc36ae8ac1800/resolv.conf as [nameserver 192.168.65.254 options ndots:0]"
Aug 01 04:37:44 minikube cri-dockerd[1383]: time="2023-08-01T04:37:44Z" level=info msg="Docker cri received runtime config &RuntimeConfig{NetworkConfig:&NetworkConfig{PodCidr:10.244.0.0/24,},}"
Aug 01 04:37:47 minikube dockerd[1162]: time="2023-08-01T04:37:47.852550301Z" level=info msg="ignoring event" container=da21afd06d31f134d3bea9dc621efc4acde5f08ed4f5d3a8924dc6ccc225f8bb module=libcontainerd namespace=moby topic=/tasks/delete type="*events.TaskDelete"
Aug 01 04:39:32 minikube cri-dockerd[1383]: time="2023-08-01T04:39:32Z" level=info msg="Will attempt to re-write config file /var/lib/docker/containers/2f2e671bfd496793ebde461585ba38b9abf411d10841611abcaecfb96824c594/resolv.conf as [nameserver 10.96.0.10 search default.svc.cluster.local svc.cluster.local cluster.local options ndots:5]"
Aug 01 04:39:33 minikube dockerd[1162]: time="2023-08-01T04:39:33.689199923Z" level=error msg="Not continuing with pull after error: errors:\ndenied: requested access to the resource is denied\nunauthorized: authentication required\n"
Aug 01 04:39:33 minikube dockerd[1162]: time="2023-08-01T04:39:33.689286756Z" level=info msg="Ignoring extra error returned from registry" error="unauthorized: authentication required"
Aug 01 04:39:50 minikube dockerd[1162]: time="2023-08-01T04:39:50.141445043Z" level=error msg="Not continuing with pull after error: errors:\ndenied: requested access to the resource is denied\nunauthorized: authentication required\n"
Aug 01 04:39:50 minikube dockerd[1162]: time="2023-08-01T04:39:50.141517960Z" level=info msg="Ignoring extra error returned from registry" error="unauthorized: authentication required"
Aug 01 04:40:20 minikube dockerd[1162]: time="2023-08-01T04:40:20.132248173Z" level=error msg="Not continuing with pull after error: errors:\ndenied: requested access to the resource is denied\nunauthorized: authentication required\n"
Aug 01 04:40:20 minikube dockerd[1162]: time="2023-08-01T04:40:20.132334184Z" level=info msg="Ignoring extra error returned from registry" error="unauthorized: authentication required"
Aug 01 04:41:13 minikube dockerd[1162]: time="2023-08-01T04:41:13.033606966Z" level=info msg="ignoring event" container=2f2e671bfd496793ebde461585ba38b9abf411d10841611abcaecfb96824c594 module=libcontainerd namespace=moby topic=/tasks/delete type="*events.TaskDelete"
Aug 01 04:45:45 minikube dockerd[1162]: time="2023-08-01T04:45:45.529278969Z" level=warning msg="no trace recorder found, skipping"
Aug 01 04:47:09 minikube cri-dockerd[1383]: time="2023-08-01T04:47:09Z" level=info msg="Will attempt to re-write config file /var/lib/docker/containers/d837b9ce53c5e221c86fb2c7befc7837411a8b38a8157c0aff4aa793ef495bd9/resolv.conf as [nameserver 10.96.0.10 search default.svc.cluster.local svc.cluster.local cluster.local options ndots:5]"
Aug 01 04:47:11 minikube dockerd[1162]: time="2023-08-01T04:47:11.159757238Z" level=error msg="Not continuing with pull after error: errors:\ndenied: requested access to the resource is denied\nunauthorized: authentication required\n"
Aug 01 04:47:11 minikube dockerd[1162]: time="2023-08-01T04:47:11.159922498Z" level=info msg="Ignoring extra error returned from registry" error="unauthorized: authentication required"
Aug 01 04:47:26 minikube dockerd[1162]: time="2023-08-01T04:47:26.253387552Z" level=error msg="Not continuing with pull after error: errors:\ndenied: requested access to the resource is denied\nunauthorized: authentication required\n"
Aug 01 04:47:26 minikube dockerd[1162]: time="2023-08-01T04:47:26.253496036Z" level=info msg="Ignoring extra error returned from registry" error="unauthorized: authentication required"
Aug 01 04:47:53 minikube dockerd[1162]: time="2023-08-01T04:47:53.227762778Z" level=error msg="Not continuing with pull after error: errors:\ndenied: requested access to the resource is denied\nunauthorized: authentication required\n"
Aug 01 04:47:53 minikube dockerd[1162]: time="2023-08-01T04:47:53.227813904Z" level=info msg="Ignoring extra error returned from registry" error="unauthorized: authentication required"
Aug 01 04:48:45 minikube dockerd[1162]: time="2023-08-01T04:48:45.168867577Z" level=error msg="Not continuing with pull after error: errors:\ndenied: requested access to the resource is denied\nunauthorized: authentication required\n"
Aug 01 04:48:45 minikube dockerd[1162]: time="2023-08-01T04:48:45.168983885Z" level=info msg="Ignoring extra error returned from registry" error="unauthorized: authentication required"


==> container status <==
CONTAINER           IMAGE               CREATED             STATE               NAME                      ATTEMPT             POD ID              POD
2c04cd90aa08d       6e38f40d628db       11 minutes ago      Running             storage-provisioner       1                   531e64270d72c       storage-provisioner
e3d52ba70e8d4       ead0a4a53df89       11 minutes ago      Running             coredns                   0                   c38456699959f       coredns-5d78c9869d-rxkpn
da21afd06d31f       6e38f40d628db       11 minutes ago      Exited              storage-provisioner       0                   531e64270d72c       storage-provisioner
399caabfa7836       5780543258cf0       11 minutes ago      Running             kube-proxy                0                   14626fcb9081d       kube-proxy-v6mmc
00e5628f0e56d       7cffc01dba0e1       12 minutes ago      Running             kube-controller-manager   0                   d6d699fcd6f08       kube-controller-manager-minikube
a09d10e439106       08a0c939e61b7       12 minutes ago      Running             kube-apiserver            0                   18ddf2e4df6cf       kube-apiserver-minikube
b7312c5e55a7d       86b6af7dd652c       12 minutes ago      Running             etcd                      0                   0326efff8ae98       etcd-minikube
015de8b9afe2e       41697ceeb70b3       12 minutes ago      Running             kube-scheduler            0                   673d8f91ec0eb       kube-scheduler-minikube


==> coredns [e3d52ba70e8d] <==
[INFO] plugin/kubernetes: waiting for Kubernetes API before starting server
[INFO] plugin/ready: Still waiting on: "kubernetes"
[INFO] plugin/kubernetes: waiting for Kubernetes API before starting server
[INFO] plugin/kubernetes: waiting for Kubernetes API before starting server
[INFO] plugin/ready: Still waiting on: "kubernetes"
[INFO] plugin/kubernetes: waiting for Kubernetes API before starting server
[INFO] plugin/kubernetes: waiting for Kubernetes API before starting server
[INFO] plugin/kubernetes: waiting for Kubernetes API before starting server
[INFO] plugin/kubernetes: waiting for Kubernetes API before starting server
[INFO] plugin/kubernetes: waiting for Kubernetes API before starting server
[INFO] plugin/kubernetes: waiting for Kubernetes API before starting server
[WARNING] plugin/kubernetes: starting server with unsynced Kubernetes API
.:53
[INFO] plugin/reload: Running configuration SHA512 = f869070685748660180df1b7a47d58cdafcf2f368266578c062d1151dc2c900964aecc5975e8882e6de6fdfb6460463e30ebfaad2ec8f0c3c6436f80225b3b5b
CoreDNS-1.10.1
linux/amd64, go1.20, 055b2c3
[INFO] plugin/ready: Still waiting on: "kubernetes"
[INFO] 127.0.0.1:37232 - 15707 "HINFO IN 3421408668051411220.2802683343234549898. udp 57 false 512" - - 0 6.002312512s
[ERROR] plugin/errors: 2 3421408668051411220.2802683343234549898. HINFO: read udp 10.244.0.2:38916->192.168.65.254:53: i/o timeout
[INFO] 127.0.0.1:37303 - 27812 "HINFO IN 3421408668051411220.2802683343234549898. udp 57 false 512" - - 0 6.003446434s
[ERROR] plugin/errors: 2 3421408668051411220.2802683343234549898. HINFO: read udp 10.244.0.2:41038->192.168.65.254:53: i/o timeout
[INFO] 127.0.0.1:55646 - 48936 "HINFO IN 3421408668051411220.2802683343234549898. udp 57 false 512" - - 0 4.002272032s
[ERROR] plugin/errors: 2 3421408668051411220.2802683343234549898. HINFO: read udp 10.244.0.2:41122->192.168.65.254:53: i/o timeout
[INFO] 127.0.0.1:44503 - 878 "HINFO IN 3421408668051411220.2802683343234549898. udp 57 false 512" - - 0 2.000849733s
[ERROR] plugin/errors: 2 3421408668051411220.2802683343234549898. HINFO: read udp 10.244.0.2:48348->192.168.65.254:53: i/o timeout
[INFO] 127.0.0.1:39842 - 16787 "HINFO IN 3421408668051411220.2802683343234549898. udp 57 false 512" NXDOMAIN qr,rd,ra 57 0.008021621s


==> describe nodes <==
Name:               minikube
Roles:              control-plane
Labels:             beta.kubernetes.io/arch=amd64
                    beta.kubernetes.io/os=linux
                    kubernetes.io/arch=amd64
                    kubernetes.io/hostname=minikube
                    kubernetes.io/os=linux
                    minikube.k8s.io/commit=fd3f3801765d093a485d255043149f92ec0a695f
                    minikube.k8s.io/name=minikube
                    minikube.k8s.io/primary=true
                    minikube.k8s.io/updated_at=2023_07_31T23_37_24_0700
                    minikube.k8s.io/version=v1.31.1
                    node-role.kubernetes.io/control-plane=
                    node.kubernetes.io/exclude-from-external-load-balancers=
Annotations:        kubeadm.alpha.kubernetes.io/cri-socket: unix:///var/run/cri-dockerd.sock
                    node.alpha.kubernetes.io/ttl: 0
                    volumes.kubernetes.io/controller-managed-attach-detach: true
CreationTimestamp:  Tue, 01 Aug 2023 04:37:19 +0000
Taints:             <none>
Unschedulable:      false
Lease:
  HolderIdentity:  minikube
  AcquireTime:     <unset>
  RenewTime:       Tue, 01 Aug 2023 04:49:29 +0000
Conditions:
  Type             Status  LastHeartbeatTime                 LastTransitionTime                Reason                       Message
  ----             ------  -----------------                 ------------------                ------                       -------
  MemoryPressure   False   Tue, 01 Aug 2023 04:48:59 +0000   Tue, 01 Aug 2023 04:37:16 +0000   KubeletHasSufficientMemory   kubelet has sufficient memory available
  DiskPressure     False   Tue, 01 Aug 2023 04:48:59 +0000   Tue, 01 Aug 2023 04:37:16 +0000   KubeletHasNoDiskPressure     kubelet has no disk pressure
  PIDPressure      False   Tue, 01 Aug 2023 04:48:59 +0000   Tue, 01 Aug 2023 04:37:16 +0000   KubeletHasSufficientPID      kubelet has sufficient PID available
  Ready            True    Tue, 01 Aug 2023 04:48:59 +0000   Tue, 01 Aug 2023 04:37:24 +0000   KubeletReady                 kubelet is posting ready status
Addresses:
  InternalIP:  192.168.49.2
  Hostname:    minikube
Capacity:
  cpu:                8
  ephemeral-storage:  263174212Ki
  hugepages-1Gi:      0
  hugepages-2Mi:      0
  memory:             15323636Ki
  pods:               110
Allocatable:
  cpu:                8
  ephemeral-storage:  263174212Ki
  hugepages-1Gi:      0
  hugepages-2Mi:      0
  memory:             15323636Ki
  pods:               110
System Info:
  Machine ID:                 e538c19367f54f5e99d756c92d0e207d
  System UUID:                e538c19367f54f5e99d756c92d0e207d
  Boot ID:                    c3019a83-cfd4-42de-884a-aca27684eb19
  Kernel Version:             5.10.16.3-microsoft-standard-WSL2
  OS Image:                   Ubuntu 22.04.2 LTS
  Operating System:           linux
  Architecture:               amd64
  Container Runtime Version:  docker://24.0.4
  Kubelet Version:            v1.27.3
  Kube-Proxy Version:         v1.27.3
PodCIDR:                      10.244.0.0/24
PodCIDRs:                     10.244.0.0/24
Non-terminated Pods:          (8 in total)
  Namespace                   Name                                    CPU Requests  CPU Limits  Memory Requests  Memory Limits  Age
  ---------                   ----                                    ------------  ----------  ---------------  -------------  ---
  default                     ecoadventure-service-f8cf977c8-z9xcn    0 (0%!)(MISSING)        0 (0%!)(MISSING)      0 (0%!)(MISSING)           0 (0%!)(MISSING)         2m23s
  kube-system                 coredns-5d78c9869d-rxkpn                100m (1%!)(MISSING)     0 (0%!)(MISSING)      70Mi (0%!)(MISSING)        170Mi (1%!)(MISSING)     11m
  kube-system                 etcd-minikube                           100m (1%!)(MISSING)     0 (0%!)(MISSING)      100Mi (0%!)(MISSING)       0 (0%!)(MISSING)         12m
  kube-system                 kube-apiserver-minikube                 250m (3%!)(MISSING)     0 (0%!)(MISSING)      0 (0%!)(MISSING)           0 (0%!)(MISSING)         12m
  kube-system                 kube-controller-manager-minikube        200m (2%!)(MISSING)     0 (0%!)(MISSING)      0 (0%!)(MISSING)           0 (0%!)(MISSING)         12m
  kube-system                 kube-proxy-v6mmc                        0 (0%!)(MISSING)        0 (0%!)(MISSING)      0 (0%!)(MISSING)           0 (0%!)(MISSING)         11m
  kube-system                 kube-scheduler-minikube                 100m (1%!)(MISSING)     0 (0%!)(MISSING)      0 (0%!)(MISSING)           0 (0%!)(MISSING)         12m
  kube-system                 storage-provisioner                     0 (0%!)(MISSING)        0 (0%!)(MISSING)      0 (0%!)(MISSING)           0 (0%!)(MISSING)         12m
Allocated resources:
  (Total limits may be over 100 percent, i.e., overcommitted.)
  Resource           Requests    Limits
  --------           --------    ------
  cpu                750m (9%!)(MISSING)   0 (0%!)(MISSING)
  memory             170Mi (1%!)(MISSING)  170Mi (1%!)(MISSING)
  ephemeral-storage  0 (0%!)(MISSING)      0 (0%!)(MISSING)
  hugepages-1Gi      0 (0%!)(MISSING)      0 (0%!)(MISSING)
  hugepages-2Mi      0 (0%!)(MISSING)      0 (0%!)(MISSING)
Events:
  Type    Reason                   Age   From             Message
  ----    ------                   ----  ----             -------
  Normal  Starting                 11m   kube-proxy       
  Normal  Starting                 12m   kubelet          Starting kubelet.
  Normal  NodeHasSufficientMemory  12m   kubelet          Node minikube status is now: NodeHasSufficientMemory
  Normal  NodeHasNoDiskPressure    12m   kubelet          Node minikube status is now: NodeHasNoDiskPressure
  Normal  NodeHasSufficientPID     12m   kubelet          Node minikube status is now: NodeHasSufficientPID
  Normal  Starting                 12m   kubelet          Starting kubelet.
  Normal  NodeHasSufficientMemory  12m   kubelet          Node minikube status is now: NodeHasSufficientMemory
  Normal  NodeHasNoDiskPressure    12m   kubelet          Node minikube status is now: NodeHasNoDiskPressure
  Normal  NodeHasSufficientPID     12m   kubelet          Node minikube status is now: NodeHasSufficientPID
  Normal  NodeNotReady             12m   kubelet          Node minikube status is now: NodeNotReady
  Normal  NodeAllocatableEnforced  12m   kubelet          Updated Node Allocatable limit across pods
  Normal  NodeReady                12m   kubelet          Node minikube status is now: NodeReady
  Normal  RegisteredNode           11m   node-controller  Node minikube event: Registered Node minikube in Controller


==> dmesg <==
[  +0.001032] FS-Cache: O-key=[10] '34323939313838373331'
[  +0.000611] FS-Cache: N-cookie c=000000005b623b06 [p=0000000086d3628b fl=2 nc=0 na=1]
[  +0.000929] FS-Cache: N-cookie d=000000004f7e5ead n=000000009cbd9f3e
[  +0.000809] FS-Cache: N-key=[10] '34323939313838373331'
[  +0.227948] FS-Cache: Duplicate cookie detected
[  +0.008322] FS-Cache: O-cookie c=000000007899c979 [p=0000000086d3628b fl=222 nc=0 na=1]
[  +0.003866] FS-Cache: O-cookie d=000000004f7e5ead n=000000004785d689
[  +0.001213] FS-Cache: O-key=[10] '34323939313838373534'
[  +0.001688] FS-Cache: N-cookie c=000000007211a997 [p=0000000086d3628b fl=2 nc=0 na=1]
[  +0.008620] FS-Cache: N-cookie d=000000004f7e5ead n=000000000245fadc
[  +0.059682] FS-Cache: N-key=[10] '34323939313838373534'
[  +1.985919] FS-Cache: Duplicate cookie detected
[  +0.000698] FS-Cache: O-cookie c=000000000f102574 [p=0000000086d3628b fl=222 nc=0 na=1]
[  +0.000793] FS-Cache: O-cookie d=000000004f7e5ead n=00000000ec9fb506
[  +0.000648] FS-Cache: O-key=[10] '34323939313838393631'
[  +0.000506] FS-Cache: N-cookie c=000000002b692cbd [p=0000000086d3628b fl=2 nc=0 na=1]
[  +0.000667] FS-Cache: N-cookie d=000000004f7e5ead n=000000004267dd36
[  +0.000680] FS-Cache: N-key=[10] '34323939313838393631'
[  +0.001203] init: (1) ERROR: ConfigApplyWindowsLibPath:2431: open /etc/ld.so.conf.d/ld.wsl.conf
[  +0.000003]  failed 2
[  +0.024204] 9pnet_virtio: no channels available for device drvfs
[  +0.000833] WARNING: mount: waiting for virtio device...
[  +0.100568] 9pnet_virtio: no channels available for device drvfs
[  +0.119573] 9pnet_virtio: no channels available for device drvfs
[  +0.011270] WARNING: mount: waiting for virtio device...
[  +0.101539] 9pnet_virtio: no channels available for device drvfs
[  +0.101130] 9pnet_virtio: no channels available for device drvfs
[  +0.114507] 9pnet_virtio: no channels available for device drvfs
[  +0.001510] WARNING: mount: waiting for virtio device...
[  +0.104343] 9pnet_virtio: no channels available for device drvfs
[  +0.101398] 9pnet_virtio: no channels available for device drvfs
[  +0.149498] WARNING: /usr/share/zoneinfo/America/Bogota not found. Is the tzdata package installed?
[  +1.424589] FS-Cache: Duplicate cookie detected
[  +0.000689] FS-Cache: O-cookie c=0000000014009842 [p=0000000086d3628b fl=222 nc=0 na=1]
[  +0.000772] FS-Cache: O-cookie d=000000004f7e5ead n=000000009c143c9c
[  +0.000697] FS-Cache: O-key=[10] '34323939313839313937'
[  +0.001258] FS-Cache: N-cookie c=00000000169f65f8 [p=0000000086d3628b fl=2 nc=0 na=1]
[  +0.000624] FS-Cache: N-cookie d=000000004f7e5ead n=0000000097c057fd
[  +0.000738] FS-Cache: N-key=[10] '34323939313839313937'
[  +0.001367] init: (1) ERROR: ConfigApplyWindowsLibPath:2431: open /etc/ld.so.conf.d/ld.wsl.conf
[  +0.000004]  failed 2
[  +0.002459] init: (2) ERROR: UtilCreateProcessAndWait:702: /bin/mount failed with 2
[  +0.000944] init: (1) ERROR: UtilCreateProcessAndWait:722: /bin/mount failed with status 0x
[  +0.000002] ff00
[  +0.000981] init: (1) ERROR: ConfigMountFsTab:2484: Processing fstab with mount -a failed.
[  +0.011505] 9pnet_virtio: no channels available for device drvfs
[  +0.000680] WARNING: mount: waiting for virtio device...
[  +0.100542] 9pnet_virtio: no channels available for device drvfs
[  +0.111663] 9pnet_virtio: no channels available for device drvfs
[  +0.000820] WARNING: mount: waiting for virtio device...
[  +0.100814] 9pnet_virtio: no channels available for device drvfs
[  +0.113166] 9pnet_virtio: no channels available for device drvfs
[  +0.000846] WARNING: mount: waiting for virtio device...
[  +0.100763] 9pnet_virtio: no channels available for device drvfs
[  +0.113263] WARNING: /usr/share/zoneinfo/America/Bogota not found. Is the tzdata package installed?
[  +0.130739] init: (8) ERROR: CreateProcessEntryCommon:443: getpwuid(0) failed 2
[  +0.001158] init: (8) ERROR: CreateProcessEntryCommon:446: getpwuid(0) failed 2
[  +0.191282] init: (15) ERROR: CreateProcessEntryCommon:443: getpwuid(0) failed 2
[  +0.001154] init: (15) ERROR: CreateProcessEntryCommon:446: getpwuid(0) failed 2
[ +18.184468] new mount options do not match the existing superblock, will be ignored


==> etcd [b7312c5e55a7] <==
{"level":"info","ts":"2023-08-01T04:37:15.550Z","caller":"embed/etcd.go:306","msg":"starting an etcd server","etcd-version":"3.5.7","git-sha":"215b53cf3","go-version":"go1.17.13","go-os":"linux","go-arch":"amd64","max-cpu-set":8,"max-cpu-available":8,"member-initialized":false,"name":"minikube","data-dir":"/var/lib/minikube/etcd","wal-dir":"","wal-dir-dedicated":"","member-dir":"/var/lib/minikube/etcd/member","force-new-cluster":false,"heartbeat-interval":"100ms","election-timeout":"1s","initial-election-tick-advance":true,"snapshot-count":10000,"max-wals":5,"max-snapshots":5,"snapshot-catchup-entries":5000,"initial-advertise-peer-urls":["https://192.168.49.2:2380"],"listen-peer-urls":["https://192.168.49.2:2380"],"advertise-client-urls":["https://192.168.49.2:2379"],"listen-client-urls":["https://127.0.0.1:2379","https://192.168.49.2:2379"],"listen-metrics-urls":["http://127.0.0.1:2381"],"cors":["*"],"host-whitelist":["*"],"initial-cluster":"minikube=https://192.168.49.2:2380","initial-cluster-state":"new","initial-cluster-token":"etcd-cluster","quota-backend-bytes":2147483648,"max-request-bytes":1572864,"max-concurrent-streams":4294967295,"pre-vote":true,"initial-corrupt-check":true,"corrupt-check-time-interval":"0s","compact-check-time-enabled":false,"compact-check-time-interval":"1m0s","auto-compaction-mode":"periodic","auto-compaction-retention":"0s","auto-compaction-interval":"0s","discovery-url":"","discovery-proxy":"","downgrade-check-interval":"5s"}
{"level":"info","ts":"2023-08-01T04:37:15.555Z","caller":"etcdserver/backend.go:81","msg":"opened backend db","path":"/var/lib/minikube/etcd/member/snap/db","took":"4.470517ms"}
{"level":"info","ts":"2023-08-01T04:37:15.564Z","caller":"etcdserver/raft.go:494","msg":"starting local member","local-member-id":"aec36adc501070cc","cluster-id":"fa54960ea34d58be"}
{"level":"info","ts":"2023-08-01T04:37:15.565Z","logger":"raft","caller":"etcdserver/zap_raft.go:77","msg":"aec36adc501070cc switched to configuration voters=()"}
{"level":"info","ts":"2023-08-01T04:37:15.565Z","logger":"raft","caller":"etcdserver/zap_raft.go:77","msg":"aec36adc501070cc became follower at term 0"}
{"level":"info","ts":"2023-08-01T04:37:15.565Z","logger":"raft","caller":"etcdserver/zap_raft.go:77","msg":"newRaft aec36adc501070cc [peers: [], term: 0, commit: 0, applied: 0, lastindex: 0, lastterm: 0]"}
{"level":"info","ts":"2023-08-01T04:37:15.565Z","logger":"raft","caller":"etcdserver/zap_raft.go:77","msg":"aec36adc501070cc became follower at term 1"}
{"level":"info","ts":"2023-08-01T04:37:15.565Z","logger":"raft","caller":"etcdserver/zap_raft.go:77","msg":"aec36adc501070cc switched to configuration voters=(12593026477526642892)"}
{"level":"warn","ts":"2023-08-01T04:37:15.638Z","caller":"auth/store.go:1234","msg":"simple token is not cryptographically signed"}
{"level":"info","ts":"2023-08-01T04:37:15.648Z","caller":"mvcc/kvstore.go:393","msg":"kvstore restored","current-rev":1}
{"level":"info","ts":"2023-08-01T04:37:15.652Z","caller":"etcdserver/quota.go:94","msg":"enabled backend quota with default value","quota-name":"v3-applier","quota-size-bytes":2147483648,"quota-size":"2.1 GB"}
{"level":"info","ts":"2023-08-01T04:37:15.657Z","caller":"etcdserver/server.go:854","msg":"starting etcd server","local-member-id":"aec36adc501070cc","local-server-version":"3.5.7","cluster-version":"to_be_decided"}
{"level":"info","ts":"2023-08-01T04:37:15.659Z","caller":"etcdserver/server.go:738","msg":"started as single-node; fast-forwarding election ticks","local-member-id":"aec36adc501070cc","forward-ticks":9,"forward-duration":"900ms","election-ticks":10,"election-timeout":"1s"}
{"level":"info","ts":"2023-08-01T04:37:15.659Z","caller":"fileutil/purge.go:44","msg":"started to purge file","dir":"/var/lib/minikube/etcd/member/snap","suffix":"snap.db","max":5,"interval":"30s"}
{"level":"info","ts":"2023-08-01T04:37:15.659Z","caller":"fileutil/purge.go:44","msg":"started to purge file","dir":"/var/lib/minikube/etcd/member/snap","suffix":"snap","max":5,"interval":"30s"}
{"level":"info","ts":"2023-08-01T04:37:15.659Z","caller":"fileutil/purge.go:44","msg":"started to purge file","dir":"/var/lib/minikube/etcd/member/wal","suffix":"wal","max":5,"interval":"30s"}
{"level":"info","ts":"2023-08-01T04:37:15.661Z","caller":"embed/etcd.go:687","msg":"starting with client TLS","tls-info":"cert = /var/lib/minikube/certs/etcd/server.crt, key = /var/lib/minikube/certs/etcd/server.key, client-cert=, client-key=, trusted-ca = /var/lib/minikube/certs/etcd/ca.crt, client-cert-auth = true, crl-file = ","cipher-suites":[]}
{"level":"info","ts":"2023-08-01T04:37:15.661Z","caller":"embed/etcd.go:275","msg":"now serving peer/client/metrics","local-member-id":"aec36adc501070cc","initial-advertise-peer-urls":["https://192.168.49.2:2380"],"listen-peer-urls":["https://192.168.49.2:2380"],"advertise-client-urls":["https://192.168.49.2:2379"],"listen-client-urls":["https://127.0.0.1:2379","https://192.168.49.2:2379"],"listen-metrics-urls":["http://127.0.0.1:2381"]}
{"level":"info","ts":"2023-08-01T04:37:15.661Z","caller":"embed/etcd.go:762","msg":"serving metrics","address":"http://127.0.0.1:2381"}
{"level":"info","ts":"2023-08-01T04:37:15.662Z","caller":"embed/etcd.go:586","msg":"serving peer traffic","address":"192.168.49.2:2380"}
{"level":"info","ts":"2023-08-01T04:37:15.662Z","caller":"embed/etcd.go:558","msg":"cmux::serve","address":"192.168.49.2:2380"}
{"level":"info","ts":"2023-08-01T04:37:15.662Z","logger":"raft","caller":"etcdserver/zap_raft.go:77","msg":"aec36adc501070cc switched to configuration voters=(12593026477526642892)"}
{"level":"info","ts":"2023-08-01T04:37:15.662Z","caller":"membership/cluster.go:421","msg":"added member","cluster-id":"fa54960ea34d58be","local-member-id":"aec36adc501070cc","added-peer-id":"aec36adc501070cc","added-peer-peer-urls":["https://192.168.49.2:2380"]}
{"level":"info","ts":"2023-08-01T04:37:16.025Z","logger":"raft","caller":"etcdserver/zap_raft.go:77","msg":"aec36adc501070cc is starting a new election at term 1"}
{"level":"info","ts":"2023-08-01T04:37:16.025Z","logger":"raft","caller":"etcdserver/zap_raft.go:77","msg":"aec36adc501070cc became pre-candidate at term 1"}
{"level":"info","ts":"2023-08-01T04:37:16.025Z","logger":"raft","caller":"etcdserver/zap_raft.go:77","msg":"aec36adc501070cc received MsgPreVoteResp from aec36adc501070cc at term 1"}
{"level":"info","ts":"2023-08-01T04:37:16.025Z","logger":"raft","caller":"etcdserver/zap_raft.go:77","msg":"aec36adc501070cc became candidate at term 2"}
{"level":"info","ts":"2023-08-01T04:37:16.025Z","logger":"raft","caller":"etcdserver/zap_raft.go:77","msg":"aec36adc501070cc received MsgVoteResp from aec36adc501070cc at term 2"}
{"level":"info","ts":"2023-08-01T04:37:16.025Z","logger":"raft","caller":"etcdserver/zap_raft.go:77","msg":"aec36adc501070cc became leader at term 2"}
{"level":"info","ts":"2023-08-01T04:37:16.025Z","logger":"raft","caller":"etcdserver/zap_raft.go:77","msg":"raft.node: aec36adc501070cc elected leader aec36adc501070cc at term 2"}
{"level":"info","ts":"2023-08-01T04:37:16.030Z","caller":"etcdserver/server.go:2062","msg":"published local member to cluster through raft","local-member-id":"aec36adc501070cc","local-member-attributes":"{Name:minikube ClientURLs:[https://192.168.49.2:2379]}","request-path":"/0/members/aec36adc501070cc/attributes","cluster-id":"fa54960ea34d58be","publish-timeout":"7s"}
{"level":"info","ts":"2023-08-01T04:37:16.030Z","caller":"etcdserver/server.go:2571","msg":"setting up initial cluster version using v2 API","cluster-version":"3.5"}
{"level":"info","ts":"2023-08-01T04:37:16.030Z","caller":"embed/serve.go:100","msg":"ready to serve client requests"}
{"level":"info","ts":"2023-08-01T04:37:16.030Z","caller":"embed/serve.go:100","msg":"ready to serve client requests"}
{"level":"info","ts":"2023-08-01T04:37:16.032Z","caller":"embed/serve.go:198","msg":"serving client traffic securely","address":"127.0.0.1:2379"}
{"level":"info","ts":"2023-08-01T04:37:16.032Z","caller":"etcdmain/main.go:44","msg":"notifying init daemon"}
{"level":"info","ts":"2023-08-01T04:37:16.032Z","caller":"etcdmain/main.go:50","msg":"successfully notified init daemon"}
{"level":"info","ts":"2023-08-01T04:37:16.032Z","caller":"embed/serve.go:198","msg":"serving client traffic securely","address":"192.168.49.2:2379"}
{"level":"info","ts":"2023-08-01T04:37:16.036Z","caller":"membership/cluster.go:584","msg":"set initial cluster version","cluster-id":"fa54960ea34d58be","local-member-id":"aec36adc501070cc","cluster-version":"3.5"}
{"level":"info","ts":"2023-08-01T04:37:16.036Z","caller":"api/capability.go:75","msg":"enabled capabilities for version","cluster-version":"3.5"}
{"level":"info","ts":"2023-08-01T04:37:16.036Z","caller":"etcdserver/server.go:2595","msg":"cluster version is updated","cluster-version":"3.5"}
{"level":"info","ts":"2023-08-01T04:37:20.041Z","caller":"traceutil/trace.go:171","msg":"trace[1852966158] linearizableReadLoop","detail":"{readStateIndex:9; appliedIndex:8; }","duration":"100.482096ms","start":"2023-08-01T04:37:19.941Z","end":"2023-08-01T04:37:20.041Z","steps":["trace[1852966158] 'read index received'  (duration: 93.332658ms)","trace[1852966158] 'applied index is now lower than readState.Index'  (duration: 7.148156ms)"],"step_count":2}
{"level":"info","ts":"2023-08-01T04:37:20.125Z","caller":"traceutil/trace.go:171","msg":"trace[1223706930] transaction","detail":"{read_only:false; response_revision:6; number_of_response:1; }","duration":"185.975419ms","start":"2023-08-01T04:37:19.939Z","end":"2023-08-01T04:37:20.125Z","steps":["trace[1223706930] 'process raft request'  (duration: 95.126793ms)"],"step_count":1}
{"level":"warn","ts":"2023-08-01T04:37:20.126Z","caller":"etcdserver/util.go:170","msg":"apply request took too long","took":"192.809521ms","expected-duration":"100ms","prefix":"read-only range ","request":"key:\"/registry/namespaces/kube-system\" ","response":"range_response_count:0 size:4"}
{"level":"info","ts":"2023-08-01T04:37:20.126Z","caller":"traceutil/trace.go:171","msg":"trace[1565943568] range","detail":"{range_begin:/registry/namespaces/kube-system; range_end:; response_count:0; response_revision:11; }","duration":"192.913657ms","start":"2023-08-01T04:37:19.933Z","end":"2023-08-01T04:37:20.126Z","steps":["trace[1565943568] 'agreement among raft nodes before linearized reading'  (duration: 192.674228ms)"],"step_count":1}
{"level":"warn","ts":"2023-08-01T04:37:20.126Z","caller":"etcdserver/util.go:170","msg":"apply request took too long","took":"193.239518ms","expected-duration":"100ms","prefix":"read-only range ","request":"key:\"/registry/minions/minikube\" ","response":"range_response_count:1 size:2872"}
{"level":"info","ts":"2023-08-01T04:37:20.126Z","caller":"traceutil/trace.go:171","msg":"trace[1493726887] range","detail":"{range_begin:/registry/minions/minikube; range_end:; response_count:1; response_revision:11; }","duration":"193.327474ms","start":"2023-08-01T04:37:19.933Z","end":"2023-08-01T04:37:20.126Z","steps":["trace[1493726887] 'agreement among raft nodes before linearized reading'  (duration: 108.706713ms)","trace[1493726887] 'range keys from bolt db'  (duration: 83.024596ms)"],"step_count":2}
{"level":"warn","ts":"2023-08-01T04:37:20.128Z","caller":"etcdserver/util.go:170","msg":"apply request took too long","took":"102.949962ms","expected-duration":"100ms","prefix":"read-only range ","request":"key:\"/registry/resourcequotas/kube-system/\" range_end:\"/registry/resourcequotas/kube-system0\" ","response":"range_response_count:0 size:4"}
{"level":"info","ts":"2023-08-01T04:37:20.128Z","caller":"traceutil/trace.go:171","msg":"trace[390854396] range","detail":"{range_begin:/registry/resourcequotas/kube-system/; range_end:/registry/resourcequotas/kube-system0; response_count:0; response_revision:11; }","duration":"103.015785ms","start":"2023-08-01T04:37:20.025Z","end":"2023-08-01T04:37:20.128Z","steps":["trace[390854396] 'agreement among raft nodes before linearized reading'  (duration: 101.859832ms)"],"step_count":1}
{"level":"info","ts":"2023-08-01T04:37:24.145Z","caller":"traceutil/trace.go:171","msg":"trace[1573830157] linearizableReadLoop","detail":"{readStateIndex:246; appliedIndex:244; }","duration":"106.03619ms","start":"2023-08-01T04:37:24.039Z","end":"2023-08-01T04:37:24.145Z","steps":["trace[1573830157] 'read index received'  (duration: 8.173015ms)","trace[1573830157] 'applied index is now lower than readState.Index'  (duration: 97.862043ms)"],"step_count":2}
{"level":"warn","ts":"2023-08-01T04:37:24.146Z","caller":"etcdserver/util.go:170","msg":"apply request took too long","took":"106.490793ms","expected-duration":"100ms","prefix":"read-only range ","request":"key:\"/registry/csinodes/minikube\" ","response":"range_response_count:1 size:664"}
{"level":"info","ts":"2023-08-01T04:37:24.146Z","caller":"traceutil/trace.go:171","msg":"trace[1249177210] range","detail":"{range_begin:/registry/csinodes/minikube; range_end:; response_count:1; response_revision:240; }","duration":"106.617521ms","start":"2023-08-01T04:37:24.039Z","end":"2023-08-01T04:37:24.146Z","steps":["trace[1249177210] 'agreement among raft nodes before linearized reading'  (duration: 106.226878ms)"],"step_count":1}
{"level":"info","ts":"2023-08-01T04:37:24.149Z","caller":"traceutil/trace.go:171","msg":"trace[1549980960] transaction","detail":"{read_only:false; response_revision:240; number_of_response:1; }","duration":"111.716872ms","start":"2023-08-01T04:37:24.035Z","end":"2023-08-01T04:37:24.146Z","steps":["trace[1549980960] 'process raft request'  (duration: 90.089691ms)","trace[1549980960] 'compare'  (duration: 20.418372ms)"],"step_count":2}
{"level":"info","ts":"2023-08-01T04:47:17.883Z","caller":"mvcc/index.go:214","msg":"compact tree index","revision":666}
{"level":"info","ts":"2023-08-01T04:47:17.887Z","caller":"mvcc/kvstore_compaction.go:66","msg":"finished scheduled compaction","compact-revision":666,"took":"3.631575ms","hash":1179652300}
{"level":"info","ts":"2023-08-01T04:47:17.887Z","caller":"mvcc/hash.go:137","msg":"storing new hash","hash":1179652300,"revision":666,"compact-revision":-1}
{"level":"info","ts":"2023-08-01T04:48:06.378Z","caller":"traceutil/trace.go:171","msg":"trace[1792708989] transaction","detail":"{read_only:false; response_revision:981; number_of_response:1; }","duration":"227.940992ms","start":"2023-08-01T04:48:06.150Z","end":"2023-08-01T04:48:06.378Z","steps":["trace[1792708989] 'process raft request'  (duration: 227.696914ms)"],"step_count":1}
{"level":"info","ts":"2023-08-01T04:48:06.378Z","caller":"traceutil/trace.go:171","msg":"trace[768197715] linearizableReadLoop","detail":"{readStateIndex:1123; appliedIndex:1122; }","duration":"214.376753ms","start":"2023-08-01T04:48:06.163Z","end":"2023-08-01T04:48:06.378Z","steps":["trace[768197715] 'read index received'  (duration: 214.124624ms)","trace[768197715] 'applied index is now lower than readState.Index'  (duration: 250.486µs)"],"step_count":2}
{"level":"warn","ts":"2023-08-01T04:48:06.378Z","caller":"etcdserver/util.go:170","msg":"apply request took too long","took":"214.815918ms","expected-duration":"100ms","prefix":"read-only range ","request":"key:\"/registry/health\" ","response":"range_response_count:0 size:5"}
{"level":"info","ts":"2023-08-01T04:48:06.378Z","caller":"traceutil/trace.go:171","msg":"trace[286433508] range","detail":"{range_begin:/registry/health; range_end:; response_count:0; response_revision:981; }","duration":"214.877774ms","start":"2023-08-01T04:48:06.163Z","end":"2023-08-01T04:48:06.378Z","steps":["trace[286433508] 'agreement among raft nodes before linearized reading'  (duration: 214.672779ms)"],"step_count":1}


==> kernel <==
 04:49:31 up 19:13,  0 users,  load average: 0.65, 0.80, 0.69
Linux minikube 5.10.16.3-microsoft-standard-WSL2 #1 SMP Fri Apr 2 22:23:49 UTC 2021 x86_64 x86_64 x86_64 GNU/Linux
PRETTY_NAME="Ubuntu 22.04.2 LTS"


==> kube-apiserver [a09d10e43910] <==
I0801 04:37:19.637230       1 aggregator.go:150] waiting for initial CRD sync...
I0801 04:37:19.637295       1 crdregistration_controller.go:111] Starting crd-autoregister controller
I0801 04:37:19.637339       1 shared_informer.go:311] Waiting for caches to sync for crd-autoregister
I0801 04:37:19.637458       1 controller.go:80] Starting OpenAPI V3 AggregationController
I0801 04:37:19.637480       1 dynamic_serving_content.go:132] "Starting controller" name="aggregator-proxy-cert::/var/lib/minikube/certs/front-proxy-client.crt::/var/lib/minikube/certs/front-proxy-client.key"
I0801 04:37:19.637589       1 gc_controller.go:78] Starting apiserver lease garbage collector
I0801 04:37:19.637674       1 handler_discovery.go:392] Starting ResourceDiscoveryManager
I0801 04:37:19.637836       1 controller.go:85] Starting OpenAPI V3 controller
I0801 04:37:19.637719       1 controller.go:85] Starting OpenAPI controller
I0801 04:37:19.637969       1 establishing_controller.go:76] Starting EstablishingController
I0801 04:37:19.637598       1 gc_controller.go:78] Starting apiserver lease garbage collector
I0801 04:37:19.638198       1 crd_finalizer.go:266] Starting CRDFinalizer
I0801 04:37:19.637620       1 controller.go:83] Starting OpenAPI AggregationController
I0801 04:37:19.638246       1 customresource_discovery_controller.go:289] Starting DiscoveryController
I0801 04:37:19.637597       1 apiservice_controller.go:97] Starting APIServiceRegistrationController
I0801 04:37:19.638280       1 apiapproval_controller.go:186] Starting KubernetesAPIApprovalPolicyConformantConditionController
I0801 04:37:19.638283       1 cache.go:32] Waiting for caches to sync for APIServiceRegistrationController controller
I0801 04:37:19.638200       1 nonstructuralschema_controller.go:192] Starting NonStructuralSchemaConditionController
I0801 04:37:19.638570       1 cluster_authentication_trust_controller.go:440] Starting cluster_authentication_trust_controller controller
I0801 04:37:19.639395       1 shared_informer.go:311] Waiting for caches to sync for cluster_authentication_trust_controller
I0801 04:37:19.639738       1 system_namespaces_controller.go:67] Starting system namespaces controller
I0801 04:37:19.640264       1 dynamic_cafile_content.go:157] "Starting controller" name="client-ca-bundle::/var/lib/minikube/certs/ca.crt"
I0801 04:37:19.641076       1 dynamic_cafile_content.go:157] "Starting controller" name="request-header::/var/lib/minikube/certs/front-proxy-ca.crt"
I0801 04:37:19.637921       1 naming_controller.go:291] Starting NamingConditionController
I0801 04:37:19.638873       1 controller.go:121] Starting legacy_token_tracking_controller
I0801 04:37:19.729602       1 shared_informer.go:311] Waiting for caches to sync for configmaps
I0801 04:37:19.837114       1 shared_informer.go:318] Caches are synced for node_authorizer
I0801 04:37:19.837994       1 apf_controller.go:366] Running API Priority and Fairness config worker
I0801 04:37:19.838009       1 apf_controller.go:369] Running API Priority and Fairness periodic rebalancing process
I0801 04:37:19.845790       1 shared_informer.go:318] Caches are synced for cluster_authentication_trust_controller
I0801 04:37:19.930755       1 shared_informer.go:318] Caches are synced for configmaps
I0801 04:37:19.932331       1 cache.go:39] Caches are synced for AvailableConditionController controller
I0801 04:37:19.932583       1 shared_informer.go:318] Caches are synced for crd-autoregister
I0801 04:37:19.933118       1 aggregator.go:152] initial CRD sync complete...
I0801 04:37:19.933333       1 autoregister_controller.go:141] Starting autoregister controller
I0801 04:37:19.933391       1 cache.go:32] Waiting for caches to sync for autoregister controller
I0801 04:37:19.933417       1 cache.go:39] Caches are synced for autoregister controller
I0801 04:37:19.938005       1 controller.go:624] quota admission added evaluator for: namespaces
I0801 04:37:19.941102       1 cache.go:39] Caches are synced for APIServiceRegistrationController controller
E0801 04:37:20.135497       1 controller.go:146] "Failed to ensure lease exists, will retry" err="namespaces \"kube-system\" not found" interval="200ms"
E0801 04:37:20.136034       1 controller.go:150] while syncing ConfigMap "kube-system/kube-apiserver-legacy-service-account-token-tracking", err: namespaces "kube-system" not found
I0801 04:37:20.329251       1 controller.go:132] OpenAPI AggregationController: action for item k8s_internal_local_delegation_chain_0000000000: Nothing (removed from the queue).
I0801 04:37:20.345975       1 controller.go:624] quota admission added evaluator for: leases.coordination.k8s.io
I0801 04:37:20.649199       1 storage_scheduling.go:95] created PriorityClass system-node-critical with value 2000001000
I0801 04:37:20.659120       1 storage_scheduling.go:95] created PriorityClass system-cluster-critical with value 2000000000
I0801 04:37:20.659167       1 storage_scheduling.go:111] all system priority classes are created successfully or already exist.
I0801 04:37:21.571019       1 controller.go:624] quota admission added evaluator for: roles.rbac.authorization.k8s.io
I0801 04:37:21.664219       1 controller.go:624] quota admission added evaluator for: rolebindings.rbac.authorization.k8s.io
I0801 04:37:21.853537       1 alloc.go:330] "allocated clusterIPs" service="default/kubernetes" clusterIPs=map[IPv4:10.96.0.1]
W0801 04:37:21.865918       1 lease.go:251] Resetting endpoints for master service "kubernetes" to [192.168.49.2]
I0801 04:37:21.867846       1 controller.go:624] quota admission added evaluator for: endpoints
I0801 04:37:21.878802       1 controller.go:624] quota admission added evaluator for: endpointslices.discovery.k8s.io
I0801 04:37:21.960370       1 controller.go:624] quota admission added evaluator for: serviceaccounts
I0801 04:37:23.778354       1 controller.go:624] quota admission added evaluator for: deployments.apps
I0801 04:37:23.842448       1 alloc.go:330] "allocated clusterIPs" service="kube-system/kube-dns" clusterIPs=map[IPv4:10.96.0.10]
I0801 04:37:23.856665       1 controller.go:624] quota admission added evaluator for: daemonsets.apps
I0801 04:37:36.548156       1 controller.go:624] quota admission added evaluator for: replicasets.apps
I0801 04:37:36.647178       1 controller.go:624] quota admission added evaluator for: controllerrevisions.apps
I0801 04:39:43.408630       1 alloc.go:330] "allocated clusterIPs" service="default/ecoadventure-service" clusterIPs=map[IPv4:10.98.48.53]
I0801 04:47:30.986287       1 alloc.go:330] "allocated clusterIPs" service="default/ecoadventure-service" clusterIPs=map[IPv4:10.107.166.64]


==> kube-controller-manager [00e5628f0e56] <==
I0801 04:37:35.644132       1 shared_informer.go:311] Waiting for caches to sync for GC
I0801 04:37:35.649878       1 shared_informer.go:311] Waiting for caches to sync for resource quota
I0801 04:37:35.673984       1 actual_state_of_world.go:547] "Failed to update statusUpdateNeeded field in actual state of world" err="Failed to set statusUpdateNeeded to needed true, because nodeName=\"minikube\" does not exist"
I0801 04:37:35.732047       1 shared_informer.go:318] Caches are synced for TTL
I0801 04:37:35.732811       1 shared_informer.go:318] Caches are synced for PVC protection
I0801 04:37:35.733179       1 shared_informer.go:318] Caches are synced for service account
I0801 04:37:35.734583       1 shared_informer.go:318] Caches are synced for namespace
I0801 04:37:35.734681       1 shared_informer.go:318] Caches are synced for ReplicaSet
I0801 04:37:35.735146       1 shared_informer.go:318] Caches are synced for certificate-csrapproving
I0801 04:37:35.735731       1 shared_informer.go:318] Caches are synced for job
I0801 04:37:35.737550       1 shared_informer.go:318] Caches are synced for ephemeral
I0801 04:37:35.737946       1 shared_informer.go:318] Caches are synced for ReplicationController
I0801 04:37:35.738048       1 shared_informer.go:318] Caches are synced for TTL after finished
I0801 04:37:35.742687       1 shared_informer.go:311] Waiting for caches to sync for garbage collector
I0801 04:37:35.743070       1 shared_informer.go:318] Caches are synced for certificate-csrsigning-kubelet-serving
I0801 04:37:35.744774       1 shared_informer.go:318] Caches are synced for certificate-csrsigning-kubelet-client
I0801 04:37:35.744890       1 shared_informer.go:318] Caches are synced for ClusterRoleAggregator
I0801 04:37:35.745753       1 shared_informer.go:318] Caches are synced for GC
I0801 04:37:35.745754       1 shared_informer.go:318] Caches are synced for deployment
I0801 04:37:35.746027       1 shared_informer.go:318] Caches are synced for cronjob
I0801 04:37:35.746154       1 shared_informer.go:318] Caches are synced for crt configmap
I0801 04:37:35.747091       1 shared_informer.go:318] Caches are synced for daemon sets
I0801 04:37:35.747423       1 shared_informer.go:318] Caches are synced for certificate-csrsigning-legacy-unknown
I0801 04:37:35.747522       1 shared_informer.go:318] Caches are synced for bootstrap_signer
I0801 04:37:35.747581       1 shared_informer.go:318] Caches are synced for endpoint
I0801 04:37:35.747620       1 shared_informer.go:318] Caches are synced for certificate-csrsigning-kube-apiserver-client
I0801 04:37:35.825407       1 shared_informer.go:318] Caches are synced for endpoint_slice_mirroring
I0801 04:37:35.825423       1 shared_informer.go:318] Caches are synced for endpoint_slice
I0801 04:37:35.825468       1 shared_informer.go:318] Caches are synced for HPA
I0801 04:37:35.825511       1 shared_informer.go:318] Caches are synced for node
I0801 04:37:35.826389       1 range_allocator.go:174] "Sending events to api server"
I0801 04:37:35.826530       1 range_allocator.go:178] "Starting range CIDR allocator"
I0801 04:37:35.826541       1 shared_informer.go:311] Waiting for caches to sync for cidrallocator
I0801 04:37:35.826552       1 shared_informer.go:318] Caches are synced for cidrallocator
I0801 04:37:35.833509       1 shared_informer.go:318] Caches are synced for taint
I0801 04:37:35.833762       1 node_lifecycle_controller.go:1223] "Initializing eviction metric for zone" zone=""
I0801 04:37:35.833931       1 taint_manager.go:206] "Starting NoExecuteTaintManager"
I0801 04:37:35.833964       1 node_lifecycle_controller.go:875] "Missing timestamp for Node. Assuming now as a timestamp" node="minikube"
I0801 04:37:35.834002       1 taint_manager.go:211] "Sending events to api server"
I0801 04:37:35.834004       1 event.go:307] "Event occurred" object="minikube" fieldPath="" kind="Node" apiVersion="v1" type="Normal" reason="RegisteredNode" message="Node minikube event: Registered Node minikube in Controller"
I0801 04:37:35.834109       1 node_lifecycle_controller.go:1069] "Controller detected that zone is now in new state" zone="" newState=Normal
I0801 04:37:35.843338       1 shared_informer.go:318] Caches are synced for disruption
I0801 04:37:35.843883       1 range_allocator.go:380] "Set node PodCIDR" node="minikube" podCIDRs=[10.244.0.0/24]
I0801 04:37:35.850201       1 shared_informer.go:318] Caches are synced for resource quota
I0801 04:37:35.867743       1 shared_informer.go:318] Caches are synced for PV protection
I0801 04:37:35.872159       1 shared_informer.go:318] Caches are synced for attach detach
I0801 04:37:35.881621       1 shared_informer.go:318] Caches are synced for stateful set
I0801 04:37:35.895630       1 shared_informer.go:318] Caches are synced for expand
I0801 04:37:35.895730       1 shared_informer.go:318] Caches are synced for persistent volume
I0801 04:37:35.925155       1 shared_informer.go:318] Caches are synced for resource quota
I0801 04:37:36.342407       1 shared_informer.go:318] Caches are synced for garbage collector
I0801 04:37:36.342488       1 garbagecollector.go:166] "All resource monitors have synced. Proceeding to collect garbage"
I0801 04:37:36.343202       1 shared_informer.go:318] Caches are synced for garbage collector
I0801 04:37:36.552317       1 event.go:307] "Event occurred" object="kube-system/coredns" fieldPath="" kind="Deployment" apiVersion="apps/v1" type="Normal" reason="ScalingReplicaSet" message="Scaled up replica set coredns-5d78c9869d to 1"
I0801 04:37:36.659574       1 event.go:307] "Event occurred" object="kube-system/kube-proxy" fieldPath="" kind="DaemonSet" apiVersion="apps/v1" type="Normal" reason="SuccessfulCreate" message="Created pod: kube-proxy-v6mmc"
I0801 04:37:36.755718       1 event.go:307] "Event occurred" object="kube-system/coredns-5d78c9869d" fieldPath="" kind="ReplicaSet" apiVersion="apps/v1" type="Normal" reason="SuccessfulCreate" message="Created pod: coredns-5d78c9869d-rxkpn"
I0801 04:39:31.349745       1 event.go:307] "Event occurred" object="default/ecoadventure-service" fieldPath="" kind="Deployment" apiVersion="apps/v1" type="Normal" reason="ScalingReplicaSet" message="Scaled up replica set ecoadventure-service-f8cf977c8 to 1"
I0801 04:39:31.367021       1 event.go:307] "Event occurred" object="default/ecoadventure-service-f8cf977c8" fieldPath="" kind="ReplicaSet" apiVersion="apps/v1" type="Normal" reason="SuccessfulCreate" message="Created pod: ecoadventure-service-f8cf977c8-7fvbb"
I0801 04:47:08.738604       1 event.go:307] "Event occurred" object="default/ecoadventure-service" fieldPath="" kind="Deployment" apiVersion="apps/v1" type="Normal" reason="ScalingReplicaSet" message="Scaled up replica set ecoadventure-service-f8cf977c8 to 1"
I0801 04:47:08.756087       1 event.go:307] "Event occurred" object="default/ecoadventure-service-f8cf977c8" fieldPath="" kind="ReplicaSet" apiVersion="apps/v1" type="Normal" reason="SuccessfulCreate" message="Created pod: ecoadventure-service-f8cf977c8-z9xcn"


==> kube-proxy [399caabfa783] <==
I0801 04:37:38.038804       1 node.go:141] Successfully retrieved node IP: 192.168.49.2
I0801 04:37:38.039021       1 server_others.go:110] "Detected node IP" address="192.168.49.2"
I0801 04:37:38.039097       1 server_others.go:554] "Using iptables proxy"
I0801 04:37:38.072796       1 server_others.go:192] "Using iptables Proxier"
I0801 04:37:38.072865       1 server_others.go:199] "kube-proxy running in dual-stack mode" ipFamily=IPv4
I0801 04:37:38.072876       1 server_others.go:200] "Creating dualStackProxier for iptables"
I0801 04:37:38.072892       1 server_others.go:484] "Detect-local-mode set to ClusterCIDR, but no IPv6 cluster CIDR defined, defaulting to no-op detect-local for IPv6"
I0801 04:37:38.072921       1 proxier.go:253] "Setting route_localnet=1 to allow node-ports on localhost; to change this either disable iptables.localhostNodePorts (--iptables-localhost-nodeports) or set nodePortAddresses (--nodeport-addresses) to filter loopback addresses"
I0801 04:37:38.075642       1 server.go:658] "Version info" version="v1.27.3"
I0801 04:37:38.075701       1 server.go:660] "Golang settings" GOGC="" GOMAXPROCS="" GOTRACEBACK=""
I0801 04:37:38.078325       1 config.go:97] "Starting endpoint slice config controller"
I0801 04:37:38.078345       1 config.go:188] "Starting service config controller"
I0801 04:37:38.078386       1 shared_informer.go:311] Waiting for caches to sync for endpoint slice config
I0801 04:37:38.078392       1 shared_informer.go:311] Waiting for caches to sync for service config
I0801 04:37:38.078464       1 config.go:315] "Starting node config controller"
I0801 04:37:38.078475       1 shared_informer.go:311] Waiting for caches to sync for node config
I0801 04:37:38.178924       1 shared_informer.go:318] Caches are synced for node config
I0801 04:37:38.178975       1 shared_informer.go:318] Caches are synced for service config
I0801 04:37:38.178996       1 shared_informer.go:318] Caches are synced for endpoint slice config


==> kube-scheduler [015de8b9afe2] <==
I0801 04:37:16.884109       1 serving.go:348] Generated self-signed cert in-memory
W0801 04:37:19.940236       1 requestheader_controller.go:193] Unable to get configmap/extension-apiserver-authentication in kube-system.  Usually fixed by 'kubectl create rolebinding -n kube-system ROLEBINDING_NAME --role=extension-apiserver-authentication-reader --serviceaccount=YOUR_NS:YOUR_SA'
W0801 04:37:19.940587       1 authentication.go:368] Error looking up in-cluster authentication configuration: configmaps "extension-apiserver-authentication" is forbidden: User "system:kube-scheduler" cannot get resource "configmaps" in API group "" in the namespace "kube-system"
W0801 04:37:19.940907       1 authentication.go:369] Continuing without authentication configuration. This may treat all requests as anonymous.
W0801 04:37:19.940940       1 authentication.go:370] To require authentication configuration lookup to succeed, set --authentication-tolerate-lookup-failure=false
I0801 04:37:20.047749       1 server.go:154] "Starting Kubernetes Scheduler" version="v1.27.3"
I0801 04:37:20.047826       1 server.go:156] "Golang settings" GOGC="" GOMAXPROCS="" GOTRACEBACK=""
I0801 04:37:20.127287       1 secure_serving.go:210] Serving securely on 127.0.0.1:10259
I0801 04:37:20.140406       1 tlsconfig.go:240] "Starting DynamicServingCertificateController"
I0801 04:37:20.140632       1 configmap_cafile_content.go:202] "Starting controller" name="client-ca::kube-system::extension-apiserver-authentication::client-ca-file"
I0801 04:37:20.140658       1 shared_informer.go:311] Waiting for caches to sync for client-ca::kube-system::extension-apiserver-authentication::client-ca-file
W0801 04:37:20.143931       1 reflector.go:533] vendor/k8s.io/client-go/informers/factory.go:150: failed to list *v1.StatefulSet: statefulsets.apps is forbidden: User "system:kube-scheduler" cannot list resource "statefulsets" in API group "apps" at the cluster scope
E0801 04:37:20.144055       1 reflector.go:148] vendor/k8s.io/client-go/informers/factory.go:150: Failed to watch *v1.StatefulSet: failed to list *v1.StatefulSet: statefulsets.apps is forbidden: User "system:kube-scheduler" cannot list resource "statefulsets" in API group "apps" at the cluster scope
W0801 04:37:20.144120       1 reflector.go:533] vendor/k8s.io/client-go/informers/factory.go:150: failed to list *v1.PersistentVolumeClaim: persistentvolumeclaims is forbidden: User "system:kube-scheduler" cannot list resource "persistentvolumeclaims" in API group "" at the cluster scope
E0801 04:37:20.144161       1 reflector.go:148] vendor/k8s.io/client-go/informers/factory.go:150: Failed to watch *v1.PersistentVolumeClaim: failed to list *v1.PersistentVolumeClaim: persistentvolumeclaims is forbidden: User "system:kube-scheduler" cannot list resource "persistentvolumeclaims" in API group "" at the cluster scope
W0801 04:37:20.144360       1 reflector.go:533] vendor/k8s.io/client-go/informers/factory.go:150: failed to list *v1.Node: nodes is forbidden: User "system:kube-scheduler" cannot list resource "nodes" in API group "" at the cluster scope
E0801 04:37:20.144441       1 reflector.go:148] vendor/k8s.io/client-go/informers/factory.go:150: Failed to watch *v1.Node: failed to list *v1.Node: nodes is forbidden: User "system:kube-scheduler" cannot list resource "nodes" in API group "" at the cluster scope
W0801 04:37:20.144370       1 reflector.go:533] pkg/server/dynamiccertificates/configmap_cafile_content.go:206: failed to list *v1.ConfigMap: configmaps "extension-apiserver-authentication" is forbidden: User "system:kube-scheduler" cannot list resource "configmaps" in API group "" in the namespace "kube-system"
W0801 04:37:20.144587       1 reflector.go:533] vendor/k8s.io/client-go/informers/factory.go:150: failed to list *v1.CSINode: csinodes.storage.k8s.io is forbidden: User "system:kube-scheduler" cannot list resource "csinodes" in API group "storage.k8s.io" at the cluster scope
E0801 04:37:20.144621       1 reflector.go:148] vendor/k8s.io/client-go/informers/factory.go:150: Failed to watch *v1.CSINode: failed to list *v1.CSINode: csinodes.storage.k8s.io is forbidden: User "system:kube-scheduler" cannot list resource "csinodes" in API group "storage.k8s.io" at the cluster scope
E0801 04:37:20.144593       1 reflector.go:148] pkg/server/dynamiccertificates/configmap_cafile_content.go:206: Failed to watch *v1.ConfigMap: failed to list *v1.ConfigMap: configmaps "extension-apiserver-authentication" is forbidden: User "system:kube-scheduler" cannot list resource "configmaps" in API group "" in the namespace "kube-system"
W0801 04:37:20.144734       1 reflector.go:533] vendor/k8s.io/client-go/informers/factory.go:150: failed to list *v1.ReplicationController: replicationcontrollers is forbidden: User "system:kube-scheduler" cannot list resource "replicationcontrollers" in API group "" at the cluster scope
E0801 04:37:20.144805       1 reflector.go:148] vendor/k8s.io/client-go/informers/factory.go:150: Failed to watch *v1.ReplicationController: failed to list *v1.ReplicationController: replicationcontrollers is forbidden: User "system:kube-scheduler" cannot list resource "replicationcontrollers" in API group "" at the cluster scope
W0801 04:37:20.145992       1 reflector.go:533] vendor/k8s.io/client-go/informers/factory.go:150: failed to list *v1.ReplicaSet: replicasets.apps is forbidden: User "system:kube-scheduler" cannot list resource "replicasets" in API group "apps" at the cluster scope
E0801 04:37:20.146384       1 reflector.go:148] vendor/k8s.io/client-go/informers/factory.go:150: Failed to watch *v1.ReplicaSet: failed to list *v1.ReplicaSet: replicasets.apps is forbidden: User "system:kube-scheduler" cannot list resource "replicasets" in API group "apps" at the cluster scope
W0801 04:37:20.147037       1 reflector.go:533] vendor/k8s.io/client-go/informers/factory.go:150: failed to list *v1.PodDisruptionBudget: poddisruptionbudgets.policy is forbidden: User "system:kube-scheduler" cannot list resource "poddisruptionbudgets" in API group "policy" at the cluster scope
E0801 04:37:20.147457       1 reflector.go:148] vendor/k8s.io/client-go/informers/factory.go:150: Failed to watch *v1.PodDisruptionBudget: failed to list *v1.PodDisruptionBudget: poddisruptionbudgets.policy is forbidden: User "system:kube-scheduler" cannot list resource "poddisruptionbudgets" in API group "policy" at the cluster scope
W0801 04:37:20.147642       1 reflector.go:533] vendor/k8s.io/client-go/informers/factory.go:150: failed to list *v1.CSIDriver: csidrivers.storage.k8s.io is forbidden: User "system:kube-scheduler" cannot list resource "csidrivers" in API group "storage.k8s.io" at the cluster scope
E0801 04:37:20.147676       1 reflector.go:148] vendor/k8s.io/client-go/informers/factory.go:150: Failed to watch *v1.CSIDriver: failed to list *v1.CSIDriver: csidrivers.storage.k8s.io is forbidden: User "system:kube-scheduler" cannot list resource "csidrivers" in API group "storage.k8s.io" at the cluster scope
W0801 04:37:20.148143       1 reflector.go:533] vendor/k8s.io/client-go/informers/factory.go:150: failed to list *v1.Service: services is forbidden: User "system:kube-scheduler" cannot list resource "services" in API group "" at the cluster scope
E0801 04:37:20.148234       1 reflector.go:148] vendor/k8s.io/client-go/informers/factory.go:150: Failed to watch *v1.Service: failed to list *v1.Service: services is forbidden: User "system:kube-scheduler" cannot list resource "services" in API group "" at the cluster scope
W0801 04:37:20.148339       1 reflector.go:533] vendor/k8s.io/client-go/informers/factory.go:150: failed to list *v1.Namespace: namespaces is forbidden: User "system:kube-scheduler" cannot list resource "namespaces" in API group "" at the cluster scope
E0801 04:37:20.148363       1 reflector.go:148] vendor/k8s.io/client-go/informers/factory.go:150: Failed to watch *v1.Namespace: failed to list *v1.Namespace: namespaces is forbidden: User "system:kube-scheduler" cannot list resource "namespaces" in API group "" at the cluster scope
W0801 04:37:20.148423       1 reflector.go:533] vendor/k8s.io/client-go/informers/factory.go:150: failed to list *v1.CSIStorageCapacity: csistoragecapacities.storage.k8s.io is forbidden: User "system:kube-scheduler" cannot list resource "csistoragecapacities" in API group "storage.k8s.io" at the cluster scope
E0801 04:37:20.148437       1 reflector.go:148] vendor/k8s.io/client-go/informers/factory.go:150: Failed to watch *v1.CSIStorageCapacity: failed to list *v1.CSIStorageCapacity: csistoragecapacities.storage.k8s.io is forbidden: User "system:kube-scheduler" cannot list resource "csistoragecapacities" in API group "storage.k8s.io" at the cluster scope
W0801 04:37:20.148569       1 reflector.go:533] vendor/k8s.io/client-go/informers/factory.go:150: failed to list *v1.PersistentVolume: persistentvolumes is forbidden: User "system:kube-scheduler" cannot list resource "persistentvolumes" in API group "" at the cluster scope
E0801 04:37:20.148597       1 reflector.go:148] vendor/k8s.io/client-go/informers/factory.go:150: Failed to watch *v1.PersistentVolume: failed to list *v1.PersistentVolume: persistentvolumes is forbidden: User "system:kube-scheduler" cannot list resource "persistentvolumes" in API group "" at the cluster scope
W0801 04:37:20.148680       1 reflector.go:533] vendor/k8s.io/client-go/informers/factory.go:150: failed to list *v1.StorageClass: storageclasses.storage.k8s.io is forbidden: User "system:kube-scheduler" cannot list resource "storageclasses" in API group "storage.k8s.io" at the cluster scope
E0801 04:37:20.148695       1 reflector.go:148] vendor/k8s.io/client-go/informers/factory.go:150: Failed to watch *v1.StorageClass: failed to list *v1.StorageClass: storageclasses.storage.k8s.io is forbidden: User "system:kube-scheduler" cannot list resource "storageclasses" in API group "storage.k8s.io" at the cluster scope
W0801 04:37:20.149010       1 reflector.go:533] vendor/k8s.io/client-go/informers/factory.go:150: failed to list *v1.Pod: pods is forbidden: User "system:kube-scheduler" cannot list resource "pods" in API group "" at the cluster scope
E0801 04:37:20.149059       1 reflector.go:148] vendor/k8s.io/client-go/informers/factory.go:150: Failed to watch *v1.Pod: failed to list *v1.Pod: pods is forbidden: User "system:kube-scheduler" cannot list resource "pods" in API group "" at the cluster scope
W0801 04:37:21.010567       1 reflector.go:533] pkg/server/dynamiccertificates/configmap_cafile_content.go:206: failed to list *v1.ConfigMap: configmaps "extension-apiserver-authentication" is forbidden: User "system:kube-scheduler" cannot list resource "configmaps" in API group "" in the namespace "kube-system"
E0801 04:37:21.010638       1 reflector.go:148] pkg/server/dynamiccertificates/configmap_cafile_content.go:206: Failed to watch *v1.ConfigMap: failed to list *v1.ConfigMap: configmaps "extension-apiserver-authentication" is forbidden: User "system:kube-scheduler" cannot list resource "configmaps" in API group "" in the namespace "kube-system"
W0801 04:37:21.100787       1 reflector.go:533] vendor/k8s.io/client-go/informers/factory.go:150: failed to list *v1.ReplicaSet: replicasets.apps is forbidden: User "system:kube-scheduler" cannot list resource "replicasets" in API group "apps" at the cluster scope
E0801 04:37:21.100895       1 reflector.go:148] vendor/k8s.io/client-go/informers/factory.go:150: Failed to watch *v1.ReplicaSet: failed to list *v1.ReplicaSet: replicasets.apps is forbidden: User "system:kube-scheduler" cannot list resource "replicasets" in API group "apps" at the cluster scope
W0801 04:37:21.120755       1 reflector.go:533] vendor/k8s.io/client-go/informers/factory.go:150: failed to list *v1.PodDisruptionBudget: poddisruptionbudgets.policy is forbidden: User "system:kube-scheduler" cannot list resource "poddisruptionbudgets" in API group "policy" at the cluster scope
E0801 04:37:21.120812       1 reflector.go:148] vendor/k8s.io/client-go/informers/factory.go:150: Failed to watch *v1.PodDisruptionBudget: failed to list *v1.PodDisruptionBudget: poddisruptionbudgets.policy is forbidden: User "system:kube-scheduler" cannot list resource "poddisruptionbudgets" in API group "policy" at the cluster scope
W0801 04:37:21.133400       1 reflector.go:533] vendor/k8s.io/client-go/informers/factory.go:150: failed to list *v1.CSIDriver: csidrivers.storage.k8s.io is forbidden: User "system:kube-scheduler" cannot list resource "csidrivers" in API group "storage.k8s.io" at the cluster scope
E0801 04:37:21.133474       1 reflector.go:148] vendor/k8s.io/client-go/informers/factory.go:150: Failed to watch *v1.CSIDriver: failed to list *v1.CSIDriver: csidrivers.storage.k8s.io is forbidden: User "system:kube-scheduler" cannot list resource "csidrivers" in API group "storage.k8s.io" at the cluster scope
W0801 04:37:21.229229       1 reflector.go:533] vendor/k8s.io/client-go/informers/factory.go:150: failed to list *v1.PersistentVolumeClaim: persistentvolumeclaims is forbidden: User "system:kube-scheduler" cannot list resource "persistentvolumeclaims" in API group "" at the cluster scope
E0801 04:37:21.229313       1 reflector.go:148] vendor/k8s.io/client-go/informers/factory.go:150: Failed to watch *v1.PersistentVolumeClaim: failed to list *v1.PersistentVolumeClaim: persistentvolumeclaims is forbidden: User "system:kube-scheduler" cannot list resource "persistentvolumeclaims" in API group "" at the cluster scope
W0801 04:37:21.267043       1 reflector.go:533] vendor/k8s.io/client-go/informers/factory.go:150: failed to list *v1.StatefulSet: statefulsets.apps is forbidden: User "system:kube-scheduler" cannot list resource "statefulsets" in API group "apps" at the cluster scope
E0801 04:37:21.267121       1 reflector.go:148] vendor/k8s.io/client-go/informers/factory.go:150: Failed to watch *v1.StatefulSet: failed to list *v1.StatefulSet: statefulsets.apps is forbidden: User "system:kube-scheduler" cannot list resource "statefulsets" in API group "apps" at the cluster scope
I0801 04:37:23.940841       1 shared_informer.go:318] Caches are synced for client-ca::kube-system::extension-apiserver-authentication::client-ca-file


==> kubelet <==
Aug 01 04:37:36 minikube kubelet[2614]: I0801 04:37:36.896791    2614 reconciler_common.go:258] "operationExecutor.VerifyControllerAttachedVolume started for volume \"config-volume\" (UniqueName: \"kubernetes.io/configmap/6f3d6d78-0ff7-4f3b-be60-2c52471f3a1d-config-volume\") pod \"coredns-5d78c9869d-rxkpn\" (UID: \"6f3d6d78-0ff7-4f3b-be60-2c52471f3a1d\") " pod="kube-system/coredns-5d78c9869d-rxkpn"
Aug 01 04:37:37 minikube kubelet[2614]: I0801 04:37:37.551344    2614 pod_container_deletor.go:80] "Container not found in pod's containers" containerID="c38456699959ff427a87d6b78d661b074bce052f2cf06070063cc36ae8ac1800"
Aug 01 04:37:38 minikube kubelet[2614]: I0801 04:37:38.895319    2614 pod_startup_latency_tracker.go:102] "Observed pod startup duration" pod="kube-system/storage-provisioner" podStartSLOduration=11.895250058 podCreationTimestamp="2023-08-01 04:37:27 +0000 UTC" firstStartedPulling="0001-01-01 00:00:00 +0000 UTC" lastFinishedPulling="0001-01-01 00:00:00 +0000 UTC" observedRunningTime="2023-08-01 04:37:37.936166625 +0000 UTC m=+14.208838120" watchObservedRunningTime="2023-08-01 04:37:38.895250058 +0000 UTC m=+15.167943294"
Aug 01 04:37:38 minikube kubelet[2614]: I0801 04:37:38.930668    2614 pod_startup_latency_tracker.go:102] "Observed pod startup duration" pod="kube-system/kube-proxy-v6mmc" podStartSLOduration=2.930606382 podCreationTimestamp="2023-08-01 04:37:36 +0000 UTC" firstStartedPulling="0001-01-01 00:00:00 +0000 UTC" lastFinishedPulling="0001-01-01 00:00:00 +0000 UTC" observedRunningTime="2023-08-01 04:37:38.896014152 +0000 UTC m=+15.168707388" watchObservedRunningTime="2023-08-01 04:37:38.930606382 +0000 UTC m=+15.203299598"
Aug 01 04:37:44 minikube kubelet[2614]: I0801 04:37:44.990989    2614 kuberuntime_manager.go:1460] "Updating runtime config through cri with podcidr" CIDR="10.244.0.0/24"
Aug 01 04:37:44 minikube kubelet[2614]: I0801 04:37:44.992455    2614 kubelet_network.go:61] "Updating Pod CIDR" originalPodCIDR="" newPodCIDR="10.244.0.0/24"
Aug 01 04:37:47 minikube kubelet[2614]: I0801 04:37:47.978698    2614 scope.go:115] "RemoveContainer" containerID="da21afd06d31f134d3bea9dc621efc4acde5f08ed4f5d3a8924dc6ccc225f8bb"
Aug 01 04:37:47 minikube kubelet[2614]: I0801 04:37:47.999471    2614 pod_startup_latency_tracker.go:102] "Observed pod startup duration" pod="kube-system/coredns-5d78c9869d-rxkpn" podStartSLOduration=11.999420158 podCreationTimestamp="2023-08-01 04:37:36 +0000 UTC" firstStartedPulling="0001-01-01 00:00:00 +0000 UTC" lastFinishedPulling="0001-01-01 00:00:00 +0000 UTC" observedRunningTime="2023-08-01 04:37:38.931138886 +0000 UTC m=+15.203832102" watchObservedRunningTime="2023-08-01 04:37:47.999420158 +0000 UTC m=+24.272113364"
Aug 01 04:39:31 minikube kubelet[2614]: I0801 04:39:31.374957    2614 topology_manager.go:212] "Topology Admit Handler"
Aug 01 04:39:31 minikube kubelet[2614]: I0801 04:39:31.443763    2614 reconciler_common.go:258] "operationExecutor.VerifyControllerAttachedVolume started for volume \"kube-api-access-n9cz9\" (UniqueName: \"kubernetes.io/projected/648c8c3e-cac3-456e-9f23-a3e6ffff7b0e-kube-api-access-n9cz9\") pod \"ecoadventure-service-f8cf977c8-7fvbb\" (UID: \"648c8c3e-cac3-456e-9f23-a3e6ffff7b0e\") " pod="default/ecoadventure-service-f8cf977c8-7fvbb"
Aug 01 04:39:32 minikube kubelet[2614]: I0801 04:39:32.029627    2614 pod_container_deletor.go:80] "Container not found in pod's containers" containerID="2f2e671bfd496793ebde461585ba38b9abf411d10841611abcaecfb96824c594"
Aug 01 04:39:33 minikube kubelet[2614]: E0801 04:39:33.696394    2614 remote_image.go:167] "PullImage from image service failed" err="rpc error: code = Unknown desc = Error response from daemon: pull access denied for ksprwhite/ecoadventure-service, repository does not exist or may require 'docker login': denied: requested access to the resource is denied" image="ksprwhite/ecoadventure-service:latest"
Aug 01 04:39:33 minikube kubelet[2614]: E0801 04:39:33.696512    2614 kuberuntime_image.go:53] "Failed to pull image" err="rpc error: code = Unknown desc = Error response from daemon: pull access denied for ksprwhite/ecoadventure-service, repository does not exist or may require 'docker login': denied: requested access to the resource is denied" image="ksprwhite/ecoadventure-service:latest"
Aug 01 04:39:33 minikube kubelet[2614]: E0801 04:39:33.696683    2614 kuberuntime_manager.go:1212] container &Container{Name:ecoadventure-service,Image:ksprwhite/ecoadventure-service,Command:[],Args:[],WorkingDir:,Ports:[]ContainerPort{},Env:[]EnvVar{},Resources:ResourceRequirements{Limits:ResourceList{},Requests:ResourceList{},Claims:[]ResourceClaim{},},VolumeMounts:[]VolumeMount{VolumeMount{Name:kube-api-access-n9cz9,ReadOnly:true,MountPath:/var/run/secrets/kubernetes.io/serviceaccount,SubPath:,MountPropagation:nil,SubPathExpr:,},},LivenessProbe:nil,ReadinessProbe:nil,Lifecycle:nil,TerminationMessagePath:/dev/termination-log,ImagePullPolicy:Always,SecurityContext:nil,Stdin:false,StdinOnce:false,TTY:false,EnvFrom:[]EnvFromSource{},TerminationMessagePolicy:File,VolumeDevices:[]VolumeDevice{},StartupProbe:nil,ResizePolicy:[]ContainerResizePolicy{},} start failed in pod ecoadventure-service-f8cf977c8-7fvbb_default(648c8c3e-cac3-456e-9f23-a3e6ffff7b0e): ErrImagePull: rpc error: code = Unknown desc = Error response from daemon: pull access denied for ksprwhite/ecoadventure-service, repository does not exist or may require 'docker login': denied: requested access to the resource is denied
Aug 01 04:39:33 minikube kubelet[2614]: E0801 04:39:33.696749    2614 pod_workers.go:1294] "Error syncing pod, skipping" err="failed to \"StartContainer\" for \"ecoadventure-service\" with ErrImagePull: \"rpc error: code = Unknown desc = Error response from daemon: pull access denied for ksprwhite/ecoadventure-service, repository does not exist or may require 'docker login': denied: requested access to the resource is denied\"" pod="default/ecoadventure-service-f8cf977c8-7fvbb" podUID=648c8c3e-cac3-456e-9f23-a3e6ffff7b0e
Aug 01 04:39:34 minikube kubelet[2614]: E0801 04:39:34.058414    2614 pod_workers.go:1294] "Error syncing pod, skipping" err="failed to \"StartContainer\" for \"ecoadventure-service\" with ImagePullBackOff: \"Back-off pulling image \\\"ksprwhite/ecoadventure-service\\\"\"" pod="default/ecoadventure-service-f8cf977c8-7fvbb" podUID=648c8c3e-cac3-456e-9f23-a3e6ffff7b0e
Aug 01 04:39:50 minikube kubelet[2614]: E0801 04:39:50.148413    2614 remote_image.go:167] "PullImage from image service failed" err="rpc error: code = Unknown desc = Error response from daemon: pull access denied for ksprwhite/ecoadventure-service, repository does not exist or may require 'docker login': denied: requested access to the resource is denied" image="ksprwhite/ecoadventure-service:latest"
Aug 01 04:39:50 minikube kubelet[2614]: E0801 04:39:50.148487    2614 kuberuntime_image.go:53] "Failed to pull image" err="rpc error: code = Unknown desc = Error response from daemon: pull access denied for ksprwhite/ecoadventure-service, repository does not exist or may require 'docker login': denied: requested access to the resource is denied" image="ksprwhite/ecoadventure-service:latest"
Aug 01 04:39:50 minikube kubelet[2614]: E0801 04:39:50.148586    2614 kuberuntime_manager.go:1212] container &Container{Name:ecoadventure-service,Image:ksprwhite/ecoadventure-service,Command:[],Args:[],WorkingDir:,Ports:[]ContainerPort{},Env:[]EnvVar{},Resources:ResourceRequirements{Limits:ResourceList{},Requests:ResourceList{},Claims:[]ResourceClaim{},},VolumeMounts:[]VolumeMount{VolumeMount{Name:kube-api-access-n9cz9,ReadOnly:true,MountPath:/var/run/secrets/kubernetes.io/serviceaccount,SubPath:,MountPropagation:nil,SubPathExpr:,},},LivenessProbe:nil,ReadinessProbe:nil,Lifecycle:nil,TerminationMessagePath:/dev/termination-log,ImagePullPolicy:Always,SecurityContext:nil,Stdin:false,StdinOnce:false,TTY:false,EnvFrom:[]EnvFromSource{},TerminationMessagePolicy:File,VolumeDevices:[]VolumeDevice{},StartupProbe:nil,ResizePolicy:[]ContainerResizePolicy{},} start failed in pod ecoadventure-service-f8cf977c8-7fvbb_default(648c8c3e-cac3-456e-9f23-a3e6ffff7b0e): ErrImagePull: rpc error: code = Unknown desc = Error response from daemon: pull access denied for ksprwhite/ecoadventure-service, repository does not exist or may require 'docker login': denied: requested access to the resource is denied
Aug 01 04:39:50 minikube kubelet[2614]: E0801 04:39:50.148621    2614 pod_workers.go:1294] "Error syncing pod, skipping" err="failed to \"StartContainer\" for \"ecoadventure-service\" with ErrImagePull: \"rpc error: code = Unknown desc = Error response from daemon: pull access denied for ksprwhite/ecoadventure-service, repository does not exist or may require 'docker login': denied: requested access to the resource is denied\"" pod="default/ecoadventure-service-f8cf977c8-7fvbb" podUID=648c8c3e-cac3-456e-9f23-a3e6ffff7b0e
Aug 01 04:40:04 minikube kubelet[2614]: E0801 04:40:04.131644    2614 pod_workers.go:1294] "Error syncing pod, skipping" err="failed to \"StartContainer\" for \"ecoadventure-service\" with ImagePullBackOff: \"Back-off pulling image \\\"ksprwhite/ecoadventure-service\\\"\"" pod="default/ecoadventure-service-f8cf977c8-7fvbb" podUID=648c8c3e-cac3-456e-9f23-a3e6ffff7b0e
Aug 01 04:40:20 minikube kubelet[2614]: E0801 04:40:20.138384    2614 remote_image.go:167] "PullImage from image service failed" err="rpc error: code = Unknown desc = Error response from daemon: pull access denied for ksprwhite/ecoadventure-service, repository does not exist or may require 'docker login': denied: requested access to the resource is denied" image="ksprwhite/ecoadventure-service:latest"
Aug 01 04:40:20 minikube kubelet[2614]: E0801 04:40:20.138458    2614 kuberuntime_image.go:53] "Failed to pull image" err="rpc error: code = Unknown desc = Error response from daemon: pull access denied for ksprwhite/ecoadventure-service, repository does not exist or may require 'docker login': denied: requested access to the resource is denied" image="ksprwhite/ecoadventure-service:latest"
Aug 01 04:40:20 minikube kubelet[2614]: E0801 04:40:20.138603    2614 kuberuntime_manager.go:1212] container &Container{Name:ecoadventure-service,Image:ksprwhite/ecoadventure-service,Command:[],Args:[],WorkingDir:,Ports:[]ContainerPort{},Env:[]EnvVar{},Resources:ResourceRequirements{Limits:ResourceList{},Requests:ResourceList{},Claims:[]ResourceClaim{},},VolumeMounts:[]VolumeMount{VolumeMount{Name:kube-api-access-n9cz9,ReadOnly:true,MountPath:/var/run/secrets/kubernetes.io/serviceaccount,SubPath:,MountPropagation:nil,SubPathExpr:,},},LivenessProbe:nil,ReadinessProbe:nil,Lifecycle:nil,TerminationMessagePath:/dev/termination-log,ImagePullPolicy:Always,SecurityContext:nil,Stdin:false,StdinOnce:false,TTY:false,EnvFrom:[]EnvFromSource{},TerminationMessagePolicy:File,VolumeDevices:[]VolumeDevice{},StartupProbe:nil,ResizePolicy:[]ContainerResizePolicy{},} start failed in pod ecoadventure-service-f8cf977c8-7fvbb_default(648c8c3e-cac3-456e-9f23-a3e6ffff7b0e): ErrImagePull: rpc error: code = Unknown desc = Error response from daemon: pull access denied for ksprwhite/ecoadventure-service, repository does not exist or may require 'docker login': denied: requested access to the resource is denied
Aug 01 04:40:20 minikube kubelet[2614]: E0801 04:40:20.138671    2614 pod_workers.go:1294] "Error syncing pod, skipping" err="failed to \"StartContainer\" for \"ecoadventure-service\" with ErrImagePull: \"rpc error: code = Unknown desc = Error response from daemon: pull access denied for ksprwhite/ecoadventure-service, repository does not exist or may require 'docker login': denied: requested access to the resource is denied\"" pod="default/ecoadventure-service-f8cf977c8-7fvbb" podUID=648c8c3e-cac3-456e-9f23-a3e6ffff7b0e
Aug 01 04:40:33 minikube kubelet[2614]: E0801 04:40:33.131587    2614 pod_workers.go:1294] "Error syncing pod, skipping" err="failed to \"StartContainer\" for \"ecoadventure-service\" with ImagePullBackOff: \"Back-off pulling image \\\"ksprwhite/ecoadventure-service\\\"\"" pod="default/ecoadventure-service-f8cf977c8-7fvbb" podUID=648c8c3e-cac3-456e-9f23-a3e6ffff7b0e
Aug 01 04:40:47 minikube kubelet[2614]: E0801 04:40:47.131045    2614 pod_workers.go:1294] "Error syncing pod, skipping" err="failed to \"StartContainer\" for \"ecoadventure-service\" with ImagePullBackOff: \"Back-off pulling image \\\"ksprwhite/ecoadventure-service\\\"\"" pod="default/ecoadventure-service-f8cf977c8-7fvbb" podUID=648c8c3e-cac3-456e-9f23-a3e6ffff7b0e
Aug 01 04:41:00 minikube kubelet[2614]: E0801 04:41:00.131335    2614 pod_workers.go:1294] "Error syncing pod, skipping" err="failed to \"StartContainer\" for \"ecoadventure-service\" with ImagePullBackOff: \"Back-off pulling image \\\"ksprwhite/ecoadventure-service\\\"\"" pod="default/ecoadventure-service-f8cf977c8-7fvbb" podUID=648c8c3e-cac3-456e-9f23-a3e6ffff7b0e
Aug 01 04:41:13 minikube kubelet[2614]: I0801 04:41:13.226844    2614 reconciler_common.go:172] "operationExecutor.UnmountVolume started for volume \"kube-api-access-n9cz9\" (UniqueName: \"kubernetes.io/projected/648c8c3e-cac3-456e-9f23-a3e6ffff7b0e-kube-api-access-n9cz9\") pod \"648c8c3e-cac3-456e-9f23-a3e6ffff7b0e\" (UID: \"648c8c3e-cac3-456e-9f23-a3e6ffff7b0e\") "
Aug 01 04:41:13 minikube kubelet[2614]: I0801 04:41:13.229565    2614 operation_generator.go:878] UnmountVolume.TearDown succeeded for volume "kubernetes.io/projected/648c8c3e-cac3-456e-9f23-a3e6ffff7b0e-kube-api-access-n9cz9" (OuterVolumeSpecName: "kube-api-access-n9cz9") pod "648c8c3e-cac3-456e-9f23-a3e6ffff7b0e" (UID: "648c8c3e-cac3-456e-9f23-a3e6ffff7b0e"). InnerVolumeSpecName "kube-api-access-n9cz9". PluginName "kubernetes.io/projected", VolumeGidValue ""
Aug 01 04:41:13 minikube kubelet[2614]: I0801 04:41:13.328082    2614 reconciler_common.go:300] "Volume detached for volume \"kube-api-access-n9cz9\" (UniqueName: \"kubernetes.io/projected/648c8c3e-cac3-456e-9f23-a3e6ffff7b0e-kube-api-access-n9cz9\") on node \"minikube\" DevicePath \"\""
Aug 01 04:41:14 minikube kubelet[2614]: I0801 04:41:14.135364    2614 kubelet_volumes.go:161] "Cleaned up orphaned pod volumes dir" podUID=648c8c3e-cac3-456e-9f23-a3e6ffff7b0e path="/var/lib/kubelet/pods/648c8c3e-cac3-456e-9f23-a3e6ffff7b0e/volumes"
Aug 01 04:42:24 minikube kubelet[2614]: W0801 04:42:24.452820    2614 sysinfo.go:203] Nodes topology is not available, providing CPU topology
Aug 01 04:47:08 minikube kubelet[2614]: I0801 04:47:08.769267    2614 topology_manager.go:212] "Topology Admit Handler"
Aug 01 04:47:08 minikube kubelet[2614]: I0801 04:47:08.944314    2614 reconciler_common.go:258] "operationExecutor.VerifyControllerAttachedVolume started for volume \"kube-api-access-wx6hn\" (UniqueName: \"kubernetes.io/projected/348aa3de-8e30-4fb0-ba9a-76349880eb10-kube-api-access-wx6hn\") pod \"ecoadventure-service-f8cf977c8-z9xcn\" (UID: \"348aa3de-8e30-4fb0-ba9a-76349880eb10\") " pod="default/ecoadventure-service-f8cf977c8-z9xcn"
Aug 01 04:47:11 minikube kubelet[2614]: E0801 04:47:11.169423    2614 remote_image.go:167] "PullImage from image service failed" err="rpc error: code = Unknown desc = Error response from daemon: pull access denied for ksprwhite/ecoadventure-service, repository does not exist or may require 'docker login': denied: requested access to the resource is denied" image="ksprwhite/ecoadventure-service:latest"
Aug 01 04:47:11 minikube kubelet[2614]: E0801 04:47:11.169564    2614 kuberuntime_image.go:53] "Failed to pull image" err="rpc error: code = Unknown desc = Error response from daemon: pull access denied for ksprwhite/ecoadventure-service, repository does not exist or may require 'docker login': denied: requested access to the resource is denied" image="ksprwhite/ecoadventure-service:latest"
Aug 01 04:47:11 minikube kubelet[2614]: E0801 04:47:11.171120    2614 kuberuntime_manager.go:1212] container &Container{Name:ecoadventure-service,Image:ksprwhite/ecoadventure-service,Command:[],Args:[],WorkingDir:,Ports:[]ContainerPort{},Env:[]EnvVar{},Resources:ResourceRequirements{Limits:ResourceList{},Requests:ResourceList{},Claims:[]ResourceClaim{},},VolumeMounts:[]VolumeMount{VolumeMount{Name:kube-api-access-wx6hn,ReadOnly:true,MountPath:/var/run/secrets/kubernetes.io/serviceaccount,SubPath:,MountPropagation:nil,SubPathExpr:,},},LivenessProbe:nil,ReadinessProbe:nil,Lifecycle:nil,TerminationMessagePath:/dev/termination-log,ImagePullPolicy:Always,SecurityContext:nil,Stdin:false,StdinOnce:false,TTY:false,EnvFrom:[]EnvFromSource{},TerminationMessagePolicy:File,VolumeDevices:[]VolumeDevice{},StartupProbe:nil,ResizePolicy:[]ContainerResizePolicy{},} start failed in pod ecoadventure-service-f8cf977c8-z9xcn_default(348aa3de-8e30-4fb0-ba9a-76349880eb10): ErrImagePull: rpc error: code = Unknown desc = Error response from daemon: pull access denied for ksprwhite/ecoadventure-service, repository does not exist or may require 'docker login': denied: requested access to the resource is denied
Aug 01 04:47:11 minikube kubelet[2614]: E0801 04:47:11.171268    2614 pod_workers.go:1294] "Error syncing pod, skipping" err="failed to \"StartContainer\" for \"ecoadventure-service\" with ErrImagePull: \"rpc error: code = Unknown desc = Error response from daemon: pull access denied for ksprwhite/ecoadventure-service, repository does not exist or may require 'docker login': denied: requested access to the resource is denied\"" pod="default/ecoadventure-service-f8cf977c8-z9xcn" podUID=348aa3de-8e30-4fb0-ba9a-76349880eb10
Aug 01 04:47:11 minikube kubelet[2614]: E0801 04:47:11.211829    2614 pod_workers.go:1294] "Error syncing pod, skipping" err="failed to \"StartContainer\" for \"ecoadventure-service\" with ImagePullBackOff: \"Back-off pulling image \\\"ksprwhite/ecoadventure-service\\\"\"" pod="default/ecoadventure-service-f8cf977c8-z9xcn" podUID=348aa3de-8e30-4fb0-ba9a-76349880eb10
Aug 01 04:47:24 minikube kubelet[2614]: W0801 04:47:24.453279    2614 sysinfo.go:203] Nodes topology is not available, providing CPU topology
Aug 01 04:47:26 minikube kubelet[2614]: E0801 04:47:26.261446    2614 remote_image.go:167] "PullImage from image service failed" err="rpc error: code = Unknown desc = Error response from daemon: pull access denied for ksprwhite/ecoadventure-service, repository does not exist or may require 'docker login': denied: requested access to the resource is denied" image="ksprwhite/ecoadventure-service:latest"
Aug 01 04:47:26 minikube kubelet[2614]: E0801 04:47:26.261578    2614 kuberuntime_image.go:53] "Failed to pull image" err="rpc error: code = Unknown desc = Error response from daemon: pull access denied for ksprwhite/ecoadventure-service, repository does not exist or may require 'docker login': denied: requested access to the resource is denied" image="ksprwhite/ecoadventure-service:latest"
Aug 01 04:47:26 minikube kubelet[2614]: E0801 04:47:26.261859    2614 kuberuntime_manager.go:1212] container &Container{Name:ecoadventure-service,Image:ksprwhite/ecoadventure-service,Command:[],Args:[],WorkingDir:,Ports:[]ContainerPort{},Env:[]EnvVar{},Resources:ResourceRequirements{Limits:ResourceList{},Requests:ResourceList{},Claims:[]ResourceClaim{},},VolumeMounts:[]VolumeMount{VolumeMount{Name:kube-api-access-wx6hn,ReadOnly:true,MountPath:/var/run/secrets/kubernetes.io/serviceaccount,SubPath:,MountPropagation:nil,SubPathExpr:,},},LivenessProbe:nil,ReadinessProbe:nil,Lifecycle:nil,TerminationMessagePath:/dev/termination-log,ImagePullPolicy:Always,SecurityContext:nil,Stdin:false,StdinOnce:false,TTY:false,EnvFrom:[]EnvFromSource{},TerminationMessagePolicy:File,VolumeDevices:[]VolumeDevice{},StartupProbe:nil,ResizePolicy:[]ContainerResizePolicy{},} start failed in pod ecoadventure-service-f8cf977c8-z9xcn_default(348aa3de-8e30-4fb0-ba9a-76349880eb10): ErrImagePull: rpc error: code = Unknown desc = Error response from daemon: pull access denied for ksprwhite/ecoadventure-service, repository does not exist or may require 'docker login': denied: requested access to the resource is denied
Aug 01 04:47:26 minikube kubelet[2614]: E0801 04:47:26.262088    2614 pod_workers.go:1294] "Error syncing pod, skipping" err="failed to \"StartContainer\" for \"ecoadventure-service\" with ErrImagePull: \"rpc error: code = Unknown desc = Error response from daemon: pull access denied for ksprwhite/ecoadventure-service, repository does not exist or may require 'docker login': denied: requested access to the resource is denied\"" pod="default/ecoadventure-service-f8cf977c8-z9xcn" podUID=348aa3de-8e30-4fb0-ba9a-76349880eb10
Aug 01 04:47:37 minikube kubelet[2614]: E0801 04:47:37.133476    2614 pod_workers.go:1294] "Error syncing pod, skipping" err="failed to \"StartContainer\" for \"ecoadventure-service\" with ImagePullBackOff: \"Back-off pulling image \\\"ksprwhite/ecoadventure-service\\\"\"" pod="default/ecoadventure-service-f8cf977c8-z9xcn" podUID=348aa3de-8e30-4fb0-ba9a-76349880eb10
Aug 01 04:47:53 minikube kubelet[2614]: E0801 04:47:53.239535    2614 remote_image.go:167] "PullImage from image service failed" err="rpc error: code = Unknown desc = Error response from daemon: pull access denied for ksprwhite/ecoadventure-service, repository does not exist or may require 'docker login': denied: requested access to the resource is denied" image="ksprwhite/ecoadventure-service:latest"
Aug 01 04:47:53 minikube kubelet[2614]: E0801 04:47:53.239657    2614 kuberuntime_image.go:53] "Failed to pull image" err="rpc error: code = Unknown desc = Error response from daemon: pull access denied for ksprwhite/ecoadventure-service, repository does not exist or may require 'docker login': denied: requested access to the resource is denied" image="ksprwhite/ecoadventure-service:latest"
Aug 01 04:47:53 minikube kubelet[2614]: E0801 04:47:53.239822    2614 kuberuntime_manager.go:1212] container &Container{Name:ecoadventure-service,Image:ksprwhite/ecoadventure-service,Command:[],Args:[],WorkingDir:,Ports:[]ContainerPort{},Env:[]EnvVar{},Resources:ResourceRequirements{Limits:ResourceList{},Requests:ResourceList{},Claims:[]ResourceClaim{},},VolumeMounts:[]VolumeMount{VolumeMount{Name:kube-api-access-wx6hn,ReadOnly:true,MountPath:/var/run/secrets/kubernetes.io/serviceaccount,SubPath:,MountPropagation:nil,SubPathExpr:,},},LivenessProbe:nil,ReadinessProbe:nil,Lifecycle:nil,TerminationMessagePath:/dev/termination-log,ImagePullPolicy:Always,SecurityContext:nil,Stdin:false,StdinOnce:false,TTY:false,EnvFrom:[]EnvFromSource{},TerminationMessagePolicy:File,VolumeDevices:[]VolumeDevice{},StartupProbe:nil,ResizePolicy:[]ContainerResizePolicy{},} start failed in pod ecoadventure-service-f8cf977c8-z9xcn_default(348aa3de-8e30-4fb0-ba9a-76349880eb10): ErrImagePull: rpc error: code = Unknown desc = Error response from daemon: pull access denied for ksprwhite/ecoadventure-service, repository does not exist or may require 'docker login': denied: requested access to the resource is denied
Aug 01 04:47:53 minikube kubelet[2614]: E0801 04:47:53.239889    2614 pod_workers.go:1294] "Error syncing pod, skipping" err="failed to \"StartContainer\" for \"ecoadventure-service\" with ErrImagePull: \"rpc error: code = Unknown desc = Error response from daemon: pull access denied for ksprwhite/ecoadventure-service, repository does not exist or may require 'docker login': denied: requested access to the resource is denied\"" pod="default/ecoadventure-service-f8cf977c8-z9xcn" podUID=348aa3de-8e30-4fb0-ba9a-76349880eb10
Aug 01 04:48:06 minikube kubelet[2614]: E0801 04:48:06.138013    2614 pod_workers.go:1294] "Error syncing pod, skipping" err="failed to \"StartContainer\" for \"ecoadventure-service\" with ImagePullBackOff: \"Back-off pulling image \\\"ksprwhite/ecoadventure-service\\\"\"" pod="default/ecoadventure-service-f8cf977c8-z9xcn" podUID=348aa3de-8e30-4fb0-ba9a-76349880eb10
Aug 01 04:48:18 minikube kubelet[2614]: E0801 04:48:18.132336    2614 pod_workers.go:1294] "Error syncing pod, skipping" err="failed to \"StartContainer\" for \"ecoadventure-service\" with ImagePullBackOff: \"Back-off pulling image \\\"ksprwhite/ecoadventure-service\\\"\"" pod="default/ecoadventure-service-f8cf977c8-z9xcn" podUID=348aa3de-8e30-4fb0-ba9a-76349880eb10
Aug 01 04:48:33 minikube kubelet[2614]: E0801 04:48:33.132247    2614 pod_workers.go:1294] "Error syncing pod, skipping" err="failed to \"StartContainer\" for \"ecoadventure-service\" with ImagePullBackOff: \"Back-off pulling image \\\"ksprwhite/ecoadventure-service\\\"\"" pod="default/ecoadventure-service-f8cf977c8-z9xcn" podUID=348aa3de-8e30-4fb0-ba9a-76349880eb10
Aug 01 04:48:45 minikube kubelet[2614]: E0801 04:48:45.173923    2614 remote_image.go:167] "PullImage from image service failed" err="rpc error: code = Unknown desc = Error response from daemon: pull access denied for ksprwhite/ecoadventure-service, repository does not exist or may require 'docker login': denied: requested access to the resource is denied" image="ksprwhite/ecoadventure-service:latest"
Aug 01 04:48:45 minikube kubelet[2614]: E0801 04:48:45.173992    2614 kuberuntime_image.go:53] "Failed to pull image" err="rpc error: code = Unknown desc = Error response from daemon: pull access denied for ksprwhite/ecoadventure-service, repository does not exist or may require 'docker login': denied: requested access to the resource is denied" image="ksprwhite/ecoadventure-service:latest"
Aug 01 04:48:45 minikube kubelet[2614]: E0801 04:48:45.174096    2614 kuberuntime_manager.go:1212] container &Container{Name:ecoadventure-service,Image:ksprwhite/ecoadventure-service,Command:[],Args:[],WorkingDir:,Ports:[]ContainerPort{},Env:[]EnvVar{},Resources:ResourceRequirements{Limits:ResourceList{},Requests:ResourceList{},Claims:[]ResourceClaim{},},VolumeMounts:[]VolumeMount{VolumeMount{Name:kube-api-access-wx6hn,ReadOnly:true,MountPath:/var/run/secrets/kubernetes.io/serviceaccount,SubPath:,MountPropagation:nil,SubPathExpr:,},},LivenessProbe:nil,ReadinessProbe:nil,Lifecycle:nil,TerminationMessagePath:/dev/termination-log,ImagePullPolicy:Always,SecurityContext:nil,Stdin:false,StdinOnce:false,TTY:false,EnvFrom:[]EnvFromSource{},TerminationMessagePolicy:File,VolumeDevices:[]VolumeDevice{},StartupProbe:nil,ResizePolicy:[]ContainerResizePolicy{},} start failed in pod ecoadventure-service-f8cf977c8-z9xcn_default(348aa3de-8e30-4fb0-ba9a-76349880eb10): ErrImagePull: rpc error: code = Unknown desc = Error response from daemon: pull access denied for ksprwhite/ecoadventure-service, repository does not exist or may require 'docker login': denied: requested access to the resource is denied
Aug 01 04:48:45 minikube kubelet[2614]: E0801 04:48:45.174136    2614 pod_workers.go:1294] "Error syncing pod, skipping" err="failed to \"StartContainer\" for \"ecoadventure-service\" with ErrImagePull: \"rpc error: code = Unknown desc = Error response from daemon: pull access denied for ksprwhite/ecoadventure-service, repository does not exist or may require 'docker login': denied: requested access to the resource is denied\"" pod="default/ecoadventure-service-f8cf977c8-z9xcn" podUID=348aa3de-8e30-4fb0-ba9a-76349880eb10
Aug 01 04:48:59 minikube kubelet[2614]: E0801 04:48:59.131332    2614 pod_workers.go:1294] "Error syncing pod, skipping" err="failed to \"StartContainer\" for \"ecoadventure-service\" with ImagePullBackOff: \"Back-off pulling image \\\"ksprwhite/ecoadventure-service\\\"\"" pod="default/ecoadventure-service-f8cf977c8-z9xcn" podUID=348aa3de-8e30-4fb0-ba9a-76349880eb10
Aug 01 04:49:10 minikube kubelet[2614]: E0801 04:49:10.132902    2614 pod_workers.go:1294] "Error syncing pod, skipping" err="failed to \"StartContainer\" for \"ecoadventure-service\" with ImagePullBackOff: \"Back-off pulling image \\\"ksprwhite/ecoadventure-service\\\"\"" pod="default/ecoadventure-service-f8cf977c8-z9xcn" podUID=348aa3de-8e30-4fb0-ba9a-76349880eb10
Aug 01 04:49:25 minikube kubelet[2614]: E0801 04:49:25.131502    2614 pod_workers.go:1294] "Error syncing pod, skipping" err="failed to \"StartContainer\" for \"ecoadventure-service\" with ImagePullBackOff: \"Back-off pulling image \\\"ksprwhite/ecoadventure-service\\\"\"" pod="default/ecoadventure-service-f8cf977c8-z9xcn" podUID=348aa3de-8e30-4fb0-ba9a-76349880eb10


==> storage-provisioner [2c04cd90aa08] <==
I0801 04:37:48.174530       1 storage_provisioner.go:116] Initializing the minikube storage provisioner...
I0801 04:37:48.190034       1 storage_provisioner.go:141] Storage provisioner initialized, now starting service!
I0801 04:37:48.190105       1 leaderelection.go:243] attempting to acquire leader lease kube-system/k8s.io-minikube-hostpath...
I0801 04:37:48.227393       1 leaderelection.go:253] successfully acquired lease kube-system/k8s.io-minikube-hostpath
I0801 04:37:48.227625       1 event.go:282] Event(v1.ObjectReference{Kind:"Endpoints", Namespace:"kube-system", Name:"k8s.io-minikube-hostpath", UID:"9be4189f-f50d-4814-b09c-8c0a4426b62a", APIVersion:"v1", ResourceVersion:"387", FieldPath:""}): type: 'Normal' reason: 'LeaderElection' minikube_9d29fdaf-e37f-440a-923d-9c775fb59152 became leader
I0801 04:37:48.227812       1 controller.go:835] Starting provisioner controller k8s.io/minikube-hostpath_minikube_9d29fdaf-e37f-440a-923d-9c775fb59152!
I0801 04:37:48.328489       1 controller.go:884] Started provisioner controller k8s.io/minikube-hostpath_minikube_9d29fdaf-e37f-440a-923d-9c775fb59152!


==> storage-provisioner [da21afd06d31] <==
I0801 04:37:37.828537       1 storage_provisioner.go:116] Initializing the minikube storage provisioner...
F0801 04:37:47.835576       1 main.go:39] error getting server version: Get "https://10.96.0.1:443/version?timeout=32s": net/http: TLS handshake timeout

